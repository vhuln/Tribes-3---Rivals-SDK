#pragma once




namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x521 (0xAD1 - 0x5B0)
// WidgetBlueprintGeneratedClass UI_Equipment_Item.UI_Equipment_Item_C
class UUI_Equipment_Item_C : public UValRHWidget
{
public:
	struct Engine_PointerToUberGraphFrame        UberGraphFrame;                                    // 0x5B0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                      AnimOnHoldComplete;                                // 0x5B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                      AnimateIsSelected;                                 // 0x5C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                      AnimOnTimerComplete;                               // 0x5C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                      AnimOnItemUpdated;                                 // 0x5D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                      AnimateHighlight;                                  // 0x5D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                            AmmoCount;                                         // 0x5E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                        AmmoGroup;                                         // 0x5E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                AmmoTypeIcon;                                      // 0x5F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              ClassIncompatible;                                 // 0x5F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              Compatible;                                        // 0x600(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              CooldownGroup;                                     // 0x608(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                CooldownTimer;                                     // 0x610(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       CountSwitcher;                                     // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            CountText;                                         // 0x620(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                DefaultSlotIcon;                                   // 0x628(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                DefaultSlotRarity;                                 // 0x630(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       DisabledSlotSwitcher;                              // 0x638(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       DisplaySwitcher;                                   // 0x640(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                ExoticOverlay;                                     // 0x648(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenuAnchor*                           GamepadMenuAnchor;                                 // 0x650(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          HighlightGroup;                                    // 0x658(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       HighlightSwitcher;                                 // 0x660(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              HoldProgress;                                      // 0x668(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                HoldProgressMat;                                   // 0x670(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Hover;                                             // 0x678(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Hover_1;                                           // 0x680(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URHAsyncImage*                         Icon;                                              // 0x688(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              Incompatible;                                      // 0x690(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              InventoryItemDisplay;                              // 0x698(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              ItemGroup;                                         // 0x6A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                ItemTypeIcon;                                      // 0x6A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              ItemWrapper;                                       // 0x6B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                LockIcon_1;                                        // 0x6B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                MythicOverlay;                                     // 0x6C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          RarityCanvas;                                      // 0x6C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                RarityGradient_1;                                  // 0x6D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       RarityOverlaySwitcher;                             // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                               RarityWrapper;                                     // 0x6E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                RedX;                                              // 0x6E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                RedX_1;                                            // 0x6F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          SelectedGroup;                                     // 0x6F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Sheen;                                             // 0x700(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                              SizeBox;                                           // 0x708(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                              SlotIncompatibleOverlay;                           // 0x710(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                       TransientBackgroundSwitcher;                       // 0x718(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                       Height;                                            // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                       Width;                                             // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            OnClicked;                                         // 0x730(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnHovered;                                         // 0x740(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnUnhovered;                                       // 0x750(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct GameplayTags_GameplayTag              CachedSlot;                                        // 0x760(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct Valhalla_InventoryItem                CachedItem;                                        // 0x768(0xC8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         CachedValid;                                       // 0x830(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1567[0x7];                                     // Fixing Size After Last Property  
	class UValItemAsset*                         CachedAsset;                                       // 0x838(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct Engine_TimerHandle                    CachedTimer;                                       // 0x840(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	enum class ERarity                           CachedRarity;                                      // 0x848(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1570[0x3];                                     // Fixing Size After Last Property  
	int32                                        CachedItemId;                                      // 0x84C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CachedQuantity;                                    // 0x850(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1572[0x4];                                     // Fixing Size After Last Property  
	int64                                        CachedInventoryId;                                 // 0x858(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_Equipment_Comparison_C*    CachedTooltip;                                     // 0x860(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         CachedUpdated;                                     // 0x868(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1578[0x7];                                     // Fixing Size After Last Property  
	class UTexture2D*                            Empty_Slot_Texture;                                // 0x870(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         CachedInitialized;                                 // 0x878(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CachedIsHovered;                                   // 0x879(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_157E[0x6];                                     // Fixing Size After Last Property  
	struct InputCore_Key                         CachedKeyPressed;                                  // 0x880(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                         CachedOnCooldown;                                  // 0x898(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CachedIsLeftMouseDown;                             // 0x899(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_1584[0x6];                                     // Fixing Size After Last Property  
	struct Valhalla_InventorySlot                DefaultSlot;                                       // 0x8A0(0xD0)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                         DisallowDrag;                                      // 0x970(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_158F[0x7];                                     // Fixing Size After Last Property  
	FMulticastInlineDelegateProperty_            OnDragStart;                                       // 0x978(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnDragEnd;                                         // 0x988(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         DisallowUnequip;                                   // 0x998(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                         UsesCooldownEquipTimer;                            // 0x999(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_1592[0x2];                                     // Fixing Size After Last Property  
	float                                        EQUIP_COOLDOWN_TIMER;                              // 0x99C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct GameplayTags_GameplayTag, class UTexture2D*> IconMap;                                           // 0x9A0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct GameplayTags_GameplayTagContainer     BlacklistTags;                                     // 0x9F0(0x20)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<struct Valhalla_InventoryMod>         CachedInventoryMods;                               // 0xA10(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AValInventoryManager*                  CachedInventoryManager;                            // 0xA20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<enum class ERarity, double>             Rarity_Color_Atlas_Map;                            // 0xA28(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         CachedIsLocked;                                    // 0xA78(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CachedIsLobby;                                     // 0xA79(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CachedSlotWasUsed;                                 // 0xA7A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IgnoreClassCompatibility;                          // 0xA7B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_15A0[0x4];                                     // Fixing Size After Last Property  
	TMap<struct GameplayTags_GameplayTag, class UTexture2D*> IconMap_Old;                                       // 0xA80(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	enum class EMenuPlacement                    CachedTooltipPlacement;                            // 0xAD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UUI_Equipment_Item_C* GetDefaultObj();

	void SetHoldInProgress(bool bHoldInProgress, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateHoldProgress(double HoldProgress, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_SetScalarParameterValue_Value_ImplicitCast);
	void UpdateTooltipPlacement(enum class EMenuPlacement Placement);
	bool IsEquippedItem(bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void OnMoveOutOfSecureSlot(class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_IsValid_ReturnValue);
	void OnMoveToSecureSlot(const struct Valhalla_InventoryItem& NewLocalVar_2, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_IsValid_ReturnValue);
	class UWidget* OnGetMenuContent(bool CallFunc_IsEquippedItem_ReturnValue, bool CallFunc_IsEquippedItem_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UUI_Tooltip_Equipment_Comparison_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void UpdateClassCompatible(bool* Compatible, bool LocalIsCompatible, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_IsItemClassCompatible_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void Check_Dog_Tag_and_Relation(bool* IsDogTag, bool* IsFriendly, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AValPlayerController* CallFunc_GetPlayer_ReturnValue, class AValTeamState* CallFunc_GetTeamState_ReturnValue, TArray<class UObject*>& CallFunc_GetMembers_OutMembers, bool CallFunc_IsValid_ReturnValue_1, TArray<class UObject*>& CallFunc_GetCachedArray_ReturnValue, class UObject* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class AValPlayerState_Frontier* K2Node_DynamicCast_AsVal_Player_State_Frontier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetPlayerId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct GameplayTags_GameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue);
	void SetRarityOverlay(enum class ERarity Selection, bool K2Node_SwitchEnum_CmpSuccess);
	void UpdateSlotLocked(bool IsLocked, int32 CallFunc_SelectInt_ReturnValue);
	void IsLockedSlot(const struct Valhalla_InventorySlot& Slot, bool* NewParam, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, int32 CallFunc_GetActiveStashSize_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void Update_Hover_State(bool Value, double CallFunc_SelectFloat_ReturnValue, float CallFunc_SetRenderOpacity_InOpacity_ImplicitCast);
	void UpdateIconExplicit(TSoftObjectPtr<class UTexture2D> Texture);
	void TriggerItemChangedAnim(bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);
	void UpdateRarityExplicit(enum class ERarity Rarity, const struct GameplayTags_GameplayTagContainer& EquipmentTags, bool LocalIsTransient, bool CallFunc_IsValid_ReturnValue, bool CallFunc_MatchesAnyTags_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, double CallFunc_SelectFloat_ReturnValue, const struct CoreUObject_LinearColor& CallFunc_GetColorFromRarity_ReturnValue, bool CallFunc_HandleAsTransient_Value, bool CallFunc_NotEqual_ByteByte_ReturnValue, double CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class FName CallFunc_MakeLiteralName_ReturnValue_1, const struct CoreUObject_LinearColor& CallFunc_GetColorFromRarity_ReturnValue_1, float CallFunc_SetRenderOpacity_InOpacity_ImplicitCast, float CallFunc_SetScalarParameterValue_Value_ImplicitCast);
	void UpdateQuantityExplicit(int32 Count, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_GetEmptyText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue);
	void UpdateRemainderCount(int32 RemainderCount, const struct SlateCore_SlateColor& K2Node_MakeStruct_SlateColor, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_GetEmptyText_ReturnValue, int32 CallFunc_GetMaxStackSize_Value, int32 CallFunc_GetMaxStackSize_Max_Stack_Size, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlot_EquipSlot, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_MatchesTag_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool Temp_bool_Variable, bool CallFunc_BooleanOR_ReturnValue_1, class FText K2Node_Select_Default);
	void GetEquipSlotForSlotEvent(const struct Valhalla_InventorySlot& InventorySlot, int32 ItemId, struct GameplayTags_GameplayTag* EquipSlot, bool* Valid, const struct Valhalla_InventorySlot& LocalSlot, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager_1, class UValItemAsset* CallFunc_GetItemAssetById_ItemAsset, bool CallFunc_GetItemAssetById_ReturnValue, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlotForRequestedSlot_EquipSlot, bool CallFunc_GetEquipSlotForRequestedSlot_ReturnValue);
	void OnItemAltSelected(class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_CharacterHasBlockItemDropTag_HasBlockItemDropTag, bool CallFunc_BooleanOR_ReturnValue);
	void CharacterHasBlockItemDropTag(bool* HasBlockItemDropTag, class AValCharacter* NewLocalVar_0, class AValCharacter* CallFunc_GetCharacter_ReturnValue, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void GetInventoryManager(class AValInventoryManager** InventoryManager, class AValInventoryManager* CallFunc_GetInventoryManager_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void HandleAsTransient(bool* Value, bool CallFunc_IsValid_ReturnValue, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_GetTransientItemLocking_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void Update_Weapon_Type_Icon(const struct GameplayTags_GameplayTag& Tag, const struct GameplayTags_GameplayTag& ConsumableTag, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, TArray<struct GameplayTags_GameplayTag>& CallFunc_BreakGameplayTagContainer_GameplayTags, int32 CallFunc_Add_IntInt_ReturnValue, const struct GameplayTags_GameplayTag& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UTexture2D* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class UTexture2D* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
	void On_Cooldown_Ended(class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);
	void StartCooldownTimer(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct Engine_TimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void Update_Cooldown_State(bool Value, double CallFunc_SelectFloat_ReturnValue, float CallFunc_SetRenderOpacity_InOpacity_ImplicitCast);
	void OnItemShiftSelected(class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CharacterHasBlockItemDropTag_HasBlockItemDropTag, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1);
	void GetMaxStackSize(int32* Value, int32* Max_Stack_Size, bool CallFunc_IsValid_ReturnValue);
	void OnDragLeave(const struct SlateCore_PointerEvent& PointerEvent, class UDragDropOperation* Operation, class UBP_DragDrop_EquipmentItem_C* K2Node_DynamicCast_AsBP_Drag_Drop_Equipment_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsCompatibleSlot_Value, bool CallFunc_Not_PreBool_ReturnValue);
	void OnDragEnter(const struct SlateCore_Geometry& MyGeometry, const struct SlateCore_PointerEvent& PointerEvent, class UDragDropOperation* Operation, class UBP_DragDrop_EquipmentItem_C* K2Node_DynamicCast_AsBP_Drag_Drop_Equipment_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsCompatibleSlot_Value, bool CallFunc_Not_PreBool_ReturnValue);
	void OnDragCancelled(struct SlateCore_PointerEvent& PointerEvent, class UDragDropOperation* Operation, bool CallFunc_UpdateItem_Valid, bool CallFunc_UpdateItem_Updated);
	bool OnDrop(const struct SlateCore_Geometry& MyGeometry, const struct SlateCore_PointerEvent& PointerEvent, class UDragDropOperation* Operation, class UBP_DragDrop_EquipmentItem_C* LocalDragOperation, const struct Valhalla_InventorySlot& DraggedSlot, bool CallFunc_IsLockedSlot_NewParam, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, class UBP_DragDrop_EquipmentItem_C* K2Node_DynamicCast_AsBP_Drag_Drop_Equipment_Item, bool K2Node_DynamicCast_bSuccess);
	struct UMG_EventReply OnMouseButtonDoubleClick(const struct SlateCore_Geometry& InMyGeometry, struct SlateCore_PointerEvent& InMouseEvent, bool CallFunc_HandleAsTransient_Value, bool CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct UMG_EventReply& K2Node_MakeStruct_EventReply, const struct UMG_EventReply& K2Node_MakeStruct_EventReply_1);
	void UpdateDefaultSlotIcon(bool CallFunc_IsValid_ReturnValue);
	void Construct(class AGameStateBase* CallFunc_GetGameState_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue);
	void PreConstruct(bool IsDesignTime);
	struct UMG_EventReply OnMouseButtonDown(const struct SlateCore_Geometry& MyGeometry, struct SlateCore_PointerEvent& MouseEvent, const struct InputCore_Key& NewLocalVar, bool CallFunc_HandleAsTransient_Value, const struct Engine_SlateModifierKeysState& CallFunc_GetModifierKeysState_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_ModifierKeysState_IsAltDown_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue, bool CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1, const struct Engine_SlateModifierKeysState& CallFunc_GetModifierKeysState_ReturnValue_1, bool CallFunc_ModifierKeysState_IsShiftDown_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct UMG_EventReply& CallFunc_DetectDragIfPressed_ReturnValue);
	struct UMG_EventReply OnMouseButtonUp(const struct SlateCore_Geometry& MyGeometry, struct SlateCore_PointerEvent& MouseEvent, const struct UMG_EventReply& K2Node_MakeStruct_EventReply);
	void OnDragDetected(const struct SlateCore_Geometry& MyGeometry, struct SlateCore_PointerEvent& PointerEvent, class UDragDropOperation** Operation, bool IsSplitAction, int32 LocalQuantityToTransfer, double ScaleMultiplier, class UUI_EquipmentItem_DragWidget_C* CallFunc_Create_ReturnValue, const struct Engine_SlateModifierKeysState& CallFunc_GetModifierKeysState_ReturnValue, bool CallFunc_ModifierKeysState_IsShiftDown_ReturnValue, int32 CallFunc_GetMaxStackSize_Value, int32 CallFunc_GetMaxStackSize_Max_Stack_Size, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlot_EquipSlot, bool CallFunc_MatchesTag_ReturnValue, class UBP_DragDrop_EquipmentItem_C* CallFunc_CreateDragDropOperation_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, double CallFunc_Conv_IntToDouble_ReturnValue, double CallFunc_SafeDivide_ReturnValue, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_Max_ReturnValue, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);
	void OnItemSelected(const struct Valhalla_InventoryItem& NewLocalVar_2, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, bool CallFunc_IsValid_ReturnValue);
	void OnItemPressed();
	class UWidget* GetToolTipWidget(bool CallFunc_IsEquippedItem_ReturnValue, bool CallFunc_IsEquippedItem_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class UUI_Tooltip_Equipment_Comparison_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void HasItemChanged(struct Valhalla_InventoryItem& InventoryItem, bool* HasChanged, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct Valhalla_InventoryMod& CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_2, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_GuidGuid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5, double CallFunc_NotEqual_DoubleDouble_B_ImplicitCast, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2, double CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1, double CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2);
	void ShowCannotUse(bool Show, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue);
	void GetSlotType(int32* SlotType);
	void GetEquipSlot(struct GameplayTags_GameplayTag* EquipSlot, bool CallFunc_IsValid_ReturnValue);
	void GetTexture(TSoftObjectPtr<class UTexture2D>* Texture, bool CallFunc_Check_Dog_Tag_and_Relation_isDogTag, bool CallFunc_Check_Dog_Tag_and_Relation_isFriendly, bool CallFunc_IsValid_ReturnValue);
	void GetSlotId(int32* SlotId);
	void GetRarity(enum class ERarity* Rarity, bool CallFunc_Check_Dog_Tag_and_Relation_isDogTag, bool CallFunc_Check_Dog_Tag_and_Relation_isFriendly, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);
	void IsCompatibleSlot(const struct Valhalla_InventorySlot& StartSlot, const struct GameplayTags_GameplayTagContainer& TagContainer, int32 ItemId, int32 TransferCount, int32 StackCount, bool* Value, bool NewLocalVar_1, const struct GameplayTags_GameplayTag& LocalEquipSlot, const struct GameplayTags_GameplayTag& LocalStartSlot, bool CallFunc_MatchesTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct GameplayTags_GameplayTagContainer& CallFunc_MakeGameplayTagContainerFromTag_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_HasTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlotForSlotEvent_EquipSlot, bool CallFunc_GetEquipSlotForSlotEvent_Valid, int32 CallFunc_GetSlotId_SlotId, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlotBySlotId_EquipSlot, bool CallFunc_GetEquipSlotBySlotId_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue_1, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager_1, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_IsItemIdSecureSlotBlackListed_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_MatchesTag_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_5, bool CallFunc_MatchesTag_ReturnValue_2, bool CallFunc_MatchesTag_ReturnValue_3, int32 CallFunc_GetSlotType_SlotType, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4);
	void UpdateDisplaySize(float CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast, float CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast);
	void UpdateFromAsset(class UValItemAsset* ItemAsset, bool bLocalHasChanged, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlot_EquipSlot, TSoftObjectPtr<class UTexture2D> CallFunc_GetTexture_Texture, bool CallFunc_SetBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void UpdateTransient(const struct CoreUObject_Vector2D& Temp_struct_Variable, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct CoreUObject_LinearColor& CallFunc_SelectColor_ReturnValue, const struct CoreUObject_Vector2D& Temp_struct_Variable_1, bool Temp_bool_Variable, const struct CoreUObject_Vector2D& K2Node_Select_Default, bool CallFunc_HandleAsTransient_Value);
	void UpdateHighlight(bool bShow, bool bCompatible, int32 CallFunc_SelectInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);
	void UpdateSelected(bool Value);
	void UpdateEmpty(bool bLocalHasChanged, bool CallFunc_SetBool_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateCount(const struct GameplayTags_GameplayTag& LocalEquipSlot, int32 LocalMaxStackSize, int32 LocalQuantity, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class FText Temp_text_Variable, bool CallFunc_MatchesTag_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlot_EquipSlot, bool CallFunc_MatchesTag_ReturnValue_1, class FText CallFunc_Conv_IntToText_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, const struct SlateCore_SlateColor& K2Node_MakeStruct_SlateColor, const struct SlateCore_SlateColor& K2Node_MakeStruct_SlateColor_1, class UTexture2D* Temp_object_Variable, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class UTexture2D* Temp_object_Variable_1, const struct SlateCore_SlateColor& K2Node_Select_Default, bool Temp_bool_Variable_2, int32 CallFunc_GetMaxStackSize_Value, int32 CallFunc_GetMaxStackSize_Max_Stack_Size, bool CallFunc_Greater_IntInt_ReturnValue_2, class UTexture2D* K2Node_Select_Default_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, class FText K2Node_Select_Default_2);
	void UpdateRarity(bool LocalIsTransient, enum class ERarity LocalRarity, enum class ERarity CallFunc_GetRarity_Rarity);
	void UpdateItem(const struct Valhalla_InventoryItem& InventoryItem, bool DataOnly, bool* Valid, bool* Updated, bool LocalHasChanged, bool CallFunc_IsEquippedItem_ReturnValue, bool CallFunc_UpdateClassCompatible_Compatible, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AValInventoryManager* CallFunc_GetInventoryManager_InventoryManager, class UValItemAsset* CallFunc_GetItemAssetById_ItemAsset, bool CallFunc_GetItemAssetById_ReturnValue, const struct GameplayTags_GameplayTag& CallFunc_GetEquipSlot_EquipSlot, TSoftObjectPtr<class UTexture2D> CallFunc_GetTexture_Texture, bool CallFunc_SetBool_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void OnMouseEnter(const struct SlateCore_Geometry& MyGeometry, struct SlateCore_PointerEvent& MouseEvent);
	void OnMouseLeave(struct SlateCore_PointerEvent& MouseEvent);
	void Tick(const struct SlateCore_Geometry& MyGeometry, float InDeltaTime);
	void GamepadHover();
	void GamepadUnhover();
	void ExecuteUbergraph_UI_Equipment_Item(int32 EntryPoint, const struct SlateCore_Geometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue, double CallFunc_SafeDivide_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, const struct SlateCore_PointerEvent& K2Node_Event_MouseEvent, bool CallFunc_IsValid_ReturnValue, const struct SlateCore_Geometry& K2Node_Event_MyGeometry_1, const struct SlateCore_PointerEvent& K2Node_Event_MouseEvent_1, class UWidget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, double CallFunc_SafeDivide_A_ImplicitCast, double CallFunc_SafeDivide_B_ImplicitCast, float CallFunc_SetScalarParameterValue_Value_ImplicitCast);
	void OnDragEnd__DelegateSignature();
	void OnDragStart__DelegateSignature(const struct Valhalla_InventorySlot& InventorySlot, int32 ItemId);
	void OnClicked__DelegateSignature(const struct Valhalla_InventorySlot& InventorySlot);
	void OnUnhovered__DelegateSignature(const struct Valhalla_InventorySlot& InventorySlot);
	void OnHovered__DelegateSignature(const struct Valhalla_InventorySlot& InventorySlot, int32 ItemId);
};

}


