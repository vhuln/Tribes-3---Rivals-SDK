#pragma once




#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// FUNCTIONS
//---------------------------------------------------------------------------------------------------------------------


// Class Valhalla.ValAudioThreatTestActor
// (Actor)

class UClass* AValAudioThreatTestActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAudioThreatTestActor");

	return Clss;
}


// ValAudioThreatTestActor Valhalla.Default__ValAudioThreatTestActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAudioThreatTestActor* AValAudioThreatTestActor::GetDefaultObj()
{
	static class AValAudioThreatTestActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAudioThreatTestActor*>(AValAudioThreatTestActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAudioThreatTestActor.AudioSend
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                      Input                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAudioThreatTestActor::AudioSend(const class FString& Input)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioThreatTestActor", "AudioSend");

	Params::AValAudioThreatTestActor_AudioSend_Params Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.AsyncAction_GetLeaderboard
// (None)

class UClass* UAsyncAction_GetLeaderboard::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("AsyncAction_GetLeaderboard");

	return Clss;
}


// AsyncAction_GetLeaderboard Valhalla.Default__AsyncAction_GetLeaderboard
// (Public, ClassDefaultObject, ArchetypeObject)

class UAsyncAction_GetLeaderboard* UAsyncAction_GetLeaderboard::GetDefaultObj()
{
	static class UAsyncAction_GetLeaderboard* Default = nullptr;

	if (!Default)
		Default = static_cast<UAsyncAction_GetLeaderboard*>(UAsyncAction_GetLeaderboard::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.AsyncAction_GetLeaderboard.GetLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      LeaderboardName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_GetLeaderboard* ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_GetLeaderboard* UAsyncAction_GetLeaderboard::GetLeaderboard(class UObject* WorldContextObject, const class FString& LeaderboardName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncAction_GetLeaderboard", "GetLeaderboard");

	Params::UAsyncAction_GetLeaderboard_GetLeaderboard_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LeaderboardName = LeaderboardName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.AsyncTaskAttributeChanged
// (None)

class UClass* UAsyncTaskAttributeChanged::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("AsyncTaskAttributeChanged");

	return Clss;
}


// AsyncTaskAttributeChanged Valhalla.Default__AsyncTaskAttributeChanged
// (Public, ClassDefaultObject, ArchetypeObject)

class UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::GetDefaultObj()
{
	static class UAsyncTaskAttributeChanged* Default = nullptr;

	if (!Default)
		Default = static_cast<UAsyncTaskAttributeChanged*>(UAsyncTaskAttributeChanged::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.AsyncTaskAttributeChanged.ListenForAttributesChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_GameplayAttribute>Attributes                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UAsyncTaskAttributeChanged*  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributesChange(class UAbilitySystemComponent* AbilitySystemComponent, const TArray<struct GameplayAbilities_GameplayAttribute>& Attributes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskAttributeChanged", "ListenForAttributesChange");

	Params::UAsyncTaskAttributeChanged_ListenForAttributesChange_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Attributes = Attributes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.AsyncTaskAttributeChanged.ListenForAttributeChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAttributeAttribute                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncTaskAttributeChanged*  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncTaskAttributeChanged* UAsyncTaskAttributeChanged::ListenForAttributeChange(class UAbilitySystemComponent* AbilitySystemComponent, const struct GameplayAbilities_GameplayAttribute& Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskAttributeChanged", "ListenForAttributeChange");

	Params::UAsyncTaskAttributeChanged_ListenForAttributeChange_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.AsyncTaskAttributeChanged.EndTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UAsyncTaskAttributeChanged::EndTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskAttributeChanged", "EndTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.AsyncTaskLocalPlayerRep
// (None)

class UClass* UAsyncTaskLocalPlayerRep::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("AsyncTaskLocalPlayerRep");

	return Clss;
}


// AsyncTaskLocalPlayerRep Valhalla.Default__AsyncTaskLocalPlayerRep
// (Public, ClassDefaultObject, ArchetypeObject)

class UAsyncTaskLocalPlayerRep* UAsyncTaskLocalPlayerRep::GetDefaultObj()
{
	static class UAsyncTaskLocalPlayerRep* Default = nullptr;

	if (!Default)
		Default = static_cast<UAsyncTaskLocalPlayerRep*>(UAsyncTaskLocalPlayerRep::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.AsyncTaskLocalPlayerRep.LocalPlayerRep
// (Final, Native, Protected)
// Parameters:

void UAsyncTaskLocalPlayerRep::LocalPlayerRep()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskLocalPlayerRep", "LocalPlayerRep");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.AsyncTaskLocalPlayerRep.ListenForLocalPlayerRep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UValGameInstance*            ValGameInstance                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncTaskLocalPlayerRep*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncTaskLocalPlayerRep* UAsyncTaskLocalPlayerRep::ListenForLocalPlayerRep(class UValGameInstance* ValGameInstance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskLocalPlayerRep", "ListenForLocalPlayerRep");

	Params::UAsyncTaskLocalPlayerRep_ListenForLocalPlayerRep_Params Parms{};

	Parms.ValGameInstance = ValGameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.AsyncTaskLocalPlayerRep.EndTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UAsyncTaskLocalPlayerRep::EndTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskLocalPlayerRep", "EndTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.AsyncTaskPlayerStateRep
// (None)

class UClass* UAsyncTaskPlayerStateRep::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("AsyncTaskPlayerStateRep");

	return Clss;
}


// AsyncTaskPlayerStateRep Valhalla.Default__AsyncTaskPlayerStateRep
// (Public, ClassDefaultObject, ArchetypeObject)

class UAsyncTaskPlayerStateRep* UAsyncTaskPlayerStateRep::GetDefaultObj()
{
	static class UAsyncTaskPlayerStateRep* Default = nullptr;

	if (!Default)
		Default = static_cast<UAsyncTaskPlayerStateRep*>(UAsyncTaskPlayerStateRep::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.AsyncTaskPlayerStateRep.PlayerStateRep
// (Final, Native, Protected)
// Parameters:
// class AValPlayerStateBase*         PlayerState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncTaskPlayerStateRep::PlayerStateRep(class AValPlayerStateBase* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskPlayerStateRep", "PlayerStateRep");

	Params::UAsyncTaskPlayerStateRep_PlayerStateRep_Params Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.AsyncTaskPlayerStateRep.ListenForPCPlayerStateRep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AValPlayerController*        ValPC                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncTaskPlayerStateRep*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncTaskPlayerStateRep* UAsyncTaskPlayerStateRep::ListenForPCPlayerStateRep(class AValPlayerController* ValPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskPlayerStateRep", "ListenForPCPlayerStateRep");

	Params::UAsyncTaskPlayerStateRep_ListenForPCPlayerStateRep_Params Parms{};

	Parms.ValPC = ValPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.AsyncTaskPlayerStateRep.ListenForCharacterPlayerStateRep
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               ValCharacter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncTaskPlayerStateRep*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncTaskPlayerStateRep* UAsyncTaskPlayerStateRep::ListenForCharacterPlayerStateRep(class AValCharacter* ValCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskPlayerStateRep", "ListenForCharacterPlayerStateRep");

	Params::UAsyncTaskPlayerStateRep_ListenForCharacterPlayerStateRep_Params Parms{};

	Parms.ValCharacter = ValCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.AsyncTaskPlayerStateRep.EndTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UAsyncTaskPlayerStateRep::EndTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("AsyncTaskPlayerStateRep", "EndTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.HUDContainerWidget
// (None)

class UClass* UHUDContainerWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("HUDContainerWidget");

	return Clss;
}


// HUDContainerWidget Valhalla.Default__HUDContainerWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UHUDContainerWidget* UHUDContainerWidget::GetDefaultObj()
{
	static class UHUDContainerWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UHUDContainerWidget*>(UHUDContainerWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.RemainingAmmoVFX
// (None)

class UClass* URemainingAmmoVFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RemainingAmmoVFX");

	return Clss;
}


// RemainingAmmoVFX Valhalla.Default__RemainingAmmoVFX
// (Public, ClassDefaultObject, ArchetypeObject)

class URemainingAmmoVFX* URemainingAmmoVFX::GetDefaultObj()
{
	static class URemainingAmmoVFX* Default = nullptr;

	if (!Default)
		Default = static_cast<URemainingAmmoVFX*>(URemainingAmmoVFX::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.RemainingAmmoVFX.SetCharRef
// (Final, Native, Public)
// Parameters:
// class AValCharacter*               CharacterReference                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URemainingAmmoVFX::SetCharRef(class AValCharacter* CharacterReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("RemainingAmmoVFX", "SetCharRef");

	Params::URemainingAmmoVFX_SetCharRef_Params Parms{};

	Parms.CharacterReference = CharacterReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.RemainingAmmoVFX.OnReload
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URemainingAmmoVFX::OnReload(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("RemainingAmmoVFX", "OnReload");

	Params::URemainingAmmoVFX_OnReload_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.RemainingAmmoVFX.OnClipAmmoChanged
// (Final, Native, Protected)
// Parameters:
// float                              OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URemainingAmmoVFX::OnClipAmmoChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("RemainingAmmoVFX", "OnClipAmmoChanged");

	Params::URemainingAmmoVFX_OnClipAmmoChanged_Params Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.RHInstanceDefaultGameMode
// (Actor)

class UClass* ARHInstanceDefaultGameMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RHInstanceDefaultGameMode");

	return Clss;
}


// RHInstanceDefaultGameMode Valhalla.Default__RHInstanceDefaultGameMode
// (Public, ClassDefaultObject, ArchetypeObject)

class ARHInstanceDefaultGameMode* ARHInstanceDefaultGameMode::GetDefaultObj()
{
	static class ARHInstanceDefaultGameMode* Default = nullptr;

	if (!Default)
		Default = static_cast<ARHInstanceDefaultGameMode*>(ARHInstanceDefaultGameMode::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.RHTestClientConnectGameMode
// (Actor)

class UClass* ARHTestClientConnectGameMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RHTestClientConnectGameMode");

	return Clss;
}


// RHTestClientConnectGameMode Valhalla.Default__RHTestClientConnectGameMode
// (Public, ClassDefaultObject, ArchetypeObject)

class ARHTestClientConnectGameMode* ARHTestClientConnectGameMode::GetDefaultObj()
{
	static class ARHTestClientConnectGameMode* Default = nullptr;

	if (!Default)
		Default = static_cast<ARHTestClientConnectGameMode*>(ARHTestClientConnectGameMode::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameplayAbility
// (None)

class UClass* UValGameplayAbility::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameplayAbility");

	return Clss;
}


// ValGameplayAbility Valhalla.Default__ValGameplayAbility
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameplayAbility* UValGameplayAbility::GetDefaultObj()
{
	static class UValGameplayAbility* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameplayAbility*>(UValGameplayAbility::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameplayAbility.ValInputPressed
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActivationInfoActivationInfo                                                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UValGameplayAbility::ValInputPressed(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo, const struct GameplayAbilities_GameplayAbilityActivationInfo& ActivationInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ValInputPressed");

	Params::UValGameplayAbility_ValInputPressed_Params Parms{};

	Parms.Handle = Handle;
	Parms.ActorInfo = ActorInfo;
	Parms.ActivationInfo = ActivationInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.ValCheckCost
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::ValCheckCost(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ValCheckCost");

	Params::UValGameplayAbility_ValCheckCost_Params Parms{};

	Parms.Handle = Handle;
	Parms.ActorInfo = ActorInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.ValApplyCost
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActivationInfoActivationInfo                                                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UValGameplayAbility::ValApplyCost(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo, const struct GameplayAbilities_GameplayAbilityActivationInfo& ActivationInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ValApplyCost");

	Params::UValGameplayAbility_ValApplyCost_Params Parms{};

	Parms.Handle = Handle;
	Parms.ActorInfo = ActorInfo;
	Parms.ActivationInfo = ActivationInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.ValActivationFailed
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerFailureReason                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::ValActivationFailed(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, struct GameplayTags_GameplayTagContainer& FailureReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ValActivationFailed");

	Params::UValGameplayAbility_ValActivationFailed_Params Parms{};

	Parms.Handle = Handle;
	Parms.FailureReason = FailureReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.UsesCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::UsesCharges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "UsesCharges");

	Params::UValGameplayAbility_UsesCharges_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.TryInputLocal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// enum class EValAbilityInputID      InputID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::TryInputLocal(enum class EValAbilityInputID InputID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "TryInputLocal");

	Params::UValGameplayAbility_TryInputLocal_Params Parms{};

	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.TryInput
// (Final, Native, Public)
// Parameters:
// enum class EValAbilityInputID      InputID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::TryInput(enum class EValAbilityInputID InputID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "TryInput");

	Params::UValGameplayAbility_TryInput_Params Parms{};

	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.SetFullCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::SetFullCharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "SetFullCharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.SetCurrentChargeNoReplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::SetCurrentChargeNoReplication(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "SetCurrentChargeNoReplication");

	Params::UValGameplayAbility_SetCurrentChargeNoReplication_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.SetCurrentCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::SetCurrentCharge(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "SetCurrentCharge");

	Params::UValGameplayAbility_SetCurrentCharge_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.SetCooldownAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect> NewCooldown                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::SetCooldownAbility(TSubclassOf<class UGameplayEffect> NewCooldown)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "SetCooldownAbility");

	Params::UValGameplayAbility_SetCooldownAbility_Params Parms{};

	Parms.NewCooldown = NewCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.SendTargetDataToServer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::SendTargetDataToServer(struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "SendTargetDataToServer");

	Params::UValGameplayAbility_SendTargetDataToServer_Params Parms{};

	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.RemoveCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::RemoveCharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "RemoveCharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.OnSecondaryCooldownEnd
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    CooldownTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeRemaining                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::OnSecondaryCooldownEnd(const struct GameplayTags_GameplayTag& CooldownTag, float TimeRemaining, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "OnSecondaryCooldownEnd");

	Params::UValGameplayAbility_OnSecondaryCooldownEnd_Params Parms{};

	Parms.CooldownTag = CooldownTag;
	Parms.TimeRemaining = TimeRemaining;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.OnAbilityLevelUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                              NewLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::OnAbilityLevelUpdated(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "OnAbilityLevelUpdated");

	Params::UValGameplayAbility_OnAbilityLevelUpdated_Params Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.MontageStopForMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OverrideBlendOutTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::MontageStopForMesh(class USkeletalMeshComponent* InMesh, float OverrideBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MontageStopForMesh");

	Params::UValGameplayAbility_MontageStopForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.OverrideBlendOutTime = OverrideBlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.MontageStopForAllMeshes
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              OverrideBlendOutTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::MontageStopForAllMeshes(float OverrideBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MontageStopForAllMeshes");

	Params::UValGameplayAbility_MontageStopForAllMeshes_Params Parms{};

	Parms.OverrideBlendOutTime = OverrideBlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.MontageSetNextSectionNameForMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        FromSectionName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ToSectionName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::MontageSetNextSectionNameForMesh(class USkeletalMeshComponent* InMesh, class FName FromSectionName, class FName ToSectionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MontageSetNextSectionNameForMesh");

	Params::UValGameplayAbility_MontageSetNextSectionNameForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.FromSectionName = FromSectionName;
	Parms.ToSectionName = ToSectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.MontageJumpToSectionForMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SectionName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::MontageJumpToSectionForMesh(class USkeletalMeshComponent* InMesh, class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MontageJumpToSectionForMesh");

	Params::UValGameplayAbility_MontageJumpToSectionForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.MakeGameplayAbilityTargetDataHandleFromHitResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct Engine_HitResult>    HitResults                                                       (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilityTargetDataHandle UValGameplayAbility::MakeGameplayAbilityTargetDataHandleFromHitResults(const TArray<struct Engine_HitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MakeGameplayAbilityTargetDataHandleFromHitResults");

	Params::UValGameplayAbility_MakeGameplayAbilityTargetDataHandleFromHitResults_Params Parms{};

	Parms.HitResults = HitResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.MakeGameplayAbilityTargetDataHandleFromActorArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>              TargetActors                                                     (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilityTargetDataHandle UValGameplayAbility::MakeGameplayAbilityTargetDataHandleFromActorArray(const TArray<class AActor*>& TargetActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MakeGameplayAbilityTargetDataHandleFromActorArray");

	Params::UValGameplayAbility_MakeGameplayAbilityTargetDataHandleFromActorArray_Params Parms{};

	Parms.TargetActors = TargetActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.MakeEffectContainerSpecFromContainer
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValGameplayEffectContainerContainer                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEventDataEventData                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              OverrideGameplayLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValGameplayEffectContainerSpecReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct Valhalla_ValGameplayEffectContainerSpec UValGameplayAbility::MakeEffectContainerSpecFromContainer(struct Valhalla_ValGameplayEffectContainer& Container, struct GameplayAbilities_GameplayEventData& EventData, int32 OverrideGameplayLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MakeEffectContainerSpecFromContainer");

	Params::UValGameplayAbility_MakeEffectContainerSpecFromContainer_Params Parms{};

	Parms.Container = Container;
	Parms.EventData = EventData;
	Parms.OverrideGameplayLevel = OverrideGameplayLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.MakeEffectContainerSpec
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ContainerTag                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEventDataEventData                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              OverrideGameplayLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValGameplayEffectContainerSpecReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct Valhalla_ValGameplayEffectContainerSpec UValGameplayAbility::MakeEffectContainerSpec(const struct GameplayTags_GameplayTag& ContainerTag, struct GameplayAbilities_GameplayEventData& EventData, int32 OverrideGameplayLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "MakeEffectContainerSpec");

	Params::UValGameplayAbility_MakeEffectContainerSpec_Params Parms{};

	Parms.ContainerTag = ContainerTag;
	Parms.EventData = EventData;
	Parms.OverrideGameplayLevel = OverrideGameplayLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.K2_GetSourceObject
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UValGameplayAbility::K2_GetSourceObject(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "K2_GetSourceObject");

	Params::UValGameplayAbility_K2_GetSourceObject_Params Parms{};

	Parms.Handle = Handle;
	Parms.ActorInfo = ActorInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.K2_ApplyGameplayEffectSpecsToTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct GameplayAbilities_GameplayEffectSpecHandle>EffectSpecHandles                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (Parm, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_ActiveGameplayEffectHandle>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct GameplayAbilities_ActiveGameplayEffectHandle> UValGameplayAbility::K2_ApplyGameplayEffectSpecsToTarget(TArray<struct GameplayAbilities_GameplayEffectSpecHandle>& EffectSpecHandles, const struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "K2_ApplyGameplayEffectSpecsToTarget");

	Params::UValGameplayAbility_K2_ApplyGameplayEffectSpecsToTarget_Params Parms{};

	Parms.EffectSpecHandles = EffectSpecHandles;
	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.IsPredictionKeyValidForMorePrediction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::IsPredictionKeyValidForMorePrediction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "IsPredictionKeyValidForMorePrediction");

	Params::UValGameplayAbility_IsPredictionKeyValidForMorePrediction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.IsOnSecondaryCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::IsOnSecondaryCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "IsOnSecondaryCooldown");

	Params::UValGameplayAbility_IsOnSecondaryCooldown_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.IsInputPressed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::IsInputPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "IsInputPressed");

	Params::UValGameplayAbility_IsInputPressed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.IsHitscan
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::IsHitscan()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "IsHitscan");

	Params::UValGameplayAbility_IsHitscan_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.IsAbilityActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::IsAbilityActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "IsAbilityActive");

	Params::UValGameplayAbility_IsAbilityActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.HasCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::HasCharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "HasCharge");

	Params::UValGameplayAbility_HasCharge_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetWeaponType
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayTags_GameplayTag    OutWeaponType                                                    (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::GetWeaponType(struct GameplayTags_GameplayTag& OutWeaponType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetWeaponType");

	Params::UValGameplayAbility_GetWeaponType_Params Parms{};

	Parms.OutWeaponType = OutWeaponType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.GetTimeSinceDate
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_DateTime        PreviousTime                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameplayAbility::GetTimeSinceDate(const struct CoreUObject_DateTime& PreviousTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetTimeSinceDate");

	Params::UValGameplayAbility_GetTimeSinceDate_Params Parms{};

	Parms.PreviousTime = PreviousTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetSubAbilityFromInputID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValAbilityInputID      InputID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UValGameplayAbility::GetSubAbilityFromInputID(enum class EValAbilityInputID InputID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetSubAbilityFromInputID");

	Params::UValGameplayAbility_GetSubAbilityFromInputID_Params Parms{};

	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetSubAbilityFromClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UGameplayAbility>AbilityClass                                                     (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayAbility*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UValGameplayAbility::GetSubAbilityFromClass(TSubclassOf<class UGameplayAbility> AbilityClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetSubAbilityFromClass");

	Params::UValGameplayAbility_GetSubAbilityFromClass_Params Parms{};

	Parms.AbilityClass = AbilityClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetSlotSecondaryCooldownTag
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    OutGameplayTag                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::GetSlotSecondaryCooldownTag(struct GameplayTags_GameplayTag* OutGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetSlotSecondaryCooldownTag");

	Params::UValGameplayAbility_GetSlotSecondaryCooldownTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutGameplayTag != nullptr)
		*OutGameplayTag = std::move(Parms.OutGameplayTag);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetSlotCooldownTags
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTagContainerOutGameplayTags                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::GetSlotCooldownTags(struct GameplayTags_GameplayTagContainer* OutGameplayTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetSlotCooldownTags");

	Params::UValGameplayAbility_GetSlotCooldownTags_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutGameplayTags != nullptr)
		*OutGameplayTags = std::move(Parms.OutGameplayTags);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetSecondaryCooldownTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameplayAbility::GetSecondaryCooldownTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetSecondaryCooldownTimeRemaining");

	Params::UValGameplayAbility_GetSecondaryCooldownTimeRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetOwningASC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilitySystemComponent*  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilitySystemComponent* UValGameplayAbility::GetOwningASC()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetOwningASC");

	Params::UValGameplayAbility_GetOwningASC_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetMaxCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameplayAbility::GetMaxCharges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetMaxCharges");

	Params::UValGameplayAbility_GetMaxCharges_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetHolsterTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameplayAbility::GetHolsterTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetHolsterTime");

	Params::UValGameplayAbility_GetHolsterTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetDrawTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameplayAbility::GetDrawTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetDrawTime");

	Params::UValGameplayAbility_GetDrawTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetDamageType
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayTags_GameplayTag    OutDamageType                                                    (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::GetDamageType(struct GameplayTags_GameplayTag& OutDamageType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetDamageType");

	Params::UValGameplayAbility_GetDamageType_Params Parms{};

	Parms.OutDamageType = OutDamageType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.GetCurrentPredictionKeyStatus
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValGameplayAbility::GetCurrentPredictionKeyStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetCurrentPredictionKeyStatus");

	Params::UValGameplayAbility_GetCurrentPredictionKeyStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetCurrentMontageForMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UValGameplayAbility::GetCurrentMontageForMesh(class USkeletalMeshComponent* InMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetCurrentMontageForMesh");

	Params::UValGameplayAbility_GetCurrentMontageForMesh_Params Parms{};

	Parms.InMesh = InMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetCurrentCharges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameplayAbility::GetCurrentCharges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetCurrentCharges");

	Params::UValGameplayAbility_GetCurrentCharges_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetCooldownDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameplayAbility::GetCooldownDuration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetCooldownDuration");

	Params::UValGameplayAbility_GetCooldownDuration_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetAbilityTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTagContainerReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTagContainer UValGameplayAbility::GetAbilityTags()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetAbilityTags");

	Params::UValGameplayAbility_GetAbilityTags_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.GetAbilityPropertyModValues
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    PropertyTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      OutValues                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameplayAbility::GetAbilityPropertyModValues(const struct GameplayTags_GameplayTag& PropertyTag, TArray<float>* OutValues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetAbilityPropertyModValues");

	Params::UValGameplayAbility_GetAbilityPropertyModValues_Params Parms{};

	Parms.PropertyTag = PropertyTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutValues != nullptr)
		*OutValues = std::move(Parms.OutValues);

}


// Function Valhalla.ValGameplayAbility.GetAbilityAudioVisual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* UValGameplayAbility::GetAbilityAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "GetAbilityAudioVisual");

	Params::UValGameplayAbility_GetAbilityAudioVisual_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.EventOnAbilityRemoved
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecSpec                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::EventOnAbilityRemoved(struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo, struct GameplayAbilities_GameplayAbilitySpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "EventOnAbilityRemoved");

	Params::UValGameplayAbility_EventOnAbilityRemoved_Params Parms{};

	Parms.ActorInfo = ActorInfo;
	Parms.Spec = Spec;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.EventOnAbilityPendingRemoved
// (Event, Public, BlueprintEvent)
// Parameters:

void UValGameplayAbility::EventOnAbilityPendingRemoved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "EventOnAbilityPendingRemoved");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValGameplayAbility.EventOnAbilityGiven
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayAbilities_GameplayAbilityActorInfoActorInfo                                                        (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecSpec                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::EventOnAbilityGiven(struct GameplayAbilities_GameplayAbilityActorInfo& ActorInfo, struct GameplayAbilities_GameplayAbilitySpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "EventOnAbilityGiven");

	Params::UValGameplayAbility_EventOnAbilityGiven_Params Parms{};

	Parms.ActorInfo = ActorInfo;
	Parms.Spec = Spec;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.EndSecondaryCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::EndSecondaryCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "EndSecondaryCooldown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.EndCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::EndCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "EndCooldown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.CalcAbilityPropertyModifiers
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:

void UValGameplayAbility::CalcAbilityPropertyModifiers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "CalcAbilityPropertyModifiers");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValGameplayAbility.BeginPlay
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValGameplayAbility::BeginPlay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "BeginPlay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.BatchRPCTryActivateAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleInAbilityHandle                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               EndAbilityImmediately                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameplayAbility::BatchRPCTryActivateAbility(const struct GameplayAbilities_GameplayAbilitySpecHandle& InAbilityHandle, bool EndAbilityImmediately)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "BatchRPCTryActivateAbility");

	Params::UValGameplayAbility_BatchRPCTryActivateAbility_Params Parms{};

	Parms.InAbilityHandle = InAbilityHandle;
	Parms.EndAbilityImmediately = EndAbilityImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.ApplySwapTimeModifier
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SwappedFromSlot                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SwappedToSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplySwapTimeModifier(float& OutPercentModifier, float& OutFlatModifier, struct GameplayTags_GameplayTag& SwappedFromSlot, struct GameplayTags_GameplayTag& SwappedToSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplySwapTimeModifier");

	Params::UValGameplayAbility_ApplySwapTimeModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.SwappedFromSlot = SwappedFromSlot;
	Parms.SwappedToSlot = SwappedToSlot;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.ApplySecondaryCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplySecondaryCooldown(float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplySecondaryCooldown");

	Params::UValGameplayAbility_ApplySecondaryCooldown_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.ApplyLimbResistanceModifier
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutLimbDamageModifier                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplyLimbResistanceModifier(float& OutLimbDamageModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyLimbResistanceModifier");

	Params::UValGameplayAbility_ApplyLimbResistanceModifier_Params Parms{};

	Parms.OutLimbDamageModifier = OutLimbDamageModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.ApplyHealthResistanceModifier
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplyHealthResistanceModifier(float& OutPercentModifier, float& OutFlatModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyHealthResistanceModifier");

	Params::UValGameplayAbility_ApplyHealthResistanceModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.ApplyEffectContainerSpecToTarget
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValGameplayEffectContainerSpecContainerSpec                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_ActiveGameplayEffectHandle>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct GameplayAbilities_ActiveGameplayEffectHandle> UValGameplayAbility::ApplyEffectContainerSpecToTarget(struct Valhalla_ValGameplayEffectContainerSpec& ContainerSpec, struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyEffectContainerSpecToTarget");

	Params::UValGameplayAbility_ApplyEffectContainerSpecToTarget_Params Parms{};

	Parms.ContainerSpec = ContainerSpec;
	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameplayAbility.ApplyDamageResistanceModifier
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutShieldModifier                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplyDamageResistanceModifier(float& OutPercentModifier, float& OutFlatModifier, float& OutShieldModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyDamageResistanceModifier");

	Params::UValGameplayAbility_ApplyDamageResistanceModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.OutShieldModifier = OutShieldModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.ApplyDamageOutputModifier
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplyDamageOutputModifier(float& OutPercentModifier, float& OutFlatModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyDamageOutputModifier");

	Params::UValGameplayAbility_ApplyDamageOutputModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameplayAbility.ApplyCooldownWithFlatAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::ApplyCooldownWithFlatAmount(float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyCooldownWithFlatAmount");

	Params::UValGameplayAbility_ApplyCooldownWithFlatAmount_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.ApplyCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::ApplyCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "ApplyCooldown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.AddMaxCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::AddMaxCharge(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "AddMaxCharge");

	Params::UValGameplayAbility_AddMaxCharge_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.AddCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameplayAbility::AddCharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "AddCharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.AddAbilityCooldownPercentageModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::AddAbilityCooldownPercentageModifier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "AddAbilityCooldownPercentageModifier");

	Params::UValGameplayAbility_AddAbilityCooldownPercentageModifier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameplayAbility.AddAbilityCooldownFlatModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameplayAbility::AddAbilityCooldownFlatModifier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameplayAbility", "AddAbilityCooldownFlatModifier");

	Params::UValGameplayAbility_AddAbilityCooldownFlatModifier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDevice
// (None)

class UClass* UValDevice::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDevice");

	return Clss;
}


// ValDevice Valhalla.Default__ValDevice
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDevice* UValDevice::GetDefaultObj()
{
	static class UValDevice* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDevice*>(UValDevice::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDevice.ShouldUsePredictiveAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDevice::ShouldUsePredictiveAiming()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDevice", "ShouldUsePredictiveAiming");

	Params::UValDevice_ShouldUsePredictiveAiming_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDevice.GetDeployableAudioVisual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDeployableAudioVisual*   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDeployableAudioVisual* UValDevice::GetDeployableAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDevice", "GetDeployableAudioVisual");

	Params::UValDevice_GetDeployableAudioVisual_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDevice.GetAudioVisual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDeviceAudioVisual*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDeviceAudioVisual* UValDevice::GetAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDevice", "GetAudioVisual");

	Params::UValDevice_GetAudioVisual_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDevice.GetActorToSpawnOnActivation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AActor>          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AActor> UValDevice::GetActorToSpawnOnActivation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDevice", "GetActorToSpawnOnActivation");

	Params::UValDevice_GetActorToSpawnOnActivation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDevice.CalculateActivationDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              TimeBetweenActivations                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                             LastActivation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UValDevice::CalculateActivationDelta(float TimeBetweenActivations, double LastActivation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDevice", "CalculateActivationDelta");

	Params::UValDevice_CalculateActivationDelta_Params Parms{};

	Parms.TimeBetweenActivations = TimeBetweenActivations;
	Parms.LastActivation = LastActivation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.RubyWeapon
// (None)

class UClass* URubyWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RubyWeapon");

	return Clss;
}


// RubyWeapon Valhalla.Default__RubyWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class URubyWeapon* URubyWeapon::GetDefaultObj()
{
	static class URubyWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<URubyWeapon*>(URubyWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.SmoothTransformComponent
// (SceneComponent)

class UClass* USmoothTransformComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("SmoothTransformComponent");

	return Clss;
}


// SmoothTransformComponent Valhalla.Default__SmoothTransformComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class USmoothTransformComponent* USmoothTransformComponent::GetDefaultObj()
{
	static class USmoothTransformComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<USmoothTransformComponent*>(USmoothTransformComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.SmoothTransformComponent.GetCurrentLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector USmoothTransformComponent::GetCurrentLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("SmoothTransformComponent", "GetCurrentLocation");

	Params::USmoothTransformComponent_GetCurrentLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAnimInstance
// (None)

class UClass* UValAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAnimInstance");

	return Clss;
}


// ValAnimInstance Valhalla.Default__ValAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAnimInstance* UValAnimInstance::GetDefaultObj()
{
	static class UValAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAnimInstance*>(UValAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAnimInstance.StopSwapAnims
// (Native, Public, BlueprintCallable)
// Parameters:

void UValAnimInstance::StopSwapAnims()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "StopSwapAnims");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.SetWalking
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::SetWalking(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "SetWalking");

	Params::UValAnimInstance_SetWalking_Params Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.SetSprinting
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::SetSprinting(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "SetSprinting");

	Params::UValAnimInstance_SetSprinting_Params Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.SetRightHandIKStrength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              NewStrength                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BlendTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::SetRightHandIKStrength(float NewStrength, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "SetRightHandIKStrength");

	Params::UValAnimInstance_SetRightHandIKStrength_Params Parms{};

	Parms.NewStrength = NewStrength;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.SetLeftHandIKStrength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              NewStrength                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BlendTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::SetLeftHandIKStrength(float NewStrength, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "SetLeftHandIKStrength");

	Params::UValAnimInstance_SetLeftHandIKStrength_Params Parms{};

	Parms.NewStrength = NewStrength;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.SetHidden
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewHidden                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::SetHidden(bool bNewHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "SetHidden");

	Params::UValAnimInstance_SetHidden_Params Parms{};

	Parms.bNewHidden = bNewHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.RestoreSwapAnim
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              HolsterDuration                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DrawDuration                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::RestoreSwapAnim(float HolsterDuration, float DrawDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "RestoreSwapAnim");

	Params::UValAnimInstance_RestoreSwapAnim_Params Parms{};

	Parms.HolsterDuration = HolsterDuration;
	Parms.DrawDuration = DrawDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.PlayReverseHolster
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              HolsterDuration                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::PlayReverseHolster(float HolsterDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "PlayReverseHolster");

	Params::UValAnimInstance_PlayReverseHolster_Params Parms{};

	Parms.HolsterDuration = HolsterDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.PlayReverseDraw
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              DrawDuration                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::PlayReverseDraw(float DrawDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "PlayReverseDraw");

	Params::UValAnimInstance_PlayReverseDraw_Params Parms{};

	Parms.DrawDuration = DrawDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.PlayHolster
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              HolsterDuration                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::PlayHolster(float HolsterDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "PlayHolster");

	Params::UValAnimInstance_PlayHolster_Params Parms{};

	Parms.HolsterDuration = HolsterDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.PlayDraw
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              DrawDuration                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::PlayDraw(float DrawDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "PlayDraw");

	Params::UValAnimInstance_PlayDraw_Params Parms{};

	Parms.DrawDuration = DrawDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.PlayDeathAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAnimInstance::PlayDeathAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "PlayDeathAnimation");

	Params::UValAnimInstance_PlayDeathAnimation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAnimInstance.OnWeaponHolstered
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::OnWeaponHolstered(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "OnWeaponHolstered");

	Params::UValAnimInstance_OnWeaponHolstered_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.OnVaulted
// (Native, Protected)
// Parameters:

void UValAnimInstance::OnVaulted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "OnVaulted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.OnSprintStateChanged
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::OnSprintStateChanged(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "OnSprintStateChanged");

	Params::UValAnimInstance_OnSprintStateChanged_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.OnPostMatchStateChanged
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::OnPostMatchStateChanged(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "OnPostMatchStateChanged");

	Params::UValAnimInstance_OnPostMatchStateChanged_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.EventSprintStateUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void UValAnimInstance::EventSprintStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "EventSprintStateUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAnimInstance.BlendOutIK
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bForceBlendOutBothArms                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAnimInstance::BlendOutIK(bool bForceBlendOutBothArms)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "BlendOutIK");

	Params::UValAnimInstance_BlendOutIK_Params Parms{};

	Parms.bForceBlendOutBothArms = bForceBlendOutBothArms;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAnimInstance.BlendInIK
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UValAnimInstance::BlendInIK()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAnimInstance", "BlendInIK");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAbilityAnimInstance
// (None)

class UClass* UValAbilityAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityAnimInstance");

	return Clss;
}


// ValAbilityAnimInstance Valhalla.Default__ValAbilityAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityAnimInstance* UValAbilityAnimInstance::GetDefaultObj()
{
	static class UValAbilityAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityAnimInstance*>(UValAbilityAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilityAnimInstance.PlayMontageReplicated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValGameplayAbility*         Ability                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityAnimInstance::PlayMontageReplicated(class UValGameplayAbility* Ability, class UAnimMontage* Montage, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAnimInstance", "PlayMontageReplicated");

	Params::UValAbilityAnimInstance_PlayMontageReplicated_Params Parms{};

	Parms.Ability = Ability;
	Parms.Montage = Montage;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityAnimInstance.PlayMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityAnimInstance::PlayMontage(class UAnimMontage* Montage, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAnimInstance", "PlayMontage");

	Params::UValAbilityAnimInstance_PlayMontage_Params Parms{};

	Parms.Montage = Montage;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityAnimInstance.OnGrenadeThrow
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityAnimInstance::OnGrenadeThrow(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAnimInstance", "OnGrenadeThrow");

	Params::UValAbilityAnimInstance_OnGrenadeThrow_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAbilityAudioVisual
// (None)

class UClass* UValAbilityAudioVisual::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityAudioVisual");

	return Clss;
}


// ValAbilityAudioVisual Valhalla.Default__ValAbilityAudioVisual
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityAudioVisual* UValAbilityAudioVisual::GetDefaultObj()
{
	static class UValAbilityAudioVisual* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityAudioVisual*>(UValAbilityAudioVisual::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilityAudioVisual.GetMesh3P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UValAbilityAudioVisual::GetMesh3P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAudioVisual", "GetMesh3P");

	Params::UValAbilityAudioVisual_GetMesh3P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityAudioVisual.GetMesh1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UValAbilityAudioVisual::GetMesh1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAudioVisual", "GetMesh1P");

	Params::UValAbilityAudioVisual_GetMesh1P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityAudioVisual.GetMaterialOverrideParams1P
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Key                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UValAbilityAudioVisual::GetMaterialOverrideParams1P(class FName& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAudioVisual", "GetMaterialOverrideParams1P");

	Params::UValAbilityAudioVisual_GetMaterialOverrideParams1P_Params Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityAudioVisual.GetMaterialOverride1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UValAbilityAudioVisual::GetMaterialOverride1P(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAudioVisual", "GetMaterialOverride1P");

	Params::UValAbilityAudioVisual_GetMaterialOverride1P_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityAudioVisual.GetABP3P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UValAbilityAudioVisual::GetABP3P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityAudioVisual", "GetABP3P");

	Params::UValAbilityAudioVisual_GetABP3P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAbilityFunctionLibrary
// (None)

class UClass* UValAbilityFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityFunctionLibrary");

	return Clss;
}


// ValAbilityFunctionLibrary Valhalla.Default__ValAbilityFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityFunctionLibrary* UValAbilityFunctionLibrary::GetDefaultObj()
{
	static class UValAbilityFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityFunctionLibrary*>(UValAbilityFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilityFunctionLibrary.RemoveGrantedTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleSpecHandle                                                       (Parm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    GameplayTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectSpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayEffectSpecHandle UValAbilityFunctionLibrary::RemoveGrantedTag(const struct GameplayAbilities_GameplayEffectSpecHandle& SpecHandle, const struct GameplayTags_GameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "RemoveGrantedTag");

	Params::UValAbilityFunctionLibrary_RemoveGrantedTag_Params Parms{};

	Parms.SpecHandle = SpecHandle;
	Parms.GameplayTag = GameplayTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.IsPrimaryAbilityInstanceActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::IsPrimaryAbilityInstanceActive(class UAbilitySystemComponent* AbilitySystemComponent, const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "IsPrimaryAbilityInstanceActive");

	Params::UValAbilityFunctionLibrary_IsPrimaryAbilityInstanceActive_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.IsOccluded
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      Victim                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                Bones                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              IgnoreActors                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct Engine_HitResult            Hit                                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::IsOccluded(class AActor* Victim, TArray<class FName>& Bones, struct CoreUObject_Vector& Origin, TArray<class AActor*>& IgnoreActors, struct Engine_HitResult* Hit, enum class ECollisionChannel TraceChannel, bool bDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "IsOccluded");

	Params::UValAbilityFunctionLibrary_IsOccluded_Params Parms{};

	Parms.Victim = Victim;
	Parms.Bones = Bones;
	Parms.Origin = Origin;
	Parms.IgnoreActors = IgnoreActors;
	Parms.TraceChannel = TraceChannel;
	Parms.bDrawDebug = bDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hit != nullptr)
		*Hit = std::move(Parms.Hit);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.IsActiveGameplayEffectHandleValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayAbilities_ActiveGameplayEffectHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::IsActiveGameplayEffectHandleValid(const struct GameplayAbilities_ActiveGameplayEffectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "IsActiveGameplayEffectHandleValid");

	Params::UValAbilityFunctionLibrary_IsActiveGameplayEffectHandleValid_Params Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.IsAbilitySpecHandleValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::IsAbilitySpecHandleValid(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "IsAbilitySpecHandleValid");

	Params::UValAbilityFunctionLibrary_IsAbilitySpecHandleValid_Params Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.HasGrantedTagExact
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleSpecHandle                                                       (Parm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    GameplayTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::HasGrantedTagExact(const struct GameplayAbilities_GameplayEffectSpecHandle& SpecHandle, const struct GameplayTags_GameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "HasGrantedTagExact");

	Params::UValAbilityFunctionLibrary_HasGrantedTagExact_Params Parms{};

	Parms.SpecHandle = SpecHandle;
	Parms.GameplayTag = GameplayTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.GetSetByCallerMagnitudeByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleSpecHandle                                                       (Parm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    DataTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAbilityFunctionLibrary::GetSetByCallerMagnitudeByTag(const struct GameplayAbilities_GameplayEffectSpecHandle& SpecHandle, const struct GameplayTags_GameplayTag& DataTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "GetSetByCallerMagnitudeByTag");

	Params::UValAbilityFunctionLibrary_GetSetByCallerMagnitudeByTag_Params Parms{};

	Parms.SpecHandle = SpecHandle;
	Parms.DataTag = DataTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.GetPrimaryAbilityInstanceFromHandle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValGameplayAbility*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValGameplayAbility* UValAbilityFunctionLibrary::GetPrimaryAbilityInstanceFromHandle(class UAbilitySystemComponent* AbilitySystemComponent, const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "GetPrimaryAbilityInstanceFromHandle");

	Params::UValAbilityFunctionLibrary_GetPrimaryAbilityInstanceFromHandle_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.GetPrimaryAbilityInstanceFromClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayAbility>InAbilityClass                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValGameplayAbility*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValGameplayAbility* UValAbilityFunctionLibrary::GetPrimaryAbilityInstanceFromClass(class UAbilitySystemComponent* AbilitySystemComponent, TSubclassOf<class UGameplayAbility> InAbilityClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "GetPrimaryAbilityInstanceFromClass");

	Params::UValAbilityFunctionLibrary_GetPrimaryAbilityInstanceFromClass_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.InAbilityClass = InAbilityClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.GetPlayerEditorWindowRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                      World                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValAbilityFunctionLibrary::GetPlayerEditorWindowRole(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "GetPlayerEditorWindowRole");

	Params::UValAbilityFunctionLibrary_GetPlayerEditorWindowRole_Params Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.GetHitIDFromTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleHitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              HitID                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::GetHitIDFromTargetData(struct GameplayAbilities_GameplayAbilityTargetDataHandle& HitResult, int32 Index, int32* HitID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "GetHitIDFromTargetData");

	Params::UValAbilityFunctionLibrary_GetHitIDFromTargetData_Params Parms{};

	Parms.HitResult = HitResult;
	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (HitID != nullptr)
		*HitID = Parms.HitID;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.FindActorsInExplosion
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OuterDamageRadius                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              IgnoreActors                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       DamagePreventionChannel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class AActor*, struct Engine_HitResult>OutResults                                                       (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               bIgnoreOcclusion                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::FindActorsInExplosion(class UObject* WorldContextObject, class AActor* DamageCauser, struct CoreUObject_Vector& Origin, float OuterDamageRadius, TArray<class AActor*>& IgnoreActors, enum class ECollisionChannel DamagePreventionChannel, TMap<class AActor*, struct Engine_HitResult>* OutResults, bool bIgnoreOcclusion, bool bDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "FindActorsInExplosion");

	Params::UValAbilityFunctionLibrary_FindActorsInExplosion_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DamageCauser = DamageCauser;
	Parms.Origin = Origin;
	Parms.OuterDamageRadius = OuterDamageRadius;
	Parms.IgnoreActors = IgnoreActors;
	Parms.DamagePreventionChannel = DamagePreventionChannel;
	Parms.bIgnoreOcclusion = bIgnoreOcclusion;
	Parms.bDrawDebug = bDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutResults != nullptr)
		*OutResults = Parms.OutResults;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.EffectContextSetSourceObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContextHandle                                              (Parm, NativeAccessSpecifierPublic)
// class UObject*                     NewSource                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityFunctionLibrary::EffectContextSetSourceObject(const struct GameplayAbilities_GameplayEffectContextHandle& EffectContextHandle, class UObject* NewSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "EffectContextSetSourceObject");

	Params::UValAbilityFunctionLibrary_EffectContextSetSourceObject_Params Parms{};

	Parms.EffectContextHandle = EffectContextHandle;
	Parms.NewSource = NewSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityFunctionLibrary.EffectContextSetAffectsTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContextHandle                                              (Parm, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityFunctionLibrary::EffectContextSetAffectsTeam(const struct GameplayAbilities_GameplayEffectContextHandle& EffectContextHandle, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "EffectContextSetAffectsTeam");

	Params::UValAbilityFunctionLibrary_EffectContextSetAffectsTeam_Params Parms{};

	Parms.EffectContextHandle = EffectContextHandle;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityFunctionLibrary.EffectContextGetTargetData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContext                                                    (Parm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilityTargetDataHandle UValAbilityFunctionLibrary::EffectContextGetTargetData(const struct GameplayAbilities_GameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "EffectContextGetTargetData");

	Params::UValAbilityFunctionLibrary_EffectContextGetTargetData_Params Parms{};

	Parms.EffectContext = EffectContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.EffectContextGetAffectsTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContext                                                    (Parm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::EffectContextGetAffectsTeam(const struct GameplayAbilities_GameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "EffectContextGetAffectsTeam");

	Params::UValAbilityFunctionLibrary_EffectContextGetAffectsTeam_Params Parms{};

	Parms.EffectContext = EffectContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.EffectContextAddTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContextHandle                                              (Parm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAbilityFunctionLibrary::EffectContextAddTargetData(const struct GameplayAbilities_GameplayEffectContextHandle& EffectContextHandle, struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "EffectContextAddTargetData");

	Params::UValAbilityFunctionLibrary_EffectContextAddTargetData_Params Parms{};

	Parms.EffectContextHandle = EffectContextHandle;
	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityFunctionLibrary.DoesEffectContainerSpecHaveEffects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_ValGameplayEffectContainerSpecContainerSpec                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilityFunctionLibrary::DoesEffectContainerSpecHaveEffects(struct Valhalla_ValGameplayEffectContainerSpec& ContainerSpec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "DoesEffectContainerSpecHaveEffects");

	Params::UValAbilityFunctionLibrary_DoesEffectContainerSpecHaveEffects_Params Parms{};

	Parms.ContainerSpec = ContainerSpec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.ClearTargetData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAbilityFunctionLibrary::ClearTargetData(struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "ClearTargetData");

	Params::UValAbilityFunctionLibrary_ClearTargetData_Params Parms{};

	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityFunctionLibrary.ApplyExternalEffectSpec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleEffectSpec                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_ActiveGameplayEffectHandle>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct GameplayAbilities_ActiveGameplayEffectHandle> UValAbilityFunctionLibrary::ApplyExternalEffectSpec(struct GameplayAbilities_GameplayEffectSpecHandle& EffectSpec, struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "ApplyExternalEffectSpec");

	Params::UValAbilityFunctionLibrary_ApplyExternalEffectSpec_Params Parms{};

	Parms.EffectSpec = EffectSpec;
	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityFunctionLibrary.ApplyExternalEffectContainerSpec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValGameplayEffectContainerSpecContainerSpec                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_ActiveGameplayEffectHandle>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct GameplayAbilities_ActiveGameplayEffectHandle> UValAbilityFunctionLibrary::ApplyExternalEffectContainerSpec(struct Valhalla_ValGameplayEffectContainerSpec& ContainerSpec, struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityFunctionLibrary", "ApplyExternalEffectContainerSpec");

	Params::UValAbilityFunctionLibrary_ApplyExternalEffectContainerSpec_Params Parms{};

	Parms.ContainerSpec = ContainerSpec;
	Parms.TargetData = TargetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPickup
// (Actor)

class UClass* AValPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPickup");

	return Clss;
}


// ValPickup Valhalla.Default__ValPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPickup* AValPickup::GetDefaultObj()
{
	static class AValPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPickup*>(AValPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPickup.TryToPickUp
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               ValCharacter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup::TryToPickUp(class AValCharacter* ValCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "TryToPickUp");

	Params::AValPickup_TryToPickUp_Params Parms{};

	Parms.ValCharacter = ValCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.SetPickupActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bActive                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::SetPickupActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "SetPickupActive");

	Params::AValPickup_SetPickupActive_Params Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup.ReserveItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Reserver                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup::ReserveItem(class AValCharacter* Reserver)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "ReserveItem");

	Params::AValPickup_ReserveItem_Params Parms{};

	Parms.Reserver = Reserver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.ReleaseReservation
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPickup::ReleaseReservation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "ReleaseReservation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup.OnPickupComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               ValCharacter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::OnPickupComplete(class AValCharacter* ValCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "OnPickupComplete");

	Params::AValPickup_OnPickupComplete_Params Parms{};

	Parms.ValCharacter = ValCharacter;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPickup.OnHoverStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::OnHoverStart(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "OnHoverStart");

	Params::AValPickup_OnHoverStart_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPickup.OnHoverEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::OnHoverEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "OnHoverEnd");

	Params::AValPickup_OnHoverEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPickup.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "Interact");

	Params::AValPickup_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup.HideFloatingIcon
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               bIsHidden                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::HideFloatingIcon(bool bIsHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "HideFloatingIcon");

	Params::AValPickup_HideFloatingIcon_Params Parms{};

	Parms.bIsHidden = bIsHidden;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPickup.GetPickupInteractText
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValPickup::GetPickupInteractText(class AValCharacter* Initiator, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetPickupInteractText");

	Params::AValPickup_GetPickupInteractText_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.GetPickupAbility
// (Final, Native, Public)
// Parameters:
// TSubclassOf<class UValDevice>      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UValDevice> AValPickup::GetPickupAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetPickupAbility");

	Params::AValPickup_GetPickupAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValPickup::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetMesh");

	Params::AValPickup_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValPickup::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetInteractText");

	Params::AValPickup_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValPickup::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetInteractComponent");

	Params::AValPickup_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.GetCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USphereComponent*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USphereComponent* AValPickup::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "GetCollisionComp");

	Params::AValPickup_GetCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.FinishPickup
// (Native, Protected, BlueprintCallable)
// Parameters:

void AValPickup::FinishPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "FinishPickup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup.EnablePickup
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::EnablePickup(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "EnablePickup");

	Params::AValPickup_EnablePickup_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup.CustomPickupFunc
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               ValCharacter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup::CustomPickupFunc(class AValCharacter* ValCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "CustomPickupFunc");

	Params::AValPickup_CustomPickupFunc_Params Parms{};

	Parms.ValCharacter = ValCharacter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.CharacterPickupCheck
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AValCharacter*               ValCharacter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup::CharacterPickupCheck(class AValCharacter* ValCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "CharacterPickupCheck");

	Params::AValPickup_CharacterPickupCheck_Params Parms{};

	Parms.ValCharacter = ValCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "CanInteract");

	Params::AValPickup_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup.AutoPickupPickupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup::AutoPickupPickupItem(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup", "AutoPickupPickupItem");

	Params::AValPickup_AutoPickupPickupItem_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAbilityPickup
// (Actor)

class UClass* AValAbilityPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityPickup");

	return Clss;
}


// ValAbilityPickup Valhalla.Default__ValAbilityPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAbilityPickup* AValAbilityPickup::GetDefaultObj()
{
	static class AValAbilityPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAbilityPickup*>(AValAbilityPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilityPickup.SelectPickupRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAbilityPickup::SelectPickupRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "SelectPickupRarity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.SelectPickupAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAbilityPickup::SelectPickupAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "SelectPickupAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnStackSizeUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAbilityPickup::OnStackSizeUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnStackSizeUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityPickup.OnRep_StackSize
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_StackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_StackSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_PickupRarity
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_PickupRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_PickupRarity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_PickupEquipSlot
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_PickupEquipSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_PickupEquipSlot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_PickupAbility
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_PickupAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_PickupAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_MaxStackSize
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_MaxStackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_MaxStackSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_DungeonMods
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_DungeonMods()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_DungeonMods");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_AssetId
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_AssetId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_AssetId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_AbilityPickupMesh
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_AbilityPickupMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_AbilityPickupMesh");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRep_AbilityLoaded
// (Final, Native, Public)
// Parameters:

void AValAbilityPickup::OnRep_AbilityLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRep_AbilityLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityPickup.OnRarityUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAbilityPickup::OnRarityUpdated(enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnRarityUpdated");

	Params::AValAbilityPickup_OnRarityUpdated_Params Parms{};

	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilityPickup.OnMaxStackSizeUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAbilityPickup::OnMaxStackSizeUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnMaxStackSizeUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityPickup.OnEquipSlotUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct GameplayTags_GameplayTag    NewEquipSlot                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAbilityPickup::OnEquipSlotUpdated(const struct GameplayTags_GameplayTag& NewEquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnEquipSlotUpdated");

	Params::AValAbilityPickup_OnEquipSlotUpdated_Params Parms{};

	Parms.NewEquipSlot = NewEquipSlot;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilityPickup.OnDungeonModsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAbilityPickup::OnDungeonModsUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnDungeonModsUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityPickup.OnAssetIdUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAbilityPickup::OnAssetIdUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnAssetIdUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityPickup.OnAbilityUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UValGameplayAbility>Ability                                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAbilityPickup::OnAbilityUpdated(TSubclassOf<class UValGameplayAbility> Ability)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnAbilityUpdated");

	Params::AValAbilityPickup_OnAbilityUpdated_Params Parms{};

	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilityPickup.OnAbilityPickupMeshUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAbilityPickup::OnAbilityPickupMeshUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "OnAbilityPickupMeshUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityPickup.GetStackSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAbilityPickup::GetStackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetStackSize");

	Params::AValAbilityPickup_GetStackSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValAbilityPickup::GetRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetRarity");

	Params::AValAbilityPickup_GetRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetMaxStackSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAbilityPickup::GetMaxStackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetMaxStackSize");

	Params::AValAbilityPickup_GetMaxStackSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetEquipSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValAbilityPickup::GetEquipSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetEquipSlot");

	Params::AValAbilityPickup_GetEquipSlot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetAssetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AValAbilityPickup::GetAssetId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetAssetId");

	Params::AValAbilityPickup_GetAssetId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetAbilityPickupMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>  ReturnValue                                                      (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UStaticMesh> AValAbilityPickup::GetAbilityPickupMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetAbilityPickupMesh");

	Params::AValAbilityPickup_GetAbilityPickupMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityPickup.GetAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UValGameplayAbility>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UValGameplayAbility> AValAbilityPickup::GetAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityPickup", "GetAbility");

	Params::AValAbilityPickup_GetAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAbilitySwappable
// (None)

class UClass* UValAbilitySwappable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilitySwappable");

	return Clss;
}


// ValAbilitySwappable Valhalla.Default__ValAbilitySwappable
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilitySwappable* UValAbilitySwappable::GetDefaultObj()
{
	static class UValAbilitySwappable* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilitySwappable*>(UValAbilitySwappable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilitySwappable.Wait_UseAbility
// (Native, Protected)
// Parameters:

void UValAbilitySwappable::Wait_UseAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_UseAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.Wait_HolsterAbility
// (Final, Native, Protected)
// Parameters:

void UValAbilitySwappable::Wait_HolsterAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_HolsterAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.Wait_End
// (Final, Native, Protected)
// Parameters:

void UValAbilitySwappable::Wait_End()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_End");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.Wait_DrawWeapon
// (Final, Native, Protected)
// Parameters:

void UValAbilitySwappable::Wait_DrawWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_DrawWeapon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.Wait_DrawAbility
// (Final, Native, Protected)
// Parameters:

void UValAbilitySwappable::Wait_DrawAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_DrawAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.Wait_ApplyCooldown
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySwappable::Wait_ApplyCooldown(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "Wait_ApplyCooldown");

	Params::UValAbilitySwappable_Wait_ApplyCooldown_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.TryConfirm
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilitySwappable::TryConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "TryConfirm");

	Params::UValAbilitySwappable_TryConfirm_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySwappable.SetSwapDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySwappable::SetSwapDisabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "SetSwapDisabled");

	Params::UValAbilitySwappable_SetSwapDisabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.SetHolsterTime
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              NewTime                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySwappable::SetHolsterTime(float NewTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "SetHolsterTime");

	Params::UValAbilitySwappable_SetHolsterTime_Params Parms{};

	Parms.NewTime = NewTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.PlayMontage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAnimMontage*                Montage1P                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                Montage3P                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySwappable::PlayMontage(class UAnimMontage* Montage1P, class UAnimMontage* Montage3P, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "PlayMontage");

	Params::UValAbilitySwappable_PlayMontage_Params Parms{};

	Parms.Montage1P = Montage1P;
	Parms.Montage3P = Montage3P;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.ModifySwappable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySwappable::ModifySwappable(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "ModifySwappable");

	Params::UValAbilitySwappable_ModifySwappable_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilitySwappable.GetGunHolsterTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAbilitySwappable::GetGunHolsterTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "GetGunHolsterTime");

	Params::UValAbilitySwappable_GetGunHolsterTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySwappable.GetGunDrawTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAbilitySwappable::GetGunDrawTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "GetGunDrawTime");

	Params::UValAbilitySwappable_GetGunDrawTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySwappable.DelayedApplyCooldownAndEndAbility
// (Final, Native, Protected)
// Parameters:

void UValAbilitySwappable::DelayedApplyCooldownAndEndAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "DelayedApplyCooldownAndEndAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySwappable.CheckSwappableCosts
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilitySwappable::CheckSwappableCosts(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySwappable", "CheckSwappableCosts");

	Params::UValAbilitySwappable_CheckSwappableCosts_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAbilitySystemComponent
// (None)

class UClass* UValAbilitySystemComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilitySystemComponent");

	return Clss;
}


// ValAbilitySystemComponent Valhalla.Default__ValAbilitySystemComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilitySystemComponent* UValAbilitySystemComponent::GetDefaultObj()
{
	static class UValAbilitySystemComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilitySystemComponent*>(UValAbilitySystemComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilitySystemComponent.TryActivateAbilityByClassAndInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayAbility>InAbilityToActivate                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InputID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAllowRemoteActivation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilitySystemComponent::TryActivateAbilityByClassAndInput(TSubclassOf<class UGameplayAbility> InAbilityToActivate, int32 InputID, bool bAllowRemoteActivation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "TryActivateAbilityByClassAndInput");

	Params::UValAbilitySystemComponent_TryActivateAbilityByClassAndInput_Params Parms{};

	Parms.InAbilityToActivate = InAbilityToActivate;
	Parms.InputID = InputID;
	Parms.bAllowRemoteActivation = bAllowRemoteActivation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.SetGameplayEffectDurationHandle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_ActiveGameplayEffectHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewDuration                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilitySystemComponent::SetGameplayEffectDurationHandle(const struct GameplayAbilities_ActiveGameplayEffectHandle& Handle, float NewDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "SetGameplayEffectDurationHandle");

	Params::UValAbilitySystemComponent_SetGameplayEffectDurationHandle_Params Parms{};

	Parms.Handle = Handle;
	Parms.NewDuration = NewDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.ServerCurrentMontageSetPlayRateForMesh
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ClientAnimMontage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InPlayRate                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::ServerCurrentMontageSetPlayRateForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, float InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "ServerCurrentMontageSetPlayRateForMesh");

	Params::UValAbilitySystemComponent_ServerCurrentMontageSetPlayRateForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.ClientAnimMontage = ClientAnimMontage;
	Parms.InPlayRate = InPlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.ServerCurrentMontageSetNextSectionNameForMesh
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ClientAnimMontage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SectionName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        NextSectionName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::ServerCurrentMontageSetNextSectionNameForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, float ClientPosition, class FName SectionName, class FName NextSectionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "ServerCurrentMontageSetNextSectionNameForMesh");

	Params::UValAbilitySystemComponent_ServerCurrentMontageSetNextSectionNameForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.ClientAnimMontage = ClientAnimMontage;
	Parms.ClientPosition = ClientPosition;
	Parms.SectionName = SectionName;
	Parms.NextSectionName = NextSectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.ServerCurrentMontageJumpToSectionNameForMesh
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class USkeletalMeshComponent*      InMesh                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ClientAnimMontage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SectionName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::ServerCurrentMontageJumpToSectionNameForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "ServerCurrentMontageJumpToSectionNameForMesh");

	Params::UValAbilitySystemComponent_ServerCurrentMontageJumpToSectionNameForMesh_Params Parms{};

	Parms.InMesh = InMesh;
	Parms.ClientAnimMontage = ClientAnimMontage;
	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.RemoveGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayCueParametersGameplayCueParameters                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::RemoveGameplayCueLocal(const struct GameplayTags_GameplayTag& GameplayCueTag, struct GameplayAbilities_GameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "RemoveGameplayCueLocal");

	Params::UValAbilitySystemComponent_RemoveGameplayCueLocal_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;
	Parms.GameplayCueParameters = GameplayCueParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.RefreshAllCharges
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UValAbilitySystemComponent::RefreshAllCharges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "RefreshAllCharges");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.OnRep_ReplicatedAnimMontageForMesh
// (Native, Protected)
// Parameters:

void UValAbilitySystemComponent::OnRep_ReplicatedAnimMontageForMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnRep_ReplicatedAnimMontageForMesh");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.OnRep_Charges
// (Final, Native, Public)
// Parameters:

void UValAbilitySystemComponent::OnRep_Charges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnRep_Charges");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.OnGameplayEffectDurationChange
// (Native, Protected, HasOutParams)
// Parameters:
// struct GameplayAbilities_ActiveGameplayEffectActiveEffect                                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::OnGameplayEffectDurationChange(struct GameplayAbilities_ActiveGameplayEffect* ActiveEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnGameplayEffectDurationChange");

	Params::UValAbilitySystemComponent_OnGameplayEffectDurationChange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ActiveEffect != nullptr)
		*ActiveEffect = std::move(Parms.ActiveEffect);

}


// Function Valhalla.ValAbilitySystemComponent.OnAbilityEndedWithData
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_AbilityEndedDataData                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::OnAbilityEndedWithData(struct GameplayAbilities_AbilityEndedData& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnAbilityEndedWithData");

	Params::UValAbilitySystemComponent_OnAbilityEndedWithData_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.OnAbilityEnded
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*            EndedAbility                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::OnAbilityEnded(class UGameplayAbility* EndedAbility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnAbilityEnded");

	Params::UValAbilitySystemComponent_OnAbilityEnded_Params Parms{};

	Parms.EndedAbility = EndedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.OnAbilityActivated
// (Final, Native, Public)
// Parameters:
// class UGameplayAbility*            ActivatedAbility                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::OnAbilityActivated(class UGameplayAbility* ActivatedAbility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "OnAbilityActivated");

	Params::UValAbilitySystemComponent_OnAbilityActivated_Params Parms{};

	Parms.ActivatedAbility = ActivatedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.MulticastSwappableAbilityEnded
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UClass*                      Type                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::MulticastSwappableAbilityEnded(class UClass* Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "MulticastSwappableAbilityEnded");

	Params::UValAbilitySystemComponent_MulticastSwappableAbilityEnded_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.MulticastSwappableAbilityActivated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UClass*                      Type                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::MulticastSwappableAbilityActivated(class UClass* Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "MulticastSwappableAbilityActivated");

	Params::UValAbilitySystemComponent_MulticastSwappableAbilityActivated_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.K2_RemoveLooseGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerGameplayTags                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::K2_RemoveLooseGameplayTags(struct GameplayTags_GameplayTagContainer& GameplayTags, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "K2_RemoveLooseGameplayTags");

	Params::UValAbilitySystemComponent_K2_RemoveLooseGameplayTags_Params Parms{};

	Parms.GameplayTags = GameplayTags;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.K2_RemoveLooseGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::K2_RemoveLooseGameplayTag(struct GameplayTags_GameplayTag& GameplayTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "K2_RemoveLooseGameplayTag");

	Params::UValAbilitySystemComponent_K2_RemoveLooseGameplayTag_Params Parms{};

	Parms.GameplayTag = GameplayTag;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.K2_GetTagCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    TagToCheck                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValAbilitySystemComponent::K2_GetTagCount(const struct GameplayTags_GameplayTag& TagToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "K2_GetTagCount");

	Params::UValAbilitySystemComponent_K2_GetTagCount_Params Parms{};

	Parms.TagToCheck = TagToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.K2_AddLooseGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerGameplayTags                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::K2_AddLooseGameplayTags(struct GameplayTags_GameplayTagContainer& GameplayTags, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "K2_AddLooseGameplayTags");

	Params::UValAbilitySystemComponent_K2_AddLooseGameplayTags_Params Parms{};

	Parms.GameplayTags = GameplayTags;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.K2_AddLooseGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::K2_AddLooseGameplayTag(struct GameplayTags_GameplayTag& GameplayTag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "K2_AddLooseGameplayTag");

	Params::UValAbilitySystemComponent_K2_AddLooseGameplayTag_Params Parms{};

	Parms.GameplayTag = GameplayTag;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.IncreaseAllCooldowns
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::IncreaseAllCooldowns(float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "IncreaseAllCooldowns");

	Params::UValAbilitySystemComponent_IncreaseAllCooldowns_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.IncreaseActiveCooldownWithTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::IncreaseActiveCooldownWithTag(float Amount, struct GameplayTags_GameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "IncreaseActiveCooldownWithTag");

	Params::UValAbilitySystemComponent_IncreaseActiveCooldownWithTag_Params Parms{};

	Parms.Amount = Amount;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.IncreaseActiveCooldownsByPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::IncreaseActiveCooldownsByPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "IncreaseActiveCooldownsByPercent");

	Params::UValAbilitySystemComponent_IncreaseActiveCooldownsByPercent_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.IncreaseActiveCooldowns
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::IncreaseActiveCooldowns(float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "IncreaseActiveCooldowns");

	Params::UValAbilitySystemComponent_IncreaseActiveCooldowns_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.GetCurrentPredictionKeyStatus
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValAbilitySystemComponent::GetCurrentPredictionKeyStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "GetCurrentPredictionKeyStatus");

	Params::UValAbilitySystemComponent_GetCurrentPredictionKeyStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.FindAbilitySpecHandleForClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UGameplayAbility>AbilityClass                                                     (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     OptionalSourceObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle UValAbilitySystemComponent::FindAbilitySpecHandleForClass(TSubclassOf<class UGameplayAbility> AbilityClass, class UObject* OptionalSourceObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "FindAbilitySpecHandleForClass");

	Params::UValAbilitySystemComponent_FindAbilitySpecHandleForClass_Params Parms{};

	Parms.AbilityClass = AbilityClass;
	Parms.OptionalSourceObject = OptionalSourceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.ExecuteGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayCueParametersGameplayCueParameters                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::ExecuteGameplayCueLocal(const struct GameplayTags_GameplayTag& GameplayCueTag, struct GameplayAbilities_GameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "ExecuteGameplayCueLocal");

	Params::UValAbilitySystemComponent_ExecuteGameplayCueLocal_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;
	Parms.GameplayCueParameters = GameplayCueParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.ClientRefreshAllCharges
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void UValAbilitySystemComponent::ClientRefreshAllCharges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "ClientRefreshAllCharges");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.BP_RemoveGameplayCueWithParams
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::BP_RemoveGameplayCueWithParams(const struct GameplayTags_GameplayTag& GameplayCueTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_RemoveGameplayCueWithParams");

	Params::UValAbilitySystemComponent_BP_RemoveGameplayCueWithParams_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.BP_ExecuteGameplayCueWithParams
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayCueParametersGameplayCueParameters                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::BP_ExecuteGameplayCueWithParams(const struct GameplayTags_GameplayTag& GameplayCueTag, struct GameplayAbilities_GameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_ExecuteGameplayCueWithParams");

	Params::UValAbilitySystemComponent_BP_ExecuteGameplayCueWithParams_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;
	Parms.GameplayCueParameters = GameplayCueParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.BP_ApplyGameplayEffectToTargetWithPrediction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect> GameplayEffectClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*     Target                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleContext                                                          (Parm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_ActiveGameplayEffectHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_ActiveGameplayEffectHandle UValAbilitySystemComponent::BP_ApplyGameplayEffectToTargetWithPrediction(TSubclassOf<class UGameplayEffect> GameplayEffectClass, class UAbilitySystemComponent* Target, float Level, const struct GameplayAbilities_GameplayEffectContextHandle& Context)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_ApplyGameplayEffectToTargetWithPrediction");

	Params::UValAbilitySystemComponent_BP_ApplyGameplayEffectToTargetWithPrediction_Params Parms{};

	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.Target = Target;
	Parms.Level = Level;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.BP_ApplyGameplayEffectToSelfWithPrediction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect> GameplayEffectClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleEffectContext                                                    (Parm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_ActiveGameplayEffectHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_ActiveGameplayEffectHandle UValAbilitySystemComponent::BP_ApplyGameplayEffectToSelfWithPrediction(TSubclassOf<class UGameplayEffect> GameplayEffectClass, float Level, const struct GameplayAbilities_GameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_ApplyGameplayEffectToSelfWithPrediction");

	Params::UValAbilitySystemComponent_BP_ApplyGameplayEffectToSelfWithPrediction_Params Parms{};

	Parms.GameplayEffectClass = GameplayEffectClass;
	Parms.Level = Level;
	Parms.EffectContext = EffectContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.BP_ApplyGameplayEffectSpecToSelfWithPrediction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleSpecHandle                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayAbilities_ActiveGameplayEffectHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_ActiveGameplayEffectHandle UValAbilitySystemComponent::BP_ApplyGameplayEffectSpecToSelfWithPrediction(struct GameplayAbilities_GameplayEffectSpecHandle& SpecHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_ApplyGameplayEffectSpecToSelfWithPrediction");

	Params::UValAbilitySystemComponent_BP_ApplyGameplayEffectSpecToSelfWithPrediction_Params Parms{};

	Parms.SpecHandle = SpecHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.BP_AddGameplayCueWithParams
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayCueParametersGameplayCueParameter                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::BP_AddGameplayCueWithParams(const struct GameplayTags_GameplayTag& GameplayCueTag, struct GameplayAbilities_GameplayCueParameters& GameplayCueParameter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BP_AddGameplayCueWithParams");

	Params::UValAbilitySystemComponent_BP_AddGameplayCueWithParams_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;
	Parms.GameplayCueParameter = GameplayCueParameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.BatchRPCTryActivateAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleInAbilityHandle                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               EndAbilityImmediately                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAbilitySystemComponent::BatchRPCTryActivateAbility(const struct GameplayAbilities_GameplayAbilitySpecHandle& InAbilityHandle, bool EndAbilityImmediately)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "BatchRPCTryActivateAbility");

	Params::UValAbilitySystemComponent_BatchRPCTryActivateAbility_Params Parms{};

	Parms.InAbilityHandle = InAbilityHandle;
	Parms.EndAbilityImmediately = EndAbilityImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilitySystemComponent.AddSourceObjectToEffectContext
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectContextHandleEffectContextHandle                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                     SourceObject                                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::AddSourceObjectToEffectContext(struct GameplayAbilities_GameplayEffectContextHandle& EffectContextHandle, class UObject* SourceObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "AddSourceObjectToEffectContext");

	Params::UValAbilitySystemComponent_AddSourceObjectToEffectContext_Params Parms{};

	Parms.EffectContextHandle = EffectContextHandle;
	Parms.SourceObject = SourceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.AddGameplayCueLocal
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayCueTag                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayCueParametersGameplayCueParameters                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::AddGameplayCueLocal(const struct GameplayTags_GameplayTag& GameplayCueTag, struct GameplayAbilities_GameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "AddGameplayCueLocal");

	Params::UValAbilitySystemComponent_AddGameplayCueLocal_Params Parms{};

	Parms.GameplayCueTag = GameplayCueTag;
	Parms.GameplayCueParameters = GameplayCueParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilitySystemComponent.AddAbilityMaxCharge
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilitySystemComponent::AddAbilityMaxCharge(const struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilitySystemComponent", "AddAbilityMaxCharge");

	Params::UValAbilitySystemComponent_AddAbilityMaxCharge_Params Parms{};

	Parms.Handle = Handle;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAbilitySystemGlobals
// (None)

class UClass* UValAbilitySystemGlobals::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilitySystemGlobals");

	return Clss;
}


// ValAbilitySystemGlobals Valhalla.Default__ValAbilitySystemGlobals
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilitySystemGlobals* UValAbilitySystemGlobals::GetDefaultObj()
{
	static class UValAbilitySystemGlobals* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilitySystemGlobals*>(UValAbilitySystemGlobals::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAbilityKnockbackData
// (None)

class UClass* UValAbilityKnockbackData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityKnockbackData");

	return Clss;
}


// ValAbilityKnockbackData Valhalla.Default__ValAbilityKnockbackData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityKnockbackData* UValAbilityKnockbackData::GetDefaultObj()
{
	static class UValAbilityKnockbackData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityKnockbackData*>(UValAbilityKnockbackData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAbilityImpactData
// (None)

class UClass* UValAbilityImpactData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityImpactData");

	return Clss;
}


// ValAbilityImpactData Valhalla.Default__ValAbilityImpactData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityImpactData* UValAbilityImpactData::GetDefaultObj()
{
	static class UValAbilityImpactData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityImpactData*>(UValAbilityImpactData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAbilityUpgrade
// (None)

class UClass* UValAbilityUpgrade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityUpgrade");

	return Clss;
}


// ValAbilityUpgrade Valhalla.Default__ValAbilityUpgrade
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityUpgrade* UValAbilityUpgrade::GetDefaultObj()
{
	static class UValAbilityUpgrade* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityUpgrade*>(UValAbilityUpgrade::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAbilityUpgrade.UnapplyAbilityUpgrade
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void UValAbilityUpgrade::UnapplyAbilityUpgrade()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "UnapplyAbilityUpgrade");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.SetOwningAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecAbility                                                          (Parm, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::SetOwningAbility(const struct GameplayAbilities_GameplayAbilitySpec& Ability)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "SetOwningAbility");

	Params::UValAbilityUpgrade_SetOwningAbility_Params Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.SetListenSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::SetListenSlot(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "SetListenSlot");

	Params::UValAbilityUpgrade_SetListenSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.SetGeneratedValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::SetGeneratedValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "SetGeneratedValue");

	Params::UValAbilityUpgrade_SetGeneratedValue_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.RemoveActiveGameplayEffectHandles
// (Final, Native, Public)
// Parameters:

void UValAbilityUpgrade::RemoveActiveGameplayEffectHandles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "RemoveActiveGameplayEffectHandles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.OnSlotDeviceHeldChanged
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAbilityUpgrade::OnSlotDeviceHeldChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "OnSlotDeviceHeldChanged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityUpgrade.GetListenSlot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValAbilityUpgrade::GetListenSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "GetListenSlot");

	Params::UValAbilityUpgrade_GetListenSlot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityUpgrade.GetGeneratedValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAbilityUpgrade::GetGeneratedValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "GetGeneratedValue");

	Params::UValAbilityUpgrade_GetGeneratedValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAbilityUpgrade.EventUnapplyAbilityUpgrade
// (Event, Public, BlueprintEvent)
// Parameters:

void UValAbilityUpgrade::EventUnapplyAbilityUpgrade()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "EventUnapplyAbilityUpgrade");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAbilityUpgrade.EventApplyAbilityUpgrade
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UValGameplayAbility>Class                                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValGameplayAbility*         Ability                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::EventApplyAbilityUpgrade(TSubclassOf<class UValGameplayAbility> Class, float Value, class UValGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "EventApplyAbilityUpgrade");

	Params::UValAbilityUpgrade_EventApplyAbilityUpgrade_Params Parms{};

	Parms.Class = Class;
	Parms.Value = Value;
	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilityUpgrade.EventActivateUpgrade
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::EventActivateUpgrade(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "EventActivateUpgrade");

	Params::UValAbilityUpgrade_EventActivateUpgrade_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAbilityUpgrade.EquipSlotUpdated
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::EquipSlotUpdated(const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "EquipSlotUpdated");

	Params::UValAbilityUpgrade_EquipSlotUpdated_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.ApplyAbilityUpgrade
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UValGameplayAbility*         AbilityToUpgrade                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::ApplyAbilityUpgrade(class UValGameplayAbility* AbilityToUpgrade, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "ApplyAbilityUpgrade");

	Params::UValAbilityUpgrade_ApplyAbilityUpgrade_Params Parms{};

	Parms.AbilityToUpgrade = AbilityToUpgrade;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAbilityUpgrade.ActivateUpgrade
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAbilityUpgrade::ActivateUpgrade(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAbilityUpgrade", "ActivateUpgrade");

	Params::UValAbilityUpgrade_ActivateUpgrade_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTier
// (None)

class UClass* UValActivityTier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTier");

	return Clss;
}


// ValActivityTier Valhalla.Default__ValActivityTier
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTier* UValActivityTier::GetDefaultObj()
{
	static class UValActivityTier* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTier*>(UValActivityTier::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityAsset
// (None)

class UClass* UValActivityAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityAsset");

	return Clss;
}


// ValActivityAsset Valhalla.Default__ValActivityAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityAsset* UValActivityAsset::GetDefaultObj()
{
	static class UValActivityAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityAsset*>(UValActivityAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityAsset.IsTierUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              CurrentLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityAsset::IsTierUnlocked(int32 CurrentLevel, int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "IsTierUnlocked");

	Params::UValActivityAsset_IsTierUnlocked_Params Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetTotalTiersNeeded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetTotalTiersNeeded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetTotalTiersNeeded");

	Params::UValActivityAsset_GetTotalTiersNeeded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetTotalProgressNeeded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetTotalProgressNeeded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetTotalProgressNeeded");

	Params::UValActivityAsset_GetTotalProgressNeeded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetTierUnlockLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetTierUnlockLevel(int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetTierUnlockLevel");

	Params::UValActivityAsset_GetTierUnlockLevel_Params Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetTierForProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Progress                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bShowCompleted                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetTierForProgress(int32 Progress, bool bShowCompleted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetTierForProgress");

	Params::UValActivityAsset_GetTierForProgress_Params Parms{};

	Parms.Progress = Progress;
	Parms.bShowCompleted = bShowCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetRewardsForTier
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class URH_ItemAsset*>       Rewards                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValActivityAsset::GetRewardsForTier(int32 Tier, TArray<class URH_ItemAsset*>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetRewardsForTier");

	Params::UValActivityAsset_GetRewardsForTier_Params Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);

}


// Function Valhalla.ValActivityAsset.GetProgressNeededForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCumulative                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetProgressNeededForTier(int32 Tier, bool bCumulative)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetProgressNeededForTier");

	Params::UValActivityAsset_GetProgressNeededForTier_Params Parms{};

	Parms.Tier = Tier;
	Parms.bCumulative = bCumulative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetProgressNeededForCompletion
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetProgressNeededForCompletion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetProgressNeededForCompletion");

	Params::UValActivityAsset_GetProgressNeededForCompletion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetProgressId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetProgressId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetProgressId");

	Params::UValActivityAsset_GetProgressId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetItemId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetItemId");

	Params::UValActivityAsset_GetItemId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetCompletionIdForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetCompletionIdForTier(int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetCompletionIdForTier");

	Params::UValActivityAsset_GetCompletionIdForTier_Params Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetCompletionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityAsset::GetCompletionId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetCompletionId");

	Params::UValActivityAsset_GetCompletionId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetClaimLoot
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class URH_ItemAsset*>       ClaimLoot                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValActivityAsset::GetClaimLoot(TArray<class URH_ItemAsset*>* ClaimLoot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetClaimLoot");

	Params::UValActivityAsset_GetClaimLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ClaimLoot != nullptr)
		*ClaimLoot = std::move(Parms.ClaimLoot);

}


// Function Valhalla.ValActivityAsset.GetActivityType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EActivityType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EActivityType UValActivityAsset::GetActivityType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetActivityType");

	Params::UValActivityAsset_GetActivityType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityAsset.GetActivityResetIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UValActivityAsset::GetActivityResetIds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityAsset", "GetActivityResetIds");

	Params::UValActivityAsset_GetActivityResetIds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValActivityPlayer
// (Actor)

class UClass* AValActivityPlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityPlayer");

	return Clss;
}


// ValActivityPlayer Valhalla.Default__ValActivityPlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class AValActivityPlayer* AValActivityPlayer::GetDefaultObj()
{
	static class AValActivityPlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<AValActivityPlayer*>(AValActivityPlayer::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityPlayer.TurnInActivity
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::TurnInActivity(int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "TurnInActivity");

	Params::AValActivityPlayer_TurnInActivity_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.ServerTurnInActivity
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::ServerTurnInActivity(int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "ServerTurnInActivity");

	Params::AValActivityPlayer_ServerTurnInActivity_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.ServerClaimActivityLoot
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::ServerClaimActivityLoot(int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "ServerClaimActivityLoot");

	Params::AValActivityPlayer_ServerClaimActivityLoot_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnRep_MissionAssets
// (Native, Protected)
// Parameters:

void AValActivityPlayer::OnRep_MissionAssets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnRep_MissionAssets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnRep_ActivityAssets
// (Native, Protected)
// Parameters:

void AValActivityPlayer::OnRep_ActivityAssets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnRep_ActivityAssets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnPlayerInventoryReady
// (Native, Protected)
// Parameters:
// class UValPlayerInventory*         PlayerInventory                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::OnPlayerInventoryReady(class UValPlayerInventory* PlayerInventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnPlayerInventoryReady");

	Params::AValActivityPlayer_OnPlayerInventoryReady_Params Parms{};

	Parms.PlayerInventory = PlayerInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnMissionAssetsLoaded
// (Native, Protected)
// Parameters:

void AValActivityPlayer::OnMissionAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnMissionAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnInventoryUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValActivityPlayer::OnInventoryUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnInventoryUpdated");

	Params::AValActivityPlayer_OnInventoryUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnInventoryLoaded
// (Native, Protected)
// Parameters:

void AValActivityPlayer::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnInstanceOwnershipUpdated
// (Native, Protected)
// Parameters:
// class UValActivityPlayerInstance*  ActivityInstance                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsUnlocked                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::OnInstanceOwnershipUpdated(class UValActivityPlayerInstance* ActivityInstance, bool bIsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnInstanceOwnershipUpdated");

	Params::AValActivityPlayer_OnInstanceOwnershipUpdated_Params Parms{};

	Parms.ActivityInstance = ActivityInstance;
	Parms.bIsUnlocked = bIsUnlocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnGameStateSet
// (Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::OnGameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnGameStateSet");

	Params::AValActivityPlayer_OnGameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.OnAssetsLoaded
// (Native, Protected)
// Parameters:

void AValActivityPlayer::OnAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "OnAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.ClientUpdateActivity
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InventoryCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsOwned                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::ClientUpdateActivity(int32 ActivityId, int32 InventoryCount, bool bIsOwned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "ClientUpdateActivity");

	Params::AValActivityPlayer_ClientUpdateActivity_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.InventoryCount = InventoryCount;
	Parms.bIsOwned = bIsOwned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.ClaimActivityLoot
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::ClaimActivityLoot(int32 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "ClaimActivityLoot");

	Params::AValActivityPlayer_ClaimActivityLoot_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayer.AddProgress
// (Native, Public)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValActivityPlayer::AddProgress(int32 ActivityId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayer", "AddProgress");

	Params::AValActivityPlayer_AddProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityPlayerInstance
// (None)

class UClass* UValActivityPlayerInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityPlayerInstance");

	return Clss;
}


// ValActivityPlayerInstance Valhalla.Default__ValActivityPlayerInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityPlayerInstance* UValActivityPlayerInstance::GetDefaultObj()
{
	static class UValActivityPlayerInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityPlayerInstance*>(UValActivityPlayerInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityPlayerInstance.SetProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::SetProgress(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "SetProgress");

	Params::UValActivityPlayerInstance_SetProgress_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.SetOwnership
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bOwned                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityPlayerInstance::SetOwnership(bool bOwned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "SetOwnership");

	Params::UValActivityPlayerInstance_SetOwnership_Params Parms{};

	Parms.bOwned = bOwned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.SetActivityFailed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Failed                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityPlayerInstance::SetActivityFailed(bool Failed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "SetActivityFailed");

	Params::UValActivityPlayerInstance_SetActivityFailed_Params Parms{};

	Parms.Failed = Failed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.ResetProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::ResetProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "ResetProgress");

	Params::UValActivityPlayerInstance_ResetProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.OnTrackerProgress
// (Final, Native, Public)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityPlayerInstance::OnTrackerProgress(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "OnTrackerProgress");

	Params::UValActivityPlayerInstance_OnTrackerProgress_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.OnMissionProgress
// (Final, Native, Protected)
// Parameters:

void UValActivityPlayerInstance::OnMissionProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "OnMissionProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.OnInventoryProgressUpdated
// (Final, Native, Protected)
// Parameters:

void UValActivityPlayerInstance::OnInventoryProgressUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "OnInventoryProgressUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.OnInventoryOwnershipUpdated
// (Native, Protected)
// Parameters:

void UValActivityPlayerInstance::OnInventoryOwnershipUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "OnInventoryOwnershipUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.OnActivityTierReached
// (Native, Protected)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityPlayerInstance::OnActivityTierReached(int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "OnActivityTierReached");

	Params::UValActivityPlayerInstance_OnActivityTierReached_Params Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityPlayerInstance.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsUnlocked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsUnlocked");

	Params::UValActivityPlayerInstance_IsUnlocked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsTurnedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsTurnedIn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsTurnedIn");

	Params::UValActivityPlayerInstance_IsTurnedIn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsProgressUpdated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsProgressUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsProgressUpdated");

	Params::UValActivityPlayerInstance_IsProgressUpdated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsOwnershipUpdated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsOwnershipUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsOwnershipUpdated");

	Params::UValActivityPlayerInstance_IsOwnershipUpdated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsCurrentTierUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsCurrentTierUnlocked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsCurrentTierUnlocked");

	Params::UValActivityPlayerInstance_IsCurrentTierUnlocked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsComplete()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsComplete");

	Params::UValActivityPlayerInstance_IsComplete_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsClaimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsClaimed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsClaimed");

	Params::UValActivityPlayerInstance_IsClaimed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.IsActivityInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::IsActivityInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "IsActivityInitialized");

	Params::UValActivityPlayerInstance_IsActivityInitialized_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.HasLoadedInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::HasLoadedInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "HasLoadedInventory");

	Params::UValActivityPlayerInstance_HasLoadedInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetTotalProgressNeeded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetTotalProgressNeeded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetTotalProgressNeeded");

	Params::UValActivityPlayerInstance_GetTotalProgressNeeded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetTierCompletionTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        Timestamp                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::GetTierCompletionTime(int32 Tier, struct CoreUObject_DateTime* Timestamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetTierCompletionTime");

	Params::UValActivityPlayerInstance_GetTierCompletionTime_Params Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Timestamp != nullptr)
		*Timestamp = std::move(Parms.Timestamp);

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetProgressTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_DateTime        Timestamp                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::GetProgressTime(struct CoreUObject_DateTime* Timestamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetProgressTime");

	Params::UValActivityPlayerInstance_GetProgressTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Timestamp != nullptr)
		*Timestamp = std::move(Parms.Timestamp);

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetProgressNeededForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCumulative                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetProgressNeededForTier(int32 Tier, bool bCumulative)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetProgressNeededForTier");

	Params::UValActivityPlayerInstance_GetProgressNeededForTier_Params Parms{};

	Parms.Tier = Tier;
	Parms.bCumulative = bCumulative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetProgressInCurrentTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetProgressInCurrentTier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetProgressInCurrentTier");

	Params::UValActivityPlayerInstance_GetProgressInCurrentTier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetPendingProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetPendingProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetPendingProgress");

	Params::UValActivityPlayerInstance_GetPendingProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetOwningController
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* UValActivityPlayerInstance::GetOwningController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetOwningController");

	Params::UValActivityPlayerInstance_GetOwningController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetInitialProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetInitialProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetInitialProgress");

	Params::UValActivityPlayerInstance_GetInitialProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetCustomDataReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValEquipmentAsset*          OutEquipmentAsset                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::GetCustomDataReward(class UValEquipmentAsset** OutEquipmentAsset, int32* Quantity, enum class ERarity* Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetCustomDataReward");

	Params::UValActivityPlayerInstance_GetCustomDataReward_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutEquipmentAsset != nullptr)
		*OutEquipmentAsset = Parms.OutEquipmentAsset;

	if (Quantity != nullptr)
		*Quantity = Parms.Quantity;

	if (Rarity != nullptr)
		*Rarity = Parms.Rarity;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetCurrentTierUnlockLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetCurrentTierUnlockLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetCurrentTierUnlockLevel");

	Params::UValActivityPlayerInstance_GetCurrentTierUnlockLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetCurrentTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetCurrentTier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetCurrentTier");

	Params::UValActivityPlayerInstance_GetCurrentTier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetCurrentProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityPlayerInstance::GetCurrentProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetCurrentProgress");

	Params::UValActivityPlayerInstance_GetCurrentProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetCompletionTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_DateTime        Timestamp                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::GetCompletionTime(struct CoreUObject_DateTime* Timestamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetCompletionTime");

	Params::UValActivityPlayerInstance_GetCompletionTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Timestamp != nullptr)
		*Timestamp = std::move(Parms.Timestamp);

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetActivityTracker
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValActivityTracker*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValActivityTracker* UValActivityPlayerInstance::GetActivityTracker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetActivityTracker");

	Params::UValActivityPlayerInstance_GetActivityTracker_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetActivityPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValActivityPlayer*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValActivityPlayer* UValActivityPlayerInstance::GetActivityPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetActivityPlayer");

	Params::UValActivityPlayerInstance_GetActivityPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetActivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValActivityAsset*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValActivityAsset* UValActivityPlayerInstance::GetActivity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetActivity");

	Params::UValActivityPlayerInstance_GetActivity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.GetAcquiredTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_DateTime        Timestamp                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::GetAcquiredTime(struct CoreUObject_DateTime* Timestamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "GetAcquiredTime");

	Params::UValActivityPlayerInstance_GetAcquiredTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Timestamp != nullptr)
		*Timestamp = std::move(Parms.Timestamp);

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityPlayerInstance.AddProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityPlayerInstance::AddProgress(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityPlayerInstance", "AddProgress");

	Params::UValActivityPlayerInstance_AddProgress_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValActivityTracker
// (None)

class UClass* UValActivityTracker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker");

	return Clss;
}


// ValActivityTracker Valhalla.Default__ValActivityTracker
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker* UValActivityTracker::GetDefaultObj()
{
	static class UValActivityTracker* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker*>(UValActivityTracker::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker.TierReached
// (Final, Native, Protected)
// Parameters:
// class UValActivityPlayerInstance*  PlayerInstance                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Tier                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker::TierReached(class UValActivityPlayerInstance* PlayerInstance, int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "TierReached");

	Params::UValActivityTracker_TierReached_Params Parms{};

	Parms.PlayerInstance = PlayerInstance;
	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityTracker.OnTimeLimitExceeded
// (Final, Native, Protected)
// Parameters:

void UValActivityTracker::OnTimeLimitExceeded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "OnTimeLimitExceeded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityTracker.GetProgressInCurrentTier
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityTracker::GetProgressInCurrentTier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "GetProgressInCurrentTier");

	Params::UValActivityTracker_GetProgressInCurrentTier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityTracker.GetPendingProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityTracker::GetPendingProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "GetPendingProgress");

	Params::UValActivityTracker_GetPendingProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityTracker.GetInitialProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityTracker::GetInitialProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "GetInitialProgress");

	Params::UValActivityTracker_GetInitialProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityTracker.GetCurrentProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityTracker::GetCurrentProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "GetCurrentProgress");

	Params::UValActivityTracker_GetCurrentProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityTracker.GetActivityId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValActivityTracker::GetActivityId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "GetActivityId");

	Params::UValActivityTracker_GetActivityId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValActivityTracker.CanAddProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValActivityTracker::CanAddProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker", "CanAddProgress");

	Params::UValActivityTracker_CanAddProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValActivityTracker_Damage
// (None)

class UClass* UValActivityTracker_Damage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_Damage");

	return Clss;
}


// ValActivityTracker_Damage Valhalla.Default__ValActivityTracker_Damage
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_Damage* UValActivityTracker_Damage::GetDefaultObj()
{
	static class UValActivityTracker_Damage* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_Damage*>(UValActivityTracker_Damage::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_Damage.OnDamage
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_DamageData         DamageData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker_Damage::OnDamage(struct CoreUObject_Guid& PlayerUuid, struct Valhalla_DamageData& DamageData, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_Damage", "OnDamage");

	Params::UValActivityTracker_Damage_OnDamage_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.DamageData = DamageData;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_BotType
// (None)

class UClass* UValActivityTracker_BotType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_BotType");

	return Clss;
}


// ValActivityTracker_BotType Valhalla.Default__ValActivityTracker_BotType
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_BotType* UValActivityTracker_BotType::GetDefaultObj()
{
	static class UValActivityTracker_BotType* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_BotType*>(UValActivityTracker_BotType::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityTracker_DogTag
// (None)

class UClass* UValActivityTracker_DogTag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_DogTag");

	return Clss;
}


// ValActivityTracker_DogTag Valhalla.Default__ValActivityTracker_DogTag
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_DogTag* UValActivityTracker_DogTag::GetDefaultObj()
{
	static class UValActivityTracker_DogTag* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_DogTag*>(UValActivityTracker_DogTag::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_DogTag.OnDogTagFound
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                               IsFriendly                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Split                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EPlayerLevelType        LevelType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker_DogTag::OnDogTagFound(bool IsFriendly, int32 Split, struct Valhalla_InventoryItem& InventoryItem, enum class EPlayerLevelType LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_DogTag", "OnDogTagFound");

	Params::UValActivityTracker_DogTag_OnDogTagFound_Params Parms{};

	Parms.IsFriendly = IsFriendly;
	Parms.Split = Split;
	Parms.InventoryItem = InventoryItem;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_Elimination
// (None)

class UClass* UValActivityTracker_Elimination::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_Elimination");

	return Clss;
}


// ValActivityTracker_Elimination Valhalla.Default__ValActivityTracker_Elimination
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_Elimination* UValActivityTracker_Elimination::GetDefaultObj()
{
	static class UValActivityTracker_Elimination* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_Elimination*>(UValActivityTracker_Elimination::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_Elimination.OnElimination
// (Native, Protected, HasOutParams)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker_Elimination::OnElimination(struct Valhalla_DamageData& DamageData, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_Elimination", "OnElimination");

	Params::UValActivityTracker_Elimination_OnElimination_Params Parms{};

	Parms.DamageData = DamageData;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_ExtractedLoot
// (None)

class UClass* UValActivityTracker_ExtractedLoot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_ExtractedLoot");

	return Clss;
}


// ValActivityTracker_ExtractedLoot Valhalla.Default__ValActivityTracker_ExtractedLoot
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_ExtractedLoot* UValActivityTracker_ExtractedLoot::GetDefaultObj()
{
	static class UValActivityTracker_ExtractedLoot* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_ExtractedLoot*>(UValActivityTracker_ExtractedLoot::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityTracker_Extraction
// (None)

class UClass* UValActivityTracker_Extraction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_Extraction");

	return Clss;
}


// ValActivityTracker_Extraction Valhalla.Default__ValActivityTracker_Extraction
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_Extraction* UValActivityTracker_Extraction::GetDefaultObj()
{
	static class UValActivityTracker_Extraction* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_Extraction*>(UValActivityTracker_Extraction::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_Extraction.OnPlayerExtracted
// (Final, Native, Protected)
// Parameters:

void UValActivityTracker_Extraction::OnPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_Extraction", "OnPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_FirstBlood
// (None)

class UClass* UValActivityTracker_FirstBlood::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_FirstBlood");

	return Clss;
}


// ValActivityTracker_FirstBlood Valhalla.Default__ValActivityTracker_FirstBlood
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_FirstBlood* UValActivityTracker_FirstBlood::GetDefaultObj()
{
	static class UValActivityTracker_FirstBlood* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_FirstBlood*>(UValActivityTracker_FirstBlood::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityTracker_Lights
// (None)

class UClass* UValActivityTracker_Lights::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_Lights");

	return Clss;
}


// ValActivityTracker_Lights Valhalla.Default__ValActivityTracker_Lights
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_Lights* UValActivityTracker_Lights::GetDefaultObj()
{
	static class UValActivityTracker_Lights* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_Lights*>(UValActivityTracker_Lights::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityTracker_OpenCrate
// (None)

class UClass* UValActivityTracker_OpenCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_OpenCrate");

	return Clss;
}


// ValActivityTracker_OpenCrate Valhalla.Default__ValActivityTracker_OpenCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_OpenCrate* UValActivityTracker_OpenCrate::GetDefaultObj()
{
	static class UValActivityTracker_OpenCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_OpenCrate*>(UValActivityTracker_OpenCrate::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_OpenCrate.OnCrateOpened
// (Final, Native, Protected)
// Parameters:

void UValActivityTracker_OpenCrate::OnCrateOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_OpenCrate", "OnCrateOpened");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_Stat
// (None)

class UClass* UValActivityTracker_Stat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_Stat");

	return Clss;
}


// ValActivityTracker_Stat Valhalla.Default__ValActivityTracker_Stat
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_Stat* UValActivityTracker_Stat::GetDefaultObj()
{
	static class UValActivityTracker_Stat* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_Stat*>(UValActivityTracker_Stat::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityConfigData
// (None)

class UClass* UValActivityConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityConfigData");

	return Clss;
}


// ValActivityConfigData Valhalla.Default__ValActivityConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityConfigData* UValActivityConfigData::GetDefaultObj()
{
	static class UValActivityConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityConfigData*>(UValActivityConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMissionConfig
// (None)

class UClass* UValMissionConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionConfig");

	return Clss;
}


// ValMissionConfig Valhalla.Default__ValMissionConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMissionConfig* UValMissionConfig::GetDefaultObj()
{
	static class UValMissionConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMissionConfig*>(UValMissionConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMissionSequenceAsset
// (None)

class UClass* UValMissionSequenceAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionSequenceAsset");

	return Clss;
}


// ValMissionSequenceAsset Valhalla.Default__ValMissionSequenceAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMissionSequenceAsset* UValMissionSequenceAsset::GetDefaultObj()
{
	static class UValMissionSequenceAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMissionSequenceAsset*>(UValMissionSequenceAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAgentConfig
// (None)

class UClass* UValAgentConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAgentConfig");

	return Clss;
}


// ValAgentConfig Valhalla.Default__ValAgentConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAgentConfig* UValAgentConfig::GetDefaultObj()
{
	static class UValAgentConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAgentConfig*>(UValAgentConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAIBlueprintHelperLibrary
// (None)

class UClass* UValAIBlueprintHelperLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIBlueprintHelperLibrary");

	return Clss;
}


// ValAIBlueprintHelperLibrary Valhalla.Default__ValAIBlueprintHelperLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIBlueprintHelperLibrary* UValAIBlueprintHelperLibrary::GetDefaultObj()
{
	static class UValAIBlueprintHelperLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIBlueprintHelperLibrary*>(UValAIBlueprintHelperLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIBlueprintHelperLibrary.UpdatePerceptionSightConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAIController*               Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SightRadius                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LoseSightRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PeripheralVisionAngleDegrees                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::UpdatePerceptionSightConfig(class AAIController* Controller, float SightRadius, float LoseSightRadius, float PeripheralVisionAngleDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "UpdatePerceptionSightConfig");

	Params::UValAIBlueprintHelperLibrary_UpdatePerceptionSightConfig_Params Parms{};

	Parms.Controller = Controller;
	Parms.SightRadius = SightRadius;
	Parms.LoseSightRadius = LoseSightRadius;
	Parms.PeripheralVisionAngleDegrees = PeripheralVisionAngleDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.UpdatePerceptionHearingConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAIController*               Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HearingRadius                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::UpdatePerceptionHearingConfig(class AAIController* Controller, float HearingRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "UpdatePerceptionHearingConfig");

	Params::UValAIBlueprintHelperLibrary_UpdatePerceptionHearingConfig_Params Parms{};

	Parms.Controller = Controller;
	Parms.HearingRadius = HearingRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.UnregisterAsCoverWithSightManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      InActor                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::UnregisterAsCoverWithSightManager(class UObject* WorldContextObject, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "UnregisterAsCoverWithSightManager");

	Params::UValAIBlueprintHelperLibrary_UnregisterAsCoverWithSightManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.SyncLoadBotData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UValBotData*                 BotData                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::SyncLoadBotData(class UValBotData* BotData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "SyncLoadBotData");

	Params::UValAIBlueprintHelperLibrary_SyncLoadBotData_Params Parms{};

	Parms.BotData = BotData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.SpawnBotGroup
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotWaveConfig*           SpawnConfig                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_Transform>SpawnLocations                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bTreatNullBotDataAsValid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AValCharacter*>       OutBots                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AValBotSpawnVolume*          OwningVolume                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::SpawnBotGroup(class UObject* WorldContextObject, class UValBotWaveConfig* SpawnConfig, TArray<struct CoreUObject_Transform>& SpawnLocations, bool bTreatNullBotDataAsValid, TArray<class AValCharacter*>* OutBots, class AValBotSpawnVolume* OwningVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "SpawnBotGroup");

	Params::UValAIBlueprintHelperLibrary_SpawnBotGroup_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpawnConfig = SpawnConfig;
	Parms.SpawnLocations = SpawnLocations;
	Parms.bTreatNullBotDataAsValid = bTreatNullBotDataAsValid;
	Parms.OwningVolume = OwningVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBots != nullptr)
		*OutBots = std::move(Parms.OutBots);

}


// Function Valhalla.ValAIBlueprintHelperLibrary.SpawnAIFromClassWithData
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>           PawnClass                                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotData*                 ConfigData                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*               BehaviorTree                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bNoCollisionFail                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UValAIBlueprintHelperLibrary::SpawnAIFromClassWithData(class UObject* WorldContextObject, TSubclassOf<class APawn> PawnClass, class UValBotData* ConfigData, class UBehaviorTree* BehaviorTree, const struct CoreUObject_Vector& Location, const struct CoreUObject_Rotator& Rotation, bool bNoCollisionFail, class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "SpawnAIFromClassWithData");

	Params::UValAIBlueprintHelperLibrary_SpawnAIFromClassWithData_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnClass = PawnClass;
	Parms.ConfigData = ConfigData;
	Parms.BehaviorTree = BehaviorTree;
	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.bNoCollisionFail = bNoCollisionFail;
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.SetCanEverAffectNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*             Component                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCanAffectNavigation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::SetCanEverAffectNavigation(class UActorComponent* Component, bool bCanAffectNavigation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "SetCanEverAffectNavigation");

	Params::UValAIBlueprintHelperLibrary_SetCanEverAffectNavigation_Params Parms{};

	Parms.Component = Component;
	Parms.bCanAffectNavigation = bCanAffectNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.RegisterAsCoverWithSightManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      InActor                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::RegisterAsCoverWithSightManager(class UObject* WorldContextObject, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "RegisterAsCoverWithSightManager");

	Params::UValAIBlueprintHelperLibrary_RegisterAsCoverWithSightManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.PredictTargetLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PredictionTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValAIBlueprintHelperLibrary::PredictTargetLocation(class UObject* WorldContextObject, class AActor* TargetActor, float PredictionTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "PredictTargetLocation");

	Params::UValAIBlueprintHelperLibrary_PredictTargetLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetActor = TargetActor;
	Parms.PredictionTime = PredictionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.IsLocationWithinBuilding
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          InLocation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::IsLocationWithinBuilding(class UObject* WorldContextObject, const struct CoreUObject_Vector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "IsLocationWithinBuilding");

	Params::UValAIBlueprintHelperLibrary_IsLocationWithinBuilding_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InLocation = InLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.IsLocationOnNavMesh
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          InLocation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutClosestNavMeshLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::IsLocationOnNavMesh(class UObject* WorldContextObject, const struct CoreUObject_Vector& InLocation, struct CoreUObject_Vector* OutClosestNavMeshLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "IsLocationOnNavMesh");

	Params::UValAIBlueprintHelperLibrary_IsLocationOnNavMesh_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InLocation = InLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutClosestNavMeshLocation != nullptr)
		*OutClosestNavMeshLocation = std::move(Parms.OutClosestNavMeshLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.IsCybridTeamID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::IsCybridTeamID(class UObject* WorldContextObject, int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "IsCybridTeamID");

	Params::UValAIBlueprintHelperLibrary_IsCybridTeamID_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.IsCybridCalmTowardsTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      CybridActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::IsCybridCalmTowardsTarget(class AActor* CybridActor, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "IsCybridCalmTowardsTarget");

	Params::UValAIBlueprintHelperLibrary_IsCybridCalmTowardsTarget_Params Parms{};

	Parms.CybridActor = CybridActor;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.HasEffectiveAim
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          MuzzleLocation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          EffectiveAimLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          PredictedLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::HasEffectiveAim(class UObject* WorldContextObject, const struct CoreUObject_Vector& MuzzleLocation, class AActor* TargetActor, struct CoreUObject_Vector* EffectiveAimLocation, const struct CoreUObject_Vector& PredictedLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "HasEffectiveAim");

	Params::UValAIBlueprintHelperLibrary_HasEffectiveAim_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MuzzleLocation = MuzzleLocation;
	Parms.TargetActor = TargetActor;
	Parms.PredictedLocation = PredictedLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EffectiveAimLocation != nullptr)
		*EffectiveAimLocation = std::move(Parms.EffectiveAimLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetSpawnBotGroupData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotWaveConfig*           SpawnConfig                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>SpawnLocations                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               bTreatNullBotDataAsValid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SpawnPercentModifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ValBotWaveSetSpawnData>OutBotData                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::GetSpawnBotGroupData(class UObject* WorldContextObject, class UValBotWaveConfig* SpawnConfig, TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>* SpawnLocations, bool bTreatNullBotDataAsValid, float SpawnPercentModifier, TArray<struct Valhalla_ValBotWaveSetSpawnData>* OutBotData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetSpawnBotGroupData");

	Params::UValAIBlueprintHelperLibrary_GetSpawnBotGroupData_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpawnConfig = SpawnConfig;
	Parms.bTreatNullBotDataAsValid = bTreatNullBotDataAsValid;
	Parms.SpawnPercentModifier = SpawnPercentModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SpawnLocations != nullptr)
		*SpawnLocations = Parms.SpawnLocations;

	if (OutBotData != nullptr)
		*OutBotData = std::move(Parms.OutBotData);

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetSlopeAngleFromActor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      SourceActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          EndOffsetFromActorLocation                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutSlopeAngle                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::GetSlopeAngleFromActor(class AActor* SourceActor, const struct CoreUObject_Vector& EndOffsetFromActorLocation, float* OutSlopeAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetSlopeAngleFromActor");

	Params::UValAIBlueprintHelperLibrary_GetSlopeAngleFromActor_Params Parms{};

	Parms.SourceActor = SourceActor;
	Parms.EndOffsetFromActorLocation = EndOffsetFromActorLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSlopeAngle != nullptr)
		*OutSlopeAngle = Parms.OutSlopeAngle;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetSlopeAngle
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          TraceStart                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TraceEnd                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutSlopeAngle                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::GetSlopeAngle(struct CoreUObject_Vector& TraceStart, struct CoreUObject_Vector& TraceEnd, class AActor* SourceActor, float* OutSlopeAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetSlopeAngle");

	Params::UValAIBlueprintHelperLibrary_GetSlopeAngle_Params Parms{};

	Parms.TraceStart = TraceStart;
	Parms.TraceEnd = TraceEnd;
	Parms.SourceActor = SourceActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSlopeAngle != nullptr)
		*OutSlopeAngle = Parms.OutSlopeAngle;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetRotationTowardsTarget
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AValCharacter*               ValOwner                                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::GetRotationTowardsTarget(class AValCharacter* ValOwner, struct CoreUObject_Rotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetRotationTowardsTarget");

	Params::UValAIBlueprintHelperLibrary_GetRotationTowardsTarget_Params Parms{};

	Parms.ValOwner = ValOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetPerceptionHearingRadius
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAIController*               Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAIBlueprintHelperLibrary::GetPerceptionHearingRadius(class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetPerceptionHearingRadius");

	Params::UValAIBlueprintHelperLibrary_GetPerceptionHearingRadius_Params Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetHazardsTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamState*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATeamState* UValAIBlueprintHelperLibrary::GetHazardsTeam(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetHazardsTeam");

	Params::UValAIBlueprintHelperLibrary_GetHazardsTeam_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetDoorExitPoints
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OutActors                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::GetDoorExitPoints(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorClass, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetDoorExitPoints");

	Params::UValAIBlueprintHelperLibrary_GetDoorExitPoints_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetAlarmSpawnWave
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValUtopiaConstructor*       OwningConstructor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValBotWaveConfig*>   SpawnWaves                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::GetAlarmSpawnWave(class UObject* WorldContextObject, class AValUtopiaConstructor* OwningConstructor, TArray<class UValBotWaveConfig*>* SpawnWaves)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetAlarmSpawnWave");

	Params::UValAIBlueprintHelperLibrary_GetAlarmSpawnWave_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningConstructor = OwningConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SpawnWaves != nullptr)
		*SpawnWaves = std::move(Parms.SpawnWaves);

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetAlarmSpawnConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValUtopiaConstructor*       OwningConstructor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotWaveConfig*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBotWaveConfig* UValAIBlueprintHelperLibrary::GetAlarmSpawnConfig(class UObject* WorldContextObject, class AValUtopiaConstructor* OwningConstructor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetAlarmSpawnConfig");

	Params::UValAIBlueprintHelperLibrary_GetAlarmSpawnConfig_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningConstructor = OwningConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetAITeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamState*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATeamState* UValAIBlueprintHelperLibrary::GetAITeam(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetAITeam");

	Params::UValAIBlueprintHelperLibrary_GetAITeam_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetActorPredictedHeadLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          PredictedLocation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValAIBlueprintHelperLibrary::GetActorPredictedHeadLocation(class AActor* Actor, struct CoreUObject_Vector& PredictedLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetActorPredictedHeadLocation");

	Params::UValAIBlueprintHelperLibrary_GetActorPredictedHeadLocation_Params Parms{};

	Parms.Actor = Actor;
	Parms.PredictedLocation = PredictedLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetActorHeadLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValAIBlueprintHelperLibrary::GetActorHeadLocation(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetActorHeadLocation");

	Params::UValAIBlueprintHelperLibrary_GetActorHeadLocation_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetAccelerationFromJetpack
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PredictionTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValAIBlueprintHelperLibrary::GetAccelerationFromJetpack(class UObject* WorldContextObject, class AActor* TargetActor, float PredictionTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetAccelerationFromJetpack");

	Params::UValAIBlueprintHelperLibrary_GetAccelerationFromJetpack_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetActor = TargetActor;
	Parms.PredictionTime = PredictionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.GetAccelerationFromFalling
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PredictionTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValAIBlueprintHelperLibrary::GetAccelerationFromFalling(class UObject* WorldContextObject, class AActor* TargetActor, float PredictionTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "GetAccelerationFromFalling");

	Params::UValAIBlueprintHelperLibrary_GetAccelerationFromFalling_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetActor = TargetActor;
	Parms.PredictionTime = PredictionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.FindNearbyCoverFromSightManager
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OutCoverActors                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValAIBlueprintHelperLibrary::FindNearbyCoverFromSightManager(class UObject* WorldContextObject, const struct CoreUObject_Vector& Location, float Radius, TArray<class AActor*>* OutCoverActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "FindNearbyCoverFromSightManager");

	Params::UValAIBlueprintHelperLibrary_FindNearbyCoverFromSightManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = Location;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutCoverActors != nullptr)
		*OutCoverActors = std::move(Parms.OutCoverActors);

}


// Function Valhalla.ValAIBlueprintHelperLibrary.DoesPathExistToTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::DoesPathExistToTarget(class UObject* WorldContextObject, class AActor* SourceActor, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "DoesPathExistToTarget");

	Params::UValAIBlueprintHelperLibrary_DoesPathExistToTarget_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SourceActor = SourceActor;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.DoesPathExistToLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TargetLocation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIBlueprintHelperLibrary::DoesPathExistToLocation(class UObject* WorldContextObject, class AActor* SourceActor, struct CoreUObject_Vector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "DoesPathExistToLocation");

	Params::UValAIBlueprintHelperLibrary_DoesPathExistToLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SourceActor = SourceActor;
	Parms.TargetLocation = TargetLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.CalculateBotReactionTimeForTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UValBotData*                 BotData                                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Target                                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAIBlueprintHelperLibrary::CalculateBotReactionTimeForTarget(class UValBotData* BotData, class AValCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "CalculateBotReactionTimeForTarget");

	Params::UValAIBlueprintHelperLibrary_CalculateBotReactionTimeForTarget_Params Parms{};

	Parms.BotData = BotData;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIBlueprintHelperLibrary.CalculateBotAccuracyForTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UValBotData*                 BotData                                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Target                                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAIBlueprintHelperLibrary::CalculateBotAccuracyForTarget(class UValBotData* BotData, class AValCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIBlueprintHelperLibrary", "CalculateBotAccuracyForTarget");

	Params::UValAIBlueprintHelperLibrary_CalculateBotAccuracyForTarget_Params Parms{};

	Parms.BotData = BotData;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAIController
// (Actor)

class UClass* AValAIController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIController");

	return Clss;
}


// ValAIController Valhalla.Default__ValAIController
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAIController* AValAIController::GetDefaultObj()
{
	static class AValAIController* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAIController*>(AValAIController::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIController.UpdateReviveBeaconTarget
// (Final, Native, Public)
// Parameters:

void AValAIController::UpdateReviveBeaconTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "UpdateReviveBeaconTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.UpdateBlackboardKeyValueAsVector
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                        Key                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::UpdateBlackboardKeyValueAsVector(class FName Key, const struct CoreUObject_Vector& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "UpdateBlackboardKeyValueAsVector");

	Params::AValAIController_UpdateBlackboardKeyValueAsVector_Params Parms{};

	Parms.Key = Key;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAIController.UpdateBlackboardKeyValueAsObject
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        Key                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Value                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::UpdateBlackboardKeyValueAsObject(class FName Key, class UObject* Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "UpdateBlackboardKeyValueAsObject");

	Params::AValAIController_UpdateBlackboardKeyValueAsObject_Params Parms{};

	Parms.Key = Key;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAIController.UpdateBlackboardKeyValueAsEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        Key                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::UpdateBlackboardKeyValueAsEnum(class FName Key, uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "UpdateBlackboardKeyValueAsEnum");

	Params::AValAIController_UpdateBlackboardKeyValueAsEnum_Params Parms{};

	Parms.Key = Key;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.UpdateBlackboardKeyValueAsBool
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        Key                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::UpdateBlackboardKeyValueAsBool(class FName Key, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "UpdateBlackboardKeyValueAsBool");

	Params::AValAIController_UpdateBlackboardKeyValueAsBool_Params Parms{};

	Parms.Key = Key;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAIController.ToggleTargetingAllAI
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAIController::ToggleTargetingAllAI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "ToggleTargetingAllAI");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIController.ToggleShootingAllAI
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAIController::ToggleShootingAllAI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "ToggleShootingAllAI");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIController.TogglePauseAllAI
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAIController::TogglePauseAllAI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "TogglePauseAllAI");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIController.SetTetherRadius
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::SetTetherRadius(float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "SetTetherRadius");

	Params::AValAIController_SetTetherRadius_Params Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAIController.SetIsCurrentlyInBuilding
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::SetIsCurrentlyInBuilding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "SetIsCurrentlyInBuilding");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.SetBotLeader
// (Final, Native, Public)
// Parameters:
// class AValCharacter*               Leader                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::SetBotLeader(class AValCharacter* Leader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "SetBotLeader");

	Params::AValAIController_SetBotLeader_Params Parms{};

	Parms.Leader = Leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.RespawnAIDeferred
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFindRespawnPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::RespawnAIDeferred(float Time, bool bFindRespawnPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "RespawnAIDeferred");

	Params::AValAIController_RespawnAIDeferred_Params Parms{};

	Parms.Time = Time;
	Parms.bFindRespawnPoint = bFindRespawnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.Respawn
// (Final, Native, Public)
// Parameters:
// bool                               bFindRespawnPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::Respawn(bool bFindRespawnPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "Respawn");

	Params::AValAIController_Respawn_Params Parms{};

	Parms.bFindRespawnPoint = bFindRespawnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnTeamChanged
// (Final, Native, Public)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnTeamChanged(int32 OldTeamId, int32 NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnTeamChanged");

	Params::AValAIController_OnTeamChanged_Params Parms{};

	Parms.OldTeamId = OldTeamId;
	Parms.NewTeamId = NewTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnReviveBeaconStarted
// (Final, Native, Public)
// Parameters:
// class AValReviveBeacon*            Beacon                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnReviveBeaconStarted(class AValReviveBeacon* Beacon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnReviveBeaconStarted");

	Params::AValAIController_OnReviveBeaconStarted_Params Parms{};

	Parms.Beacon = Beacon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnReviveBeaconDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnReviveBeaconDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnReviveBeaconDestroyed");

	Params::AValAIController_OnReviveBeaconDestroyed_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnReviveBeacon
// (Final, Native, Public)
// Parameters:
// class AValReviveBeacon*            Beacon                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnReviveBeacon(class AValReviveBeacon* Beacon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnReviveBeacon");

	Params::AValAIController_OnReviveBeacon_Params Parms{};

	Parms.Beacon = Beacon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnPortalState
// (Final, Native, Public)
// Parameters:
// enum class EGameObjectiveState     PortalState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnPortalState(enum class EGameObjectiveState PortalState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnPortalState");

	Params::AValAIController_OnPortalState_Params Parms{};

	Parms.PortalState = PortalState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnLegendaryArtifact
// (Final, Native, Public)
// Parameters:

void AValAIController::OnLegendaryArtifact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnLegendaryArtifact");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnExtractionPodsUpdated
// (Final, Native, Public)
// Parameters:

void AValAIController::OnExtractionPodsUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnExtractionPodsUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnCharacterSetupComplete
// (Native, Public)
// Parameters:
// class AValCharacter*               Bot                                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnCharacterSetupComplete(class AValCharacter* Bot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnCharacterSetupComplete");

	Params::AValAIController_OnCharacterSetupComplete_Params Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnBotLoadoutChanged
// (Final, Native, Public)
// Parameters:

void AValAIController::OnBotLoadoutChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnBotLoadoutChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnBotLeaderSet
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Leader                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::OnBotLeaderSet(class AValCharacter* Leader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnBotLeaderSet");

	Params::AValAIController_OnBotLeaderSet_Params Parms{};

	Parms.Leader = Leader;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValAIController.OnActivePortals
// (Final, Native, Public)
// Parameters:

void AValAIController::OnActivePortals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnActivePortals");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.OnActiveLootExtractions
// (Final, Native, Public)
// Parameters:

void AValAIController::OnActiveLootExtractions()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "OnActiveLootExtractions");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.IsPlayerBotController
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAIController::IsPlayerBotController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "IsPlayerBotController");

	Params::AValAIController_IsPlayerBotController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIController.IsInBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAIController::IsInBuilding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "IsInBuilding");

	Params::AValAIController_IsInBuilding_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIController.GetValCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValAIController::GetValCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "GetValCharacter");

	Params::AValAIController_GetValCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIController.GetBotConfigData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValBotData*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBotData* AValAIController::GetBotConfigData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "GetBotConfigData");

	Params::AValAIController_GetBotConfigData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIController.EnableControlRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::EnableControlRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "EnableControlRotation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.EnableAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::EnableAI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "EnableAI");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.DisableControlRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::DisableControlRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "DisableControlRotation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.DisableAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::DisableAI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "DisableAI");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.DebugDump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAIController::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIController.AddNewReviveBeacon
// (Final, Native, Public)
// Parameters:
// class AValReviveBeacon*            Beacon                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController::AddNewReviveBeacon(class AValReviveBeacon* Beacon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController", "AddNewReviveBeacon");

	Params::AValAIController_AddNewReviveBeacon_Params Parms{};

	Parms.Beacon = Beacon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIController_NPC
// (Actor)

class UClass* AValAIController_NPC::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIController_NPC");

	return Clss;
}


// ValAIController_NPC Valhalla.Default__ValAIController_NPC
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAIController_NPC* AValAIController_NPC::GetDefaultObj()
{
	static class AValAIController_NPC* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAIController_NPC*>(AValAIController_NPC::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIController_NPC.StartBehaviorTree
// (Final, Native, Protected)
// Parameters:
// class AValCharacter*               ValChar                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAIController_NPC::StartBehaviorTree(class AValCharacter* ValChar)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIController_NPC", "StartBehaviorTree");

	Params::AValAIController_NPC_StartBehaviorTree_Params Parms{};

	Parms.ValChar = ValChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIFSM
// (None)

class UClass* UValAIFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIFSM");

	return Clss;
}


// ValAIFSM Valhalla.Default__ValAIFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIFSM* UValAIFSM::GetDefaultObj()
{
	static class UValAIFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIFSM*>(UValAIFSM::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIFSM.StopMachineBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM::StopMachineBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StopMachineBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM.StopMachine
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSM::StopMachine()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StopMachine");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.StateTimerExpired
// (Final, Native, Protected)
// Parameters:

void UValAIFSM::StateTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StateTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.StartMachineWithStartStateOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               InBot                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    StartStateOverrideTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM::StartMachineWithStartStateOverride(class AValCharacter* InBot, const struct GameplayTags_GameplayTag& StartStateOverrideTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StartMachineWithStartStateOverride");

	Params::UValAIFSM_StartMachineWithStartStateOverride_Params Parms{};

	Parms.InBot = InBot;
	Parms.StartStateOverrideTag = StartStateOverrideTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.StartMachineBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM::StartMachineBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StartMachineBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM.StartMachine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               InBot                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM::StartMachine(class AValCharacter* InBot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "StartMachine");

	Params::UValAIFSM_StartMachine_Params Parms{};

	Parms.InBot = InBot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.ReevaluateTransition
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void UValAIFSM::ReevaluateTransition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "ReevaluateTransition");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM.IsStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIFSM::IsStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "IsStarted");

	Params::UValAIFSM_IsStarted_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM.IsDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIFSM::IsDebug()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "IsDebug");

	Params::UValAIFSM_IsDebug_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM.InitializeBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM::InitializeBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "InitializeBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSM::Initialize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "Initialize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.GotoState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    NextStateTag                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bForce                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM::GotoState(const struct GameplayTags_GameplayTag& NextStateTag, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GotoState");

	Params::UValAIFSM_GotoState_Params Parms{};

	Parms.NextStateTag = NextStateTag;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.GetTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValAIFSM::GetTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GetTag");

	Params::UValAIFSM_GetTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM.GetState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAIFSM_State*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAIFSM_State* UValAIFSM::GetState(const struct GameplayTags_GameplayTag& InTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GetState");

	Params::UValAIFSM_GetState_Params Parms{};

	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM.GetDebugDisplayNameBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      OutDisplayName                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM::GetDebugDisplayNameBP(class FString* OutDisplayName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GetDebugDisplayNameBP");

	Params::UValAIFSM_GetDebugDisplayNameBP_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDisplayName != nullptr)
		*OutDisplayName = std::move(Parms.OutDisplayName);

}


// Function Valhalla.ValAIFSM.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValAIFSM::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GetCharacter");

	Params::UValAIFSM_GetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM.GenerateActiveTransitionTags
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM::GenerateActiveTransitionTags()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "GenerateActiveTransitionTags");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM.DebugDump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSM::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.DebugDisplayLayout
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:

void UValAIFSM::DebugDisplayLayout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "DebugDisplayLayout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM.CollectChildFSMsAndSelf
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValAIFSM*>           OutAllFSMs                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValAIFSM::CollectChildFSMsAndSelf(TArray<class UValAIFSM*>* OutAllFSMs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "CollectChildFSMsAndSelf");

	Params::UValAIFSM_CollectChildFSMsAndSelf_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutAllFSMs != nullptr)
		*OutAllFSMs = std::move(Parms.OutAllFSMs);

}


// Function Valhalla.ValAIFSM.CheckForTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSM::CheckForTransition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM", "CheckForTransition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIFSM_State
// (None)

class UClass* UValAIFSM_State::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIFSM_State");

	return Clss;
}


// ValAIFSM_State Valhalla.Default__ValAIFSM_State
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIFSM_State* UValAIFSM_State::GetDefaultObj()
{
	static class UValAIFSM_State* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIFSM_State*>(UValAIFSM_State::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIFSM_State.TimeoutTimerExpired
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UValAIFSM_State::TimeoutTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "TimeoutTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.StartStateBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM_State::StartStateBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "StartStateBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM_State.ResetStateTimeout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewTimeoutTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM_State::ResetStateTimeout(float NewTimeoutTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "ResetStateTimeout");

	Params::UValAIFSM_State_ResetStateTimeout_Params Parms{};

	Parms.NewTimeoutTime = NewTimeoutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.OverwriteTimeInStateVariables
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM_State::OverwriteTimeInStateVariables()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "OverwriteTimeInStateVariables");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM_State.OverwritePersonalityBehaviorTree
// (Native, Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM_State::OverwritePersonalityBehaviorTree()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "OverwritePersonalityBehaviorTree");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.OverwriteBehaviorTreeBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM_State::OverwriteBehaviorTreeBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "OverwriteBehaviorTreeBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM_State.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIFSM_State::IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "IsActive");

	Params::UValAIFSM_State_IsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM_State.GetTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValAIFSM_State::GetTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "GetTag");

	Params::UValAIFSM_State_GetTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM_State.GetMinTimeInState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAIFSM_State::GetMinTimeInState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "GetMinTimeInState");

	Params::UValAIFSM_State_GetMinTimeInState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM_State.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValAIFSM_State::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "GetCharacter");

	Params::UValAIFSM_State_GetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSM_State.EndStateBP
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValAIFSM_State::EndStateBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "EndStateBP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAIFSM_State.DebugDump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSM_State::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.DebugDisplayLayout
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:

void UValAIFSM_State::DebugDisplayLayout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "DebugDisplayLayout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.CheckForTransition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerActiveTransitionTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAIFSM_State::CheckForTransition(struct GameplayTags_GameplayTagContainer& ActiveTransitionTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "CheckForTransition");

	Params::UValAIFSM_State_CheckForTransition_Params Parms{};

	Parms.ActiveTransitionTags = ActiveTransitionTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSM_State.AddActiveEffectToRemovalList
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_ActiveGameplayEffectHandleActiveHandle                                                     (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSM_State::AddActiveEffectToRemovalList(struct GameplayAbilities_ActiveGameplayEffectHandle& ActiveHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSM_State", "AddActiveEffectToRemovalList");

	Params::UValAIFSM_State_AddActiveEffectToRemovalList_Params Parms{};

	Parms.ActiveHandle = ActiveHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIFSMComponent
// (None)

class UClass* UValAIFSMComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIFSMComponent");

	return Clss;
}


// ValAIFSMComponent Valhalla.Default__ValAIFSMComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIFSMComponent* UValAIFSMComponent::GetDefaultObj()
{
	static class UValAIFSMComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIFSMComponent*>(UValAIFSMComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIFSMComponent.StopMachine
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSMComponent::StopMachine()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "StopMachine");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.StartMachineWithStartStateOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    StartStateOverrideTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSMComponent::StartMachineWithStartStateOverride(const struct GameplayTags_GameplayTag& StartStateOverrideTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "StartMachineWithStartStateOverride");

	Params::UValAIFSMComponent_StartMachineWithStartStateOverride_Params Parms{};

	Parms.StartStateOverrideTag = StartStateOverrideTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.StartMachine
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSMComponent::StartMachine()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "StartMachine");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.RegisterStartStateHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    FSM                                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    State                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 HandlerDelegate                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSMComponent::RegisterStartStateHandler(const struct GameplayTags_GameplayTag& FSM, const struct GameplayTags_GameplayTag& State, FDelegateProperty_ HandlerDelegate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "RegisterStartStateHandler");

	Params::UValAIFSMComponent_RegisterStartStateHandler_Params Parms{};

	Parms.FSM = FSM;
	Parms.State = State;
	Parms.HandlerDelegate = HandlerDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.RegisterEndStateHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    FSM                                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    State                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 HandlerDelegate                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIFSMComponent::RegisterEndStateHandler(const struct GameplayTags_GameplayTag& FSM, const struct GameplayTags_GameplayTag& State, FDelegateProperty_ HandlerDelegate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "RegisterEndStateHandler");

	Params::UValAIFSMComponent_RegisterEndStateHandler_Params Parms{};

	Parms.FSM = FSM;
	Parms.State = State;
	Parms.HandlerDelegate = HandlerDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.OnRep_CurrentStates
// (Final, Native, Protected)
// Parameters:

void UValAIFSMComponent::OnRep_CurrentStates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "OnRep_CurrentStates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIFSMComponent.IsStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAIFSMComponent::IsStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "IsStarted");

	Params::UValAIFSMComponent_IsStarted_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSMComponent.GetAllFSMs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValAIFSM*>           OutAllFSMs                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValAIFSMComponent::GetAllFSMs(TArray<class UValAIFSM*>* OutAllFSMs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "GetAllFSMs");

	Params::UValAIFSMComponent_GetAllFSMs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutAllFSMs != nullptr)
		*OutAllFSMs = std::move(Parms.OutAllFSMs);

}


// Function Valhalla.ValAIFSMComponent.GetAIAudioCueAgent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAIAudioCueAgent*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAIAudioCueAgent* UValAIFSMComponent::GetAIAudioCueAgent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "GetAIAudioCueAgent");

	Params::UValAIFSMComponent_GetAIAudioCueAgent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAIFSMComponent.DebugDump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIFSMComponent::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIFSMComponent", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAimAssistComponent
// (None)

class UClass* UValAimAssistComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAimAssistComponent");

	return Clss;
}


// ValAimAssistComponent Valhalla.Default__ValAimAssistComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAimAssistComponent* UValAimAssistComponent::GetDefaultObj()
{
	static class UValAimAssistComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAimAssistComponent*>(UValAimAssistComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAimAssistComponent.OnPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                       Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAimAssistComponent::OnPawnChanged(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAimAssistComponent", "OnPawnChanged");

	Params::UValAimAssistComponent_OnPawnChanged_Params Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAimAssistComponent.OnOwnerEquippedWeaponUpdated
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAimAssistComponent::OnOwnerEquippedWeaponUpdated(const struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAimAssistComponent", "OnOwnerEquippedWeaponUpdated");

	Params::UValAimAssistComponent_OnOwnerEquippedWeaponUpdated_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAimAssistConfigDataAsset
// (None)

class UClass* UValAimAssistConfigDataAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAimAssistConfigDataAsset");

	return Clss;
}


// ValAimAssistConfigDataAsset Valhalla.Default__ValAimAssistConfigDataAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAimAssistConfigDataAsset* UValAimAssistConfigDataAsset::GetDefaultObj()
{
	static class UValAimAssistConfigDataAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAimAssistConfigDataAsset*>(UValAimAssistConfigDataAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAimAssistTargetComponent
// (None)

class UClass* UValAimAssistTargetComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAimAssistTargetComponent");

	return Clss;
}


// ValAimAssistTargetComponent Valhalla.Default__ValAimAssistTargetComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAimAssistTargetComponent* UValAimAssistTargetComponent::GetDefaultObj()
{
	static class UValAimAssistTargetComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAimAssistTargetComponent*>(UValAimAssistTargetComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValVisibleToAIComponent
// (None)

class UClass* UValVisibleToAIComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVisibleToAIComponent");

	return Clss;
}


// ValVisibleToAIComponent Valhalla.Default__ValVisibleToAIComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVisibleToAIComponent* UValVisibleToAIComponent::GetDefaultObj()
{
	static class UValVisibleToAIComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVisibleToAIComponent*>(UValVisibleToAIComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVisibleToAIComponent.SetVisibilityType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        NewType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValVisibleToAIComponent::SetVisibilityType(class FName NewType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVisibleToAIComponent", "SetVisibilityType");

	Params::UValVisibleToAIComponent_SetVisibilityType_Params Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVisibleToAIComponent.IsVisibleTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SupportedType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValVisibleToAIComponent::IsVisibleTo(class FName SupportedType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVisibleToAIComponent", "IsVisibleTo");

	Params::UValVisibleToAIComponent_IsVisibleTo_Params Parms{};

	Parms.SupportedType = SupportedType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVisibleToAIComponent.GetVisibilityType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValVisibleToAIComponent::GetVisibilityType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVisibleToAIComponent", "GetVisibilityType");

	Params::UValVisibleToAIComponent_GetVisibilityType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAICoverComponent
// (None)

class UClass* UValAICoverComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAICoverComponent");

	return Clss;
}


// ValAICoverComponent Valhalla.Default__ValAICoverComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAICoverComponent* UValAICoverComponent::GetDefaultObj()
{
	static class UValAICoverComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAICoverComponent*>(UValAICoverComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAICoverComponent.OnSightManagerReady
// (Final, Native, Protected)
// Parameters:
// class AValSightManager*            PSightManager                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAICoverComponent::OnSightManagerReady(class AValSightManager* PSightManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAICoverComponent", "OnSightManagerReady");

	Params::UValAICoverComponent_OnSightManagerReady_Params Parms{};

	Parms.PSightManager = PSightManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIVisionObscurerComponent
// (None)

class UClass* UValAIVisionObscurerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIVisionObscurerComponent");

	return Clss;
}


// ValAIVisionObscurerComponent Valhalla.Default__ValAIVisionObscurerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIVisionObscurerComponent* UValAIVisionObscurerComponent::GetDefaultObj()
{
	static class UValAIVisionObscurerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIVisionObscurerComponent*>(UValAIVisionObscurerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIVisionObscurerComponent.OnSightManagerReady
// (Final, Native, Protected)
// Parameters:
// class AValSightManager*            PSightManager                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIVisionObscurerComponent::OnSightManagerReady(class AValSightManager* PSightManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIVisionObscurerComponent", "OnSightManagerReady");

	Params::UValAIVisionObscurerComponent_OnSightManagerReady_Params Parms{};

	Parms.PSightManager = PSightManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSightManager
// (Actor)

class UClass* AValSightManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSightManager");

	return Clss;
}


// ValSightManager Valhalla.Default__ValSightManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSightManager* AValSightManager::GetDefaultObj()
{
	static class AValSightManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSightManager*>(AValSightManager::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAISightComponent
// (None)

class UClass* UValAISightComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAISightComponent");

	return Clss;
}


// ValAISightComponent Valhalla.Default__ValAISightComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAISightComponent* UValAISightComponent::GetDefaultObj()
{
	static class UValAISightComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAISightComponent*>(UValAISightComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAISightComponent.UpdateSightRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewSightRadius                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAISightComponent::UpdateSightRadius(float NewSightRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "UpdateSightRadius");

	Params::UValAISightComponent_UpdateSightRadius_Params Parms{};

	Parms.NewSightRadius = NewSightRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.UpdatePeripheralVisionAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewPeripheralVisionAngleDegrees                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAISightComponent::UpdatePeripheralVisionAngle(float NewPeripheralVisionAngleDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "UpdatePeripheralVisionAngle");

	Params::UValAISightComponent_UpdatePeripheralVisionAngle_Params Parms{};

	Parms.NewPeripheralVisionAngleDegrees = NewPeripheralVisionAngleDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.UpdateLoseSightRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewLoseSightRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAISightComponent::UpdateLoseSightRadius(float NewLoseSightRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "UpdateLoseSightRadius");

	Params::UValAISightComponent_UpdateLoseSightRadius_Params Parms{};

	Parms.NewLoseSightRadius = NewLoseSightRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.SightCheckHandler
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TWeakObjectPtr<class UValAIVisionObscurerComponent>>VisionObscurers                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UValAISightComponent::SightCheckHandler(class AActor* Target, TArray<TWeakObjectPtr<class UValAIVisionObscurerComponent>>& VisionObscurers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "SightCheckHandler");

	Params::UValAISightComponent_SightCheckHandler_Params Parms{};

	Parms.Target = Target;
	Parms.VisionObscurers = VisionObscurers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.ShouldSee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAISightComponent::ShouldSee()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "ShouldSee");

	Params::UValAISightComponent_ShouldSee_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.SetVisionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        NewType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::SetVisionType(class FName NewType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "SetVisionType");

	Params::UValAISightComponent_SetVisionType_Params Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.SetCustomViewLocationOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::SetCustomViewLocationOffset(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "SetCustomViewLocationOffset");

	Params::UValAISightComponent_SetCustomViewLocationOffset_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.SetCanSee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bInCanSee                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::SetCanSee(bool bInCanSee)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "SetCanSee");

	Params::UValAISightComponent_SetCanSee_Params Parms{};

	Parms.bInCanSee = bInCanSee;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.RemoveBlindnessStack
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAISightComponent::RemoveBlindnessStack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "RemoveBlindnessStack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.OnViewedActorTagChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::OnViewedActorTagChanged(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "OnViewedActorTagChanged");

	Params::UValAISightComponent_OnViewedActorTagChanged_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.OnViewedActorDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::OnViewedActorDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "OnViewedActorDied");

	Params::UValAISightComponent_OnViewedActorDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.IsBlinded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValAISightComponent::IsBlinded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "IsBlinded");

	Params::UValAISightComponent_IsBlinded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetVisionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValAISightComponent::GetVisionType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetVisionType");

	Params::UValAISightComponent_GetVisionType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetPeripheralVisionAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetPeripheralVisionAngle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetPeripheralVisionAngle");

	Params::UValAISightComponent_GetPeripheralVisionAngle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetNearClippingRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetNearClippingRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetNearClippingRadius");

	Params::UValAISightComponent_GetNearClippingRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetMinRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetMinRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetMinRange");

	Params::UValAISightComponent_GetMinRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetMaxRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetMaxRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetMaxRange");

	Params::UValAISightComponent_GetMaxRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetLoseSightRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetLoseSightRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetLoseSightRadius");

	Params::UValAISightComponent_GetLoseSightRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.GetDefaultSightRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValAISightComponent::GetDefaultSightRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "GetDefaultSightRadius");

	Params::UValAISightComponent_GetDefaultSightRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAISightComponent.DebugDump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAISightComponent::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.ClearGameplayTagEvents
// (Final, Native, Protected)
// Parameters:
// class AActor*                      LostActor                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::ClearGameplayTagEvents(class AActor* LostActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "ClearGameplayTagEvents");

	Params::UValAISightComponent_ClearGameplayTagEvents_Params Parms{};

	Parms.LostActor = LostActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.BindGameplayTagEvents
// (Final, Native, Protected)
// Parameters:
// class AActor*                      ViewedActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAISightComponent::BindGameplayTagEvents(class AActor* ViewedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "BindGameplayTagEvents");

	Params::UValAISightComponent_BindGameplayTagEvents_Params Parms{};

	Parms.ViewedActor = ViewedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAISightComponent.AddBlindnessStack
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAISightComponent::AddBlindnessStack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAISightComponent", "AddBlindnessStack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSquad
// (None)

class UClass* UValSquad::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSquad");

	return Clss;
}


// ValSquad Valhalla.Default__ValSquad
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSquad* UValSquad::GetDefaultObj()
{
	static class UValSquad* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSquad*>(UValSquad::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSquad.UpdateForMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               InMember                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSquad::UpdateForMember(class AValCharacter* InMember)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSquad", "UpdateForMember");

	Params::UValSquad_UpdateForMember_Params Parms{};

	Parms.InMember = InMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSquad.ToggleRecord
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSquad::ToggleRecord(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSquad", "ToggleRecord");

	Params::UValSquad_ToggleRecord_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSquad.GetLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValSquad::GetLeader()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSquad", "GetLeader");

	Params::UValSquad_GetLeader_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSquad.DumpLocationRecord
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct CoreUObject_Vector>  OutLocationCache                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValSquad::DumpLocationRecord(TArray<struct CoreUObject_Vector>* OutLocationCache)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSquad", "DumpLocationRecord");

	Params::UValSquad_DumpLocationRecord_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLocationCache != nullptr)
		*OutLocationCache = std::move(Parms.OutLocationCache);

}


// Function Valhalla.ValSquad.ChooseNextWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AValCharacter*               InMember                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMeanderToCenter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutWaypoint                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValSquad::ChooseNextWaypoint(class AValCharacter* InMember, bool bMeanderToCenter, struct CoreUObject_Vector* OutWaypoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSquad", "ChooseNextWaypoint");

	Params::UValSquad_ChooseNextWaypoint_Params Parms{};

	Parms.InMember = InMember;
	Parms.bMeanderToCenter = bMeanderToCenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutWaypoint != nullptr)
		*OutWaypoint = std::move(Parms.OutWaypoint);

	return Parms.ReturnValue;

}


// Class Valhalla.ValBotWaveConfig
// (None)

class UClass* UValBotWaveConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotWaveConfig");

	return Clss;
}


// ValBotWaveConfig Valhalla.Default__ValBotWaveConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotWaveConfig* UValBotWaveConfig::GetDefaultObj()
{
	static class UValBotWaveConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotWaveConfig*>(UValBotWaveConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkRoomObject
// (None)

class UClass* IValAkRoomObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoomObject");

	return Clss;
}


// ValAkRoomObject Valhalla.Default__ValAkRoomObject
// (Public, ClassDefaultObject, ArchetypeObject)

class IValAkRoomObject* IValAkRoomObject::GetDefaultObj()
{
	static class IValAkRoomObject* Default = nullptr;

	if (!Default)
		Default = static_cast<IValAkRoomObject*>(IValAkRoomObject::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkRoomObject.SetAssociatedAkRoom
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AValAkRoom*                  Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAkRoomObject::SetAssociatedAkRoom(class AValAkRoom* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomObject", "SetAssociatedAkRoom");

	Params::IValAkRoomObject_SetAssociatedAkRoom_Params Parms{};

	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoomObject.AkGetLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector IValAkRoomObject::AkGetLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomObject", "AkGetLocation");

	Params::IValAkRoomObject_AkGetLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAkRoomObject.AkEnable
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void IValAkRoomObject::AkEnable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomObject", "AkEnable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoomObject.AkDisable
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void IValAkRoomObject::AkDisable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomObject", "AkDisable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAnimNotifyInitRagdoll
// (None)

class UClass* UValAnimNotifyInitRagdoll::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAnimNotifyInitRagdoll");

	return Clss;
}


// ValAnimNotifyInitRagdoll Valhalla.Default__ValAnimNotifyInitRagdoll
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAnimNotifyInitRagdoll* UValAnimNotifyInitRagdoll::GetDefaultObj()
{
	static class UValAnimNotifyInitRagdoll* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAnimNotifyInitRagdoll*>(UValAnimNotifyInitRagdoll::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValArtifactDeposit
// (Actor)

class UClass* AValArtifactDeposit::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValArtifactDeposit");

	return Clss;
}


// ValArtifactDeposit Valhalla.Default__ValArtifactDeposit
// (Public, ClassDefaultObject, ArchetypeObject)

class AValArtifactDeposit* AValArtifactDeposit::GetDefaultObj()
{
	static class AValArtifactDeposit* Default = nullptr;

	if (!Default)
		Default = static_cast<AValArtifactDeposit*>(AValArtifactDeposit::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValArtifactDeposit.OnRep_DepositedItems
// (Final, Native, Protected)
// Parameters:

void AValArtifactDeposit::OnRep_DepositedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "OnRep_DepositedItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValArtifactDeposit.OnDepositComplete
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct Valhalla_PendingItem>ItemsDeposited                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValArtifactDeposit::OnDepositComplete(TArray<struct Valhalla_PendingItem>& ItemsDeposited)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "OnDepositComplete");

	Params::AValArtifactDeposit_OnDepositComplete_Params Parms{};

	Parms.ItemsDeposited = ItemsDeposited;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValArtifactDeposit.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValArtifactDeposit::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "Interact");

	Params::AValArtifactDeposit_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValArtifactDeposit.GetInteractType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EInteractType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractType AValArtifactDeposit::GetInteractType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "GetInteractType");

	Params::AValArtifactDeposit_GetInteractType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValArtifactDeposit.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValArtifactDeposit::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "GetInteractText");

	Params::AValArtifactDeposit_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValArtifactDeposit.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValArtifactDeposit::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "GetInteractComponent");

	Params::AValArtifactDeposit_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValArtifactDeposit.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValArtifactDeposit::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValArtifactDeposit", "CanInteract");

	Params::AValArtifactDeposit_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValClassComponentBase
// (None)

class UClass* UValClassComponentBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValClassComponentBase");

	return Clss;
}


// ValClassComponentBase Valhalla.Default__ValClassComponentBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UValClassComponentBase* UValClassComponentBase::GetDefaultObj()
{
	static class UValClassComponentBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UValClassComponentBase*>(UValClassComponentBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValClassComponentBase.HasModsForTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    TagToCheck                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValClassComponentBase::HasModsForTag(const struct GameplayTags_GameplayTag& TagToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "HasModsForTag");

	Params::UValClassComponentBase_HasModsForTag_Params Parms{};

	Parms.TagToCheck = TagToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValClassComponentBase.GetValCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValClassComponentBase::GetValCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "GetValCharacter");

	Params::UValClassComponentBase_GetValCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValClassComponentBase.GetPassivePropertyModValues
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    PassiveIdTag                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    PropertyTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      OutValues                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValClassComponentBase::GetPassivePropertyModValues(const struct GameplayTags_GameplayTag& PassiveIdTag, const struct GameplayTags_GameplayTag& PropertyTag, TArray<float>* OutValues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "GetPassivePropertyModValues");

	Params::UValClassComponentBase_GetPassivePropertyModValues_Params Parms{};

	Parms.PassiveIdTag = PassiveIdTag;
	Parms.PropertyTag = PropertyTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutValues != nullptr)
		*OutValues = std::move(Parms.OutValues);

}


// Function Valhalla.ValClassComponentBase.CalcPropertyModifiers
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValClassComponentBase::CalcPropertyModifiers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "CalcPropertyModifiers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValClassComponentBase.ApplyDamageResistanceModifier
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutShieldModifier                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValClassComponentBase::ApplyDamageResistanceModifier(float& OutPercentModifier, float& OutFlatModifier, float& OutShieldModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "ApplyDamageResistanceModifier");

	Params::UValClassComponentBase_ApplyDamageResistanceModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.OutShieldModifier = OutShieldModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValClassComponentBase.ApplyDamageOutputModifier
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectContextHandleDamageContext                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValClassComponentBase::ApplyDamageOutputModifier(float& OutPercentModifier, float& OutFlatModifier, float Damage, struct GameplayAbilities_GameplayEffectContextHandle& DamageContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClassComponentBase", "ApplyDamageOutputModifier");

	Params::UValClassComponentBase_ApplyDamageOutputModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.Damage = Damage;
	Parms.DamageContext = DamageContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAssaultClassComponent
// (None)

class UClass* UValAssaultClassComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAssaultClassComponent");

	return Clss;
}


// ValAssaultClassComponent Valhalla.Default__ValAssaultClassComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAssaultClassComponent* UValAssaultClassComponent::GetDefaultObj()
{
	static class UValAssaultClassComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAssaultClassComponent*>(UValAssaultClassComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAssetManager
// (None)

class UClass* UValAssetManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAssetManager");

	return Clss;
}


// ValAssetManager Valhalla.Default__ValAssetManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAssetManager* UValAssetManager::GetDefaultObj()
{
	static class UValAssetManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAssetManager*>(UValAssetManager::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEquipmentAsset
// (None)

class UClass* UValEquipmentAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEquipmentAsset");

	return Clss;
}


// ValEquipmentAsset Valhalla.Default__ValEquipmentAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEquipmentAsset* UValEquipmentAsset::GetDefaultObj()
{
	static class UValEquipmentAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEquipmentAsset*>(UValEquipmentAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValEquipmentAsset.OnlyBuyInBundles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValEquipmentAsset::OnlyBuyInBundles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEquipmentAsset", "OnlyBuyInBundles");

	Params::UValEquipmentAsset_OnlyBuyInBundles_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValEquipmentAsset.GetBuyPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 InRarity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValEquipmentAsset::GetBuyPrice(enum class ERarity InRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEquipmentAsset", "GetBuyPrice");

	Params::UValEquipmentAsset_GetBuyPrice_Params Parms{};

	Parms.InRarity = InRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValEquipmentAsset.GetAvailableBundles
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_VendorItemBundle>OutAvailableBundles                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class ERarity                 InRarity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValEquipmentAsset::GetAvailableBundles(TArray<struct Valhalla_VendorItemBundle>* OutAvailableBundles, enum class ERarity InRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEquipmentAsset", "GetAvailableBundles");

	Params::UValEquipmentAsset_GetAvailableBundles_Params Parms{};

	Parms.InRarity = InRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutAvailableBundles != nullptr)
		*OutAvailableBundles = std::move(Parms.OutAvailableBundles);

}


// Class Valhalla.ValItemAsset
// (None)

class UClass* UValItemAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValItemAsset");

	return Clss;
}


// ValItemAsset Valhalla.Default__ValItemAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValItemAsset* UValItemAsset::GetDefaultObj()
{
	static class UValItemAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValItemAsset*>(UValItemAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEquipmentModAsset
// (None)

class UClass* UValEquipmentModAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEquipmentModAsset");

	return Clss;
}


// ValEquipmentModAsset Valhalla.Default__ValEquipmentModAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEquipmentModAsset* UValEquipmentModAsset::GetDefaultObj()
{
	static class UValEquipmentModAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEquipmentModAsset*>(UValEquipmentModAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValItemModAsset
// (None)

class UClass* UValItemModAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValItemModAsset");

	return Clss;
}


// ValItemModAsset Valhalla.Default__ValItemModAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValItemModAsset* UValItemModAsset::GetDefaultObj()
{
	static class UValItemModAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValItemModAsset*>(UValItemModAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityPrerequisite
// (None)

class UClass* UValActivityPrerequisite::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityPrerequisite");

	return Clss;
}


// ValActivityPrerequisite Valhalla.Default__ValActivityPrerequisite
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityPrerequisite* UValActivityPrerequisite::GetDefaultObj()
{
	static class UValActivityPrerequisite* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityPrerequisite*>(UValActivityPrerequisite::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValActivityRequirement
// (None)

class UClass* UValActivityRequirement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityRequirement");

	return Clss;
}


// ValActivityRequirement Valhalla.Default__ValActivityRequirement
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityRequirement* UValActivityRequirement::GetDefaultObj()
{
	static class UValActivityRequirement* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityRequirement*>(UValActivityRequirement::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAttributeActorBase
// (Actor)

class UClass* AValAttributeActorBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAttributeActorBase");

	return Clss;
}


// ValAttributeActorBase Valhalla.Default__ValAttributeActorBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAttributeActorBase* AValAttributeActorBase::GetDefaultObj()
{
	static class AValAttributeActorBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAttributeActorBase*>(AValAttributeActorBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAttributeActorBase.UpdateTeamColor
// (Native, Event, Protected, BlueprintEvent)
// Parameters:

void AValAttributeActorBase::UpdateTeamColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "UpdateTeamColor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAttributeActorBase::SetHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "SetHealth");

	Params::AValAttributeActorBase_SetHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.OnRep_TeamId
// (Final, Native, Private)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAttributeActorBase::OnRep_TeamId(int32 OldTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "OnRep_TeamId");

	Params::AValAttributeActorBase_OnRep_TeamId_Params Parms{};

	Parms.OldTeamId = OldTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.OnDamaged
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void AValAttributeActorBase::OnDamaged(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "OnDamaged");

	Params::AValAttributeActorBase_OnDamaged_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAttributeActorBase::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "IsAlive");

	Params::AValAttributeActorBase_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GiveDefaultAbilities
// (Native, Public, BlueprintCallable)
// Parameters:

void AValAttributeActorBase::GiveDefaultAbilities()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GiveDefaultAbilities");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.GetTemporaryShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetTemporaryShields()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetTemporaryShields");

	Params::AValAttributeActorBase_GetTemporaryShields_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetTemporaryHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetTemporaryHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetTemporaryHealth");

	Params::AValAttributeActorBase_GetTemporaryHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetShieldsMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetShieldsMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetShieldsMax");

	Params::AValAttributeActorBase_GetShieldsMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetShields()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetShields");

	Params::AValAttributeActorBase_GetShields_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetShieldPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValAttributeActorBase::GetShieldPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetShieldPercent");

	Params::AValAttributeActorBase_GetShieldPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValAttributeActorBase::GetHealthPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetHealthPercent");

	Params::AValAttributeActorBase_GetHealthPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetHealthMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetHealthMax");

	Params::AValAttributeActorBase_GetHealthMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValAttributeActorBase::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetHealth");

	Params::AValAttributeActorBase_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.GetAttributes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAttributeSet*            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAttributeSet* AValAttributeActorBase::GetAttributes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "GetAttributes");

	Params::AValAttributeActorBase_GetAttributes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.EventTornOff
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAttributeActorBase::EventTornOff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "EventTornOff");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAttributeActorBase.EventDied
// (Event, Public, BlueprintEvent)
// Parameters:

void AValAttributeActorBase::EventDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "EventDied");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValAttributeActorBase.Die
// (Native, Public, BlueprintCallable)
// Parameters:

void AValAttributeActorBase::Die()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "Die");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActorBase.CanBeHealed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAttributeActorBase::CanBeHealed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "CanBeHealed");

	Params::AValAttributeActorBase_CanBeHealed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.CanBeDamaged
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAttributeActorBase::CanBeDamaged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "CanBeDamaged");

	Params::AValAttributeActorBase_CanBeDamaged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActorBase.AlwaysDamageable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValAttributeActorBase::AlwaysDamageable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActorBase", "AlwaysDamageable");

	Params::AValAttributeActorBase_AlwaysDamageable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAttributeActor
// (Actor)

class UClass* AValAttributeActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAttributeActor");

	return Clss;
}


// ValAttributeActor Valhalla.Default__ValAttributeActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAttributeActor* AValAttributeActor::GetDefaultObj()
{
	static class AValAttributeActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAttributeActor*>(AValAttributeActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAttributeActor.UpdateCollisionMask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAttributeActor::UpdateCollisionMask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActor", "UpdateCollisionMask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeActor.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValAttributeActor::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActor", "GetMesh");

	Params::AValAttributeActor_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAttributeActor.GetCapsuleComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UCapsuleComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCapsuleComponent* AValAttributeActor::GetCapsuleComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeActor", "GetCapsuleComponent");

	Params::AValAttributeActor_GetCapsuleComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAttributeActor_StaticMesh
// (Actor)

class UClass* AValAttributeActor_StaticMesh::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAttributeActor_StaticMesh");

	return Clss;
}


// ValAttributeActor_StaticMesh Valhalla.Default__ValAttributeActor_StaticMesh
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAttributeActor_StaticMesh* AValAttributeActor_StaticMesh::GetDefaultObj()
{
	static class AValAttributeActor_StaticMesh* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAttributeActor_StaticMesh*>(AValAttributeActor_StaticMesh::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAttributeSet
// (None)

class UClass* UValAttributeSet::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAttributeSet");

	return Clss;
}


// ValAttributeSet Valhalla.Default__ValAttributeSet
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAttributeSet* UValAttributeSet::GetDefaultObj()
{
	static class UValAttributeSet* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAttributeSet*>(UValAttributeSet::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAttributeSet.OnRep_UniversalAbilityCooldownModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldUniversalAbilityCooldownModifier                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_UniversalAbilityCooldownModifier(struct GameplayAbilities_GameplayAttributeData& OldUniversalAbilityCooldownModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_UniversalAbilityCooldownModifier");

	Params::UValAttributeSet_OnRep_UniversalAbilityCooldownModifier_Params Parms{};

	Parms.OldUniversalAbilityCooldownModifier = OldUniversalAbilityCooldownModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TrapDamageMitigationMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTrapDamageMitigationMultiplier                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TrapDamageMitigationMultiplier(struct GameplayAbilities_GameplayAttributeData& OldTrapDamageMitigationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TrapDamageMitigationMultiplier");

	Params::UValAttributeSet_OnRep_TrapDamageMitigationMultiplier_Params Parms{};

	Parms.OldTrapDamageMitigationMultiplier = OldTrapDamageMitigationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TimeUntilPassiveReload
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTimeUntilPassiveReload                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TimeUntilPassiveReload(struct GameplayAbilities_GameplayAttributeData& OldTimeUntilPassiveReload)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TimeUntilPassiveReload");

	Params::UValAttributeSet_OnRep_TimeUntilPassiveReload_Params Parms{};

	Parms.OldTimeUntilPassiveReload = OldTimeUntilPassiveReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TimeBetweenBursts
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTimeBetweenBursts                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TimeBetweenBursts(struct GameplayAbilities_GameplayAttributeData& OldTimeBetweenBursts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TimeBetweenBursts");

	Params::UValAttributeSet_OnRep_TimeBetweenBursts_Params Parms{};

	Parms.OldTimeBetweenBursts = OldTimeBetweenBursts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ThrownSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldThrowSpeed                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ThrownSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldThrowSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ThrownSpeedMultiplier");

	Params::UValAttributeSet_OnRep_ThrownSpeedMultiplier_Params Parms{};

	Parms.OldThrowSpeed = OldThrowSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TemporaryShield
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTemporaryShield                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TemporaryShield(struct GameplayAbilities_GameplayAttributeData& OldTemporaryShield)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TemporaryShield");

	Params::UValAttributeSet_OnRep_TemporaryShield_Params Parms{};

	Parms.OldTemporaryShield = OldTemporaryShield;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TemporaryHealth
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTemporaryHealth                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TemporaryHealth(struct GameplayAbilities_GameplayAttributeData& OldTemporaryHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TemporaryHealth");

	Params::UValAttributeSet_OnRep_TemporaryHealth_Params Parms{};

	Parms.OldTemporaryHealth = OldTemporaryHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_TauntAggroRange
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldTauntAggroRange                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_TauntAggroRange(struct GameplayAbilities_GameplayAttributeData& OldTauntAggroRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_TauntAggroRange");

	Params::UValAttributeSet_OnRep_TauntAggroRange_Params Parms{};

	Parms.OldTauntAggroRange = OldTauntAggroRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StimSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStimSpeedMultiplier                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StimSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldStimSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StimSpeedMultiplier");

	Params::UValAttributeSet_OnRep_StimSpeedMultiplier_Params Parms{};

	Parms.OldStimSpeedMultiplier = OldStimSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StealthEnergyConsumptionRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStealthEnergyConsumptionRate                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StealthEnergyConsumptionRate(struct GameplayAbilities_GameplayAttributeData& OldStealthEnergyConsumptionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StealthEnergyConsumptionRate");

	Params::UValAttributeSet_OnRep_StealthEnergyConsumptionRate_Params Parms{};

	Parms.OldStealthEnergyConsumptionRate = OldStealthEnergyConsumptionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StealthDurationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStealthDurationModifier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StealthDurationModifier(struct GameplayAbilities_GameplayAttributeData& OldStealthDurationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StealthDurationModifier");

	Params::UValAttributeSet_OnRep_StealthDurationModifier_Params Parms{};

	Parms.OldStealthDurationModifier = OldStealthDurationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StartingReserveAmmo
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStartingReserveAmmo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StartingReserveAmmo(struct GameplayAbilities_GameplayAttributeData& OldStartingReserveAmmo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StartingReserveAmmo");

	Params::UValAttributeSet_OnRep_StartingReserveAmmo_Params Parms{};

	Parms.OldStartingReserveAmmo = OldStartingReserveAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StartingClipAmmo
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStartingClipAmmo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StartingClipAmmo(struct GameplayAbilities_GameplayAttributeData& OldStartingClipAmmo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StartingClipAmmo");

	Params::UValAttributeSet_OnRep_StartingClipAmmo_Params Parms{};

	Parms.OldStartingClipAmmo = OldStartingClipAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StaggerResistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStaggerResistance                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StaggerResistance(struct GameplayAbilities_GameplayAttributeData& OldStaggerResistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StaggerResistance");

	Params::UValAttributeSet_OnRep_StaggerResistance_Params Parms{};

	Parms.OldStaggerResistance = OldStaggerResistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_StaggerImpact
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldStaggerImpact                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_StaggerImpact(struct GameplayAbilities_GameplayAttributeData& OldStaggerImpact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_StaggerImpact");

	Params::UValAttributeSet_OnRep_StaggerImpact_Params Parms{};

	Parms.OldStaggerImpact = OldStaggerImpact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SprintSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSprintSpeedMultiplier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SprintSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldSprintSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SprintSpeedMultiplier");

	Params::UValAttributeSet_OnRep_SprintSpeedMultiplier_Params Parms{};

	Parms.OldSprintSpeedMultiplier = OldSprintSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SpecialtyAmmoPickupMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSpecialtyAmmoPickupMultiplier                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SpecialtyAmmoPickupMultiplier(struct GameplayAbilities_GameplayAttributeData& OldSpecialtyAmmoPickupMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SpecialtyAmmoPickupMultiplier");

	Params::UValAttributeSet_OnRep_SpecialtyAmmoPickupMultiplier_Params Parms{};

	Parms.OldSpecialtyAmmoPickupMultiplier = OldSpecialtyAmmoPickupMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SoundDetectableRange
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSoundDetectableRange                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SoundDetectableRange(struct GameplayAbilities_GameplayAttributeData& OldSoundDetectableRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SoundDetectableRange");

	Params::UValAttributeSet_OnRep_SoundDetectableRange_Params Parms{};

	Parms.OldSoundDetectableRange = OldSoundDetectableRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SlideSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSlideSpeedMultiplier                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SlideSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldSlideSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SlideSpeedMultiplier");

	Params::UValAttributeSet_OnRep_SlideSpeedMultiplier_Params Parms{};

	Parms.OldSlideSpeedMultiplier = OldSlideSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SkiInitialImpulse
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSkiInitialImpulse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SkiInitialImpulse(struct GameplayAbilities_GameplayAttributeData& OldSkiInitialImpulse)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SkiInitialImpulse");

	Params::UValAttributeSet_OnRep_SkiInitialImpulse_Params Parms{};

	Parms.OldSkiInitialImpulse = OldSkiInitialImpulse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShotsPerFire
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShotsPerFire                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShotsPerFire(struct GameplayAbilities_GameplayAttributeData& OldShotsPerFire)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShotsPerFire");

	Params::UValAttributeSet_OnRep_ShotsPerFire_Params Parms{};

	Parms.OldShotsPerFire = OldShotsPerFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldRegenAmount
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldRegenAmount                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldRegenAmount(struct GameplayAbilities_GameplayAttributeData& OldShieldRegenAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldRegenAmount");

	Params::UValAttributeSet_OnRep_ShieldRegenAmount_Params Parms{};

	Parms.OldShieldRegenAmount = OldShieldRegenAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldPenetrationMitigationMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldPenetrationMitigationMultiplier                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldPenetrationMitigationMultiplier(struct GameplayAbilities_GameplayAttributeData& OldShieldPenetrationMitigationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldPenetrationMitigationMultiplier");

	Params::UValAttributeSet_OnRep_ShieldPenetrationMitigationMultiplier_Params Parms{};

	Parms.OldShieldPenetrationMitigationMultiplier = OldShieldPenetrationMitigationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldPenetration
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldPenetrationMultiplier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldPenetration(struct GameplayAbilities_GameplayAttributeData& OldShieldPenetrationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldPenetration");

	Params::UValAttributeSet_OnRep_ShieldPenetration_Params Parms{};

	Parms.OldShieldPenetrationMultiplier = OldShieldPenetrationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldPackUseSpeedModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldPackUseSpeedModifier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldPackUseSpeedModifier(struct GameplayAbilities_GameplayAttributeData& OldShieldPackUseSpeedModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldPackUseSpeedModifier");

	Params::UValAttributeSet_OnRep_ShieldPackUseSpeedModifier_Params Parms{};

	Parms.OldShieldPackUseSpeedModifier = OldShieldPackUseSpeedModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldPackModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldPackModifier                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldPackModifier(struct GameplayAbilities_GameplayAttributeData& OldShieldPackModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldPackModifier");

	Params::UValAttributeSet_OnRep_ShieldPackModifier_Params Parms{};

	Parms.OldShieldPackModifier = OldShieldPackModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldPackMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldPackMax                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldPackMax(struct GameplayAbilities_GameplayAttributeData& OldShieldPackMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldPackMax");

	Params::UValAttributeSet_OnRep_ShieldPackMax_Params Parms{};

	Parms.OldShieldPackMax = OldShieldPackMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldMax                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldMax(struct GameplayAbilities_GameplayAttributeData& OldShieldMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldMax");

	Params::UValAttributeSet_OnRep_ShieldMax_Params Parms{};

	Parms.OldShieldMax = OldShieldMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldDamageOutputModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldDamageOutputModifier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldDamageOutputModifier(struct GameplayAbilities_GameplayAttributeData& OldShieldDamageOutputModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldDamageOutputModifier");

	Params::UValAttributeSet_OnRep_ShieldDamageOutputModifier_Params Parms{};

	Parms.OldShieldDamageOutputModifier = OldShieldDamageOutputModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ShieldBroke
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShieldBroke                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ShieldBroke(struct GameplayAbilities_GameplayAttributeData& OldShieldBroke)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ShieldBroke");

	Params::UValAttributeSet_OnRep_ShieldBroke_Params Parms{};

	Parms.OldShieldBroke = OldShieldBroke;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_Shield
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldShield                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_Shield(struct GameplayAbilities_GameplayAttributeData& OldShield)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_Shield");

	Params::UValAttributeSet_OnRep_Shield_Params Parms{};

	Parms.OldShield = OldShield;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_SelfDamageMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldSelfDamageMitigationModifier                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_SelfDamageMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldSelfDamageMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_SelfDamageMitigationModifier");

	Params::UValAttributeSet_OnRep_SelfDamageMitigationModifier_Params Parms{};

	Parms.OldSelfDamageMitigationModifier = OldSelfDamageMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ScrapPickupMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldScrapPickupMultiplier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ScrapPickupMultiplier(struct GameplayAbilities_GameplayAttributeData& OldScrapPickupMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ScrapPickupMultiplier");

	Params::UValAttributeSet_OnRep_ScrapPickupMultiplier_Params Parms{};

	Parms.OldScrapPickupMultiplier = OldScrapPickupMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_RespawnPointInteractTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldRespawnPointInteractTimeMultiplier                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_RespawnPointInteractTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldRespawnPointInteractTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_RespawnPointInteractTimeMultiplier");

	Params::UValAttributeSet_OnRep_RespawnPointInteractTimeMultiplier_Params Parms{};

	Parms.OldRespawnPointInteractTimeMultiplier = OldRespawnPointInteractTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ReserveAmmoMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldReserveAmmoMax                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ReserveAmmoMax(struct GameplayAbilities_GameplayAttributeData& OldReserveAmmoMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ReserveAmmoMax");

	Params::UValAttributeSet_OnRep_ReserveAmmoMax_Params Parms{};

	Parms.OldReserveAmmoMax = OldReserveAmmoMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ReloadTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldReloadTimeMultiplier                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ReloadTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldReloadTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ReloadTimeMultiplier");

	Params::UValAttributeSet_OnRep_ReloadTimeMultiplier_Params Parms{};

	Parms.OldReloadTimeMultiplier = OldReloadTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ReloadSpeed
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldReloadSpeed                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ReloadSpeed(struct GameplayAbilities_GameplayAttributeData& OldReloadSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ReloadSpeed");

	Params::UValAttributeSet_OnRep_ReloadSpeed_Params Parms{};

	Parms.OldReloadSpeed = OldReloadSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ReloadMinimum
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldReloadMinimum                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ReloadMinimum(struct GameplayAbilities_GameplayAttributeData& OldReloadMinimum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ReloadMinimum");

	Params::UValAttributeSet_OnRep_ReloadMinimum_Params Parms{};

	Parms.OldReloadMinimum = OldReloadMinimum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_RangedDamageMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldRangedDamageMitigationModifier                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_RangedDamageMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldRangedDamageMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_RangedDamageMitigationModifier");

	Params::UValAttributeSet_OnRep_RangedDamageMitigationModifier_Params Parms{};

	Parms.OldRangedDamageMitigationModifier = OldRangedDamageMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_QuickMeleeDamage
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldQuickMeleeDamage                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_QuickMeleeDamage(struct GameplayAbilities_GameplayAttributeData& OldQuickMeleeDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_QuickMeleeDamage");

	Params::UValAttributeSet_OnRep_QuickMeleeDamage_Params Parms{};

	Parms.OldQuickMeleeDamage = OldQuickMeleeDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ProjectileSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldProjectileSpeedMultiplier                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ProjectileSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldProjectileSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ProjectileSpeedMultiplier");

	Params::UValAttributeSet_OnRep_ProjectileSpeedMultiplier_Params Parms{};

	Parms.OldProjectileSpeedMultiplier = OldProjectileSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PrimaryFireInputBufferTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPrimaryFireInputBufferTime                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PrimaryFireInputBufferTime(struct GameplayAbilities_GameplayAttributeData& OldPrimaryFireInputBufferTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PrimaryFireInputBufferTime");

	Params::UValAttributeSet_OnRep_PrimaryFireInputBufferTime_Params Parms{};

	Parms.OldPrimaryFireInputBufferTime = OldPrimaryFireInputBufferTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PrimaryAmmoPickupMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPrimaryAmmoPickupMultiplier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PrimaryAmmoPickupMultiplier(struct GameplayAbilities_GameplayAttributeData& OldPrimaryAmmoPickupMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PrimaryAmmoPickupMultiplier");

	Params::UValAttributeSet_OnRep_PrimaryAmmoPickupMultiplier_Params Parms{};

	Parms.OldPrimaryAmmoPickupMultiplier = OldPrimaryAmmoPickupMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PrefireTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPrefireTime                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PrefireTime(struct GameplayAbilities_GameplayAttributeData& OldPrefireTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PrefireTime");

	Params::UValAttributeSet_OnRep_PrefireTime_Params Parms{};

	Parms.OldPrefireTime = OldPrefireTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PortalInteractTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldInteractTimeMultiplier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PortalInteractTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldInteractTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PortalInteractTimeMultiplier");

	Params::UValAttributeSet_OnRep_PortalInteractTimeMultiplier_Params Parms{};

	Parms.OldInteractTimeMultiplier = OldInteractTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PickupRangeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPickupRangeMultiplier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PickupRangeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldPickupRangeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PickupRangeMultiplier");

	Params::UValAttributeSet_OnRep_PickupRangeMultiplier_Params Parms{};

	Parms.OldPickupRangeMultiplier = OldPickupRangeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PerceptionSightDistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPerceptionSightDistance                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PerceptionSightDistance(struct GameplayAbilities_GameplayAttributeData& OldPerceptionSightDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PerceptionSightDistance");

	Params::UValAttributeSet_OnRep_PerceptionSightDistance_Params Parms{};

	Parms.OldPerceptionSightDistance = OldPerceptionSightDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PerceptionPeripheralVisionHalfAngle
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPerceptionPeripheralVisionHalfAngle                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PerceptionPeripheralVisionHalfAngle(struct GameplayAbilities_GameplayAttributeData& OldPerceptionPeripheralVisionHalfAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PerceptionPeripheralVisionHalfAngle");

	Params::UValAttributeSet_OnRep_PerceptionPeripheralVisionHalfAngle_Params Parms{};

	Parms.OldPerceptionPeripheralVisionHalfAngle = OldPerceptionPeripheralVisionHalfAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PerceptionLoseSightDistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPerceptionLoseSightDistance                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PerceptionLoseSightDistance(struct GameplayAbilities_GameplayAttributeData& OldPerceptionLoseSightDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PerceptionLoseSightDistance");

	Params::UValAttributeSet_OnRep_PerceptionLoseSightDistance_Params Parms{};

	Parms.OldPerceptionLoseSightDistance = OldPerceptionLoseSightDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PerceptionHearingDistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPerceptionHearingDistance                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PerceptionHearingDistance(struct GameplayAbilities_GameplayAttributeData& OldPerceptionHearingDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PerceptionHearingDistance");

	Params::UValAttributeSet_OnRep_PerceptionHearingDistance_Params Parms{};

	Parms.OldPerceptionHearingDistance = OldPerceptionHearingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_PendingBoostMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldPendingBoostMax                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_PendingBoostMax(struct GameplayAbilities_GameplayAttributeData& OldPendingBoostMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_PendingBoostMax");

	Params::UValAttributeSet_OnRep_PendingBoostMax_Params Parms{};

	Parms.OldPendingBoostMax = OldPendingBoostMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_OxygenMaximum
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldOxygenMaximum                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_OxygenMaximum(struct GameplayAbilities_GameplayAttributeData& OldOxygenMaximum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_OxygenMaximum");

	Params::UValAttributeSet_OnRep_OxygenMaximum_Params Parms{};

	Parms.OldOxygenMaximum = OldOxygenMaximum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_OxygenConsumeRateMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldOxygenConsumeRateMultiplier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_OxygenConsumeRateMultiplier(struct GameplayAbilities_GameplayAttributeData& OldOxygenConsumeRateMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_OxygenConsumeRateMultiplier");

	Params::UValAttributeSet_OnRep_OxygenConsumeRateMultiplier_Params Parms{};

	Parms.OldOxygenConsumeRateMultiplier = OldOxygenConsumeRateMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_OxygenConsumeRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldOxygenConsumeRate                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_OxygenConsumeRate(struct GameplayAbilities_GameplayAttributeData& OldOxygenConsumeRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_OxygenConsumeRate");

	Params::UValAttributeSet_OnRep_OxygenConsumeRate_Params Parms{};

	Parms.OldOxygenConsumeRate = OldOxygenConsumeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_OverallDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldOverallDamageModifier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_OverallDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldOverallDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_OverallDamageModifier");

	Params::UValAttributeSet_OnRep_OverallDamageModifier_Params Parms{};

	Parms.OldOverallDamageModifier = OldOverallDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_NonPlayerDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldNonPlayerDamageModifier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_NonPlayerDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldNonPlayerDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_NonPlayerDamageModifier");

	Params::UValAttributeSet_OnRep_NonPlayerDamageModifier_Params Parms{};

	Parms.OldNonPlayerDamageModifier = OldNonPlayerDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MovingSpread
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMovingSpread                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MovingSpread(struct GameplayAbilities_GameplayAttributeData& OldMovingSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MovingSpread");

	Params::UValAttributeSet_OnRep_MovingSpread_Params Parms{};

	Parms.OldMovingSpread = OldMovingSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MovementSpeed
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMovementSpeed                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MovementSpeed(struct GameplayAbilities_GameplayAttributeData& OldMovementSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MovementSpeed");

	Params::UValAttributeSet_OnRep_MovementSpeed_Params Parms{};

	Parms.OldMovementSpeed = OldMovementSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MeleeDamageMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMeleeDamageMitigationModifier                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MeleeDamageMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldMeleeDamageMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MeleeDamageMitigationModifier");

	Params::UValAttributeSet_OnRep_MeleeDamageMitigationModifier_Params Parms{};

	Parms.OldMeleeDamageMitigationModifier = OldMeleeDamageMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MediumShieldEnergyConsumptionRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMediumShieldEnergyConsumptionRate                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MediumShieldEnergyConsumptionRate(struct GameplayAbilities_GameplayAttributeData& OldMediumShieldEnergyConsumptionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MediumShieldEnergyConsumptionRate");

	Params::UValAttributeSet_OnRep_MediumShieldEnergyConsumptionRate_Params Parms{};

	Parms.OldMediumShieldEnergyConsumptionRate = OldMediumShieldEnergyConsumptionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MaxGroundSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMaxGroundSpeedMultiplier                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MaxGroundSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldMaxGroundSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MaxGroundSpeedMultiplier");

	Params::UValAttributeSet_OnRep_MaxGroundSpeedMultiplier_Params Parms{};

	Parms.OldMaxGroundSpeedMultiplier = OldMaxGroundSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_MarkedDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldMarkedDamageModifier                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_MarkedDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldMarkedDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_MarkedDamageModifier");

	Params::UValAttributeSet_OnRep_MarkedDamageModifier_Params Parms{};

	Parms.OldMarkedDamageModifier = OldMarkedDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_LootUpgradeChance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldLootUpgradeChance                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_LootUpgradeChance(struct GameplayAbilities_GameplayAttributeData& OldLootUpgradeChance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_LootUpgradeChance");

	Params::UValAttributeSet_OnRep_LootUpgradeChance_Params Parms{};

	Parms.OldLootUpgradeChance = OldLootUpgradeChance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_KickbackModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldKickbackModifier                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_KickbackModifier(struct GameplayAbilities_GameplayAttributeData& OldKickbackModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_KickbackModifier");

	Params::UValAttributeSet_OnRep_KickbackModifier_Params Parms{};

	Parms.OldKickbackModifier = OldKickbackModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_JumpHeightMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldJumpHeightMultiplier                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_JumpHeightMultiplier(struct GameplayAbilities_GameplayAttributeData& OldJumpHeightMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_JumpHeightMultiplier");

	Params::UValAttributeSet_OnRep_JumpHeightMultiplier_Params Parms{};

	Parms.OldJumpHeightMultiplier = OldJumpHeightMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_JetpackVerticalBoost
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldJetpackVerticalBoost                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_JetpackVerticalBoost(struct GameplayAbilities_GameplayAttributeData& OldJetpackVerticalBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_JetpackVerticalBoost");

	Params::UValAttributeSet_OnRep_JetpackVerticalBoost_Params Parms{};

	Parms.OldJetpackVerticalBoost = OldJetpackVerticalBoost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_JetpackOverburnDuration
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldJetpackOverburnDuration                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_JetpackOverburnDuration(struct GameplayAbilities_GameplayAttributeData& OldJetpackOverburnDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_JetpackOverburnDuration");

	Params::UValAttributeSet_OnRep_JetpackOverburnDuration_Params Parms{};

	Parms.OldJetpackOverburnDuration = OldJetpackOverburnDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_JetpackEnergyConsumptionRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldJetpackEnergyConsumptionRate                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_JetpackEnergyConsumptionRate(struct GameplayAbilities_GameplayAttributeData& OldJetpackEnergyConsumptionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_JetpackEnergyConsumptionRate");

	Params::UValAttributeSet_OnRep_JetpackEnergyConsumptionRate_Params Parms{};

	Parms.OldJetpackEnergyConsumptionRate = OldJetpackEnergyConsumptionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ItemRarityMitigationMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldItemRarityMitigationMultiplier                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ItemRarityMitigationMultiplier(struct GameplayAbilities_GameplayAttributeData& OldItemRarityMitigationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ItemRarityMitigationMultiplier");

	Params::UValAttributeSet_OnRep_ItemRarityMitigationMultiplier_Params Parms{};

	Parms.OldItemRarityMitigationMultiplier = OldItemRarityMitigationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ItemRarityDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldItemRarityDamageMultiplier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ItemRarityDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldItemRarityDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ItemRarityDamageMultiplier");

	Params::UValAttributeSet_OnRep_ItemRarityDamageMultiplier_Params Parms{};

	Parms.OldItemRarityDamageMultiplier = OldItemRarityDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ItemEquipTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldItemEquipTimeMultiplier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ItemEquipTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldItemEquipTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ItemEquipTimeMultiplier");

	Params::UValAttributeSet_OnRep_ItemEquipTimeMultiplier_Params Parms{};

	Parms.OldItemEquipTimeMultiplier = OldItemEquipTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_InteractTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldInteractTimeMultiplier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_InteractTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldInteractTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_InteractTimeMultiplier");

	Params::UValAttributeSet_OnRep_InteractTimeMultiplier_Params Parms{};

	Parms.OldInteractTimeMultiplier = OldInteractTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_IncomingKnockbackModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldIncomingKnockbackModifier                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_IncomingKnockbackModifier(struct GameplayAbilities_GameplayAttributeData& OldIncomingKnockbackModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_IncomingKnockbackModifier");

	Params::UValAttributeSet_OnRep_IncomingKnockbackModifier_Params Parms{};

	Parms.OldIncomingKnockbackModifier = OldIncomingKnockbackModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HolsterSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHolsterSpeedMultiplier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HolsterSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldHolsterSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HolsterSpeedMultiplier");

	Params::UValAttributeSet_OnRep_HolsterSpeedMultiplier_Params Parms{};

	Parms.OldHolsterSpeedMultiplier = OldHolsterSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HitDebuffGroundSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHitDebuffGroundSpeedMultiplier                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HitDebuffGroundSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldHitDebuffGroundSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HitDebuffGroundSpeedMultiplier");

	Params::UValAttributeSet_OnRep_HitDebuffGroundSpeedMultiplier_Params Parms{};

	Parms.OldHitDebuffGroundSpeedMultiplier = OldHitDebuffGroundSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HeavyShieldEnergyConsumptionRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHeavyShieldEnergyConsumptionRate                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HeavyShieldEnergyConsumptionRate(struct GameplayAbilities_GameplayAttributeData& OldHeavyShieldEnergyConsumptionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HeavyShieldEnergyConsumptionRate");

	Params::UValAttributeSet_OnRep_HeavyShieldEnergyConsumptionRate_Params Parms{};

	Parms.OldHeavyShieldEnergyConsumptionRate = OldHeavyShieldEnergyConsumptionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealthRegenAmount
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealthRegenAmount                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealthRegenAmount(struct GameplayAbilities_GameplayAttributeData& OldHealthRegenAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealthRegenAmount");

	Params::UValAttributeSet_OnRep_HealthRegenAmount_Params Parms{};

	Parms.OldHealthRegenAmount = OldHealthRegenAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealthPackUseSpeedModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealthPackUseSpeedModifier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealthPackUseSpeedModifier(struct GameplayAbilities_GameplayAttributeData& OldHealthPackUseSpeedModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealthPackUseSpeedModifier");

	Params::UValAttributeSet_OnRep_HealthPackUseSpeedModifier_Params Parms{};

	Parms.OldHealthPackUseSpeedModifier = OldHealthPackUseSpeedModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealthPackModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealthPackModifier                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealthPackModifier(struct GameplayAbilities_GameplayAttributeData& OldHealthPackModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealthPackModifier");

	Params::UValAttributeSet_OnRep_HealthPackModifier_Params Parms{};

	Parms.OldHealthPackModifier = OldHealthPackModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealthPackMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealthPackMax                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealthPackMax(struct GameplayAbilities_GameplayAttributeData& OldHealthPackMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealthPackMax");

	Params::UValAttributeSet_OnRep_HealthPackMax_Params Parms{};

	Parms.OldHealthPackMax = OldHealthPackMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealthMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealthMax                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealthMax(struct GameplayAbilities_GameplayAttributeData& OldHealthMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealthMax");

	Params::UValAttributeSet_OnRep_HealthMax_Params Parms{};

	Parms.OldHealthMax = OldHealthMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_Health
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealth                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_Health(struct GameplayAbilities_GameplayAttributeData& OldHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_Health");

	Params::UValAttributeSet_OnRep_Health_Params Parms{};

	Parms.OldHealth = OldHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HealReductionModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHealReductionModifier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HealReductionModifier(struct GameplayAbilities_GameplayAttributeData& OldHealReductionModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HealReductionModifier");

	Params::UValAttributeSet_OnRep_HealReductionModifier_Params Parms{};

	Parms.OldHealReductionModifier = OldHealReductionModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HeadshotDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHeadshotDamageModifier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HeadshotDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldHeadshotDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HeadshotDamageModifier");

	Params::UValAttributeSet_OnRep_HeadshotDamageModifier_Params Parms{};

	Parms.OldHeadshotDamageModifier = OldHeadshotDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_HeadshotDamageMitigationMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldHeadshotDamageMitigationMultiplier                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_HeadshotDamageMitigationMultiplier(struct GameplayAbilities_GameplayAttributeData& OldHeadshotDamageMitigationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_HeadshotDamageMitigationMultiplier");

	Params::UValAttributeSet_OnRep_HeadshotDamageMitigationMultiplier_Params Parms{};

	Parms.OldHeadshotDamageMitigationMultiplier = OldHeadshotDamageMitigationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GrenadeDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGrenadeDamageMultiplier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GrenadeDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGrenadeDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GrenadeDamageMultiplier");

	Params::UValAttributeSet_OnRep_GrenadeDamageMultiplier_Params Parms{};

	Parms.OldGrenadeDamageMultiplier = OldGrenadeDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalStaggerMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalStaggerMultiplier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalStaggerMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalStaggerMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalStaggerMultiplier");

	Params::UValAttributeSet_OnRep_GlobalStaggerMultiplier_Params Parms{};

	Parms.OldGlobalStaggerMultiplier = OldGlobalStaggerMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalSecondaryDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalSecondaryDamageMultiplier                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalSecondaryDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalSecondaryDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalSecondaryDamageMultiplier");

	Params::UValAttributeSet_OnRep_GlobalSecondaryDamageMultiplier_Params Parms{};

	Parms.OldGlobalSecondaryDamageMultiplier = OldGlobalSecondaryDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalPrimaryDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalPrimaryDamageMultiplier                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalPrimaryDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalPrimaryDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalPrimaryDamageMultiplier");

	Params::UValAttributeSet_OnRep_GlobalPrimaryDamageMultiplier_Params Parms{};

	Parms.OldGlobalPrimaryDamageMultiplier = OldGlobalPrimaryDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalMitigationModifier                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldGlobalMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalMitigationModifier");

	Params::UValAttributeSet_OnRep_GlobalMitigationModifier_Params Parms{};

	Parms.OldGlobalMitigationModifier = OldGlobalMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalMeleeDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalMeleeDamageMultiplier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalMeleeDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalMeleeDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalMeleeDamageMultiplier");

	Params::UValAttributeSet_OnRep_GlobalMeleeDamageMultiplier_Params Parms{};

	Parms.OldGlobalMeleeDamageMultiplier = OldGlobalMeleeDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalDamageMultiplier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalDamageMultiplier");

	Params::UValAttributeSet_OnRep_GlobalDamageMultiplier_Params Parms{};

	Parms.OldGlobalDamageMultiplier = OldGlobalDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalCybridDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalCybridDamageModifier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalCybridDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldGlobalCybridDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalCybridDamageModifier");

	Params::UValAttributeSet_OnRep_GlobalCybridDamageModifier_Params Parms{};

	Parms.OldGlobalCybridDamageModifier = OldGlobalCybridDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_GlobalAOEDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldGlobalAOEDamageMultiplier                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_GlobalAOEDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldGlobalAOEDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_GlobalAOEDamageMultiplier");

	Params::UValAttributeSet_OnRep_GlobalAOEDamageMultiplier_Params Parms{};

	Parms.OldGlobalAOEDamageMultiplier = OldGlobalAOEDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FlinchRollIntensity
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFlinchRollIntensity                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FlinchRollIntensity(struct GameplayAbilities_GameplayAttributeData& OldFlinchRollIntensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FlinchRollIntensity");

	Params::UValAttributeSet_OnRep_FlinchRollIntensity_Params Parms{};

	Parms.OldFlinchRollIntensity = OldFlinchRollIntensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FlinchPitchIntensity
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFlinchPitchIntensity                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FlinchPitchIntensity(struct GameplayAbilities_GameplayAttributeData& OldFlinchPitchIntensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FlinchPitchIntensity");

	Params::UValAttributeSet_OnRep_FlinchPitchIntensity_Params Parms{};

	Parms.OldFlinchPitchIntensity = OldFlinchPitchIntensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FlashlightRangeModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFlashlightRangeModifier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FlashlightRangeModifier(struct GameplayAbilities_GameplayAttributeData& OldFlashlightRangeModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FlashlightRangeModifier");

	Params::UValAttributeSet_OnRep_FlashlightRangeModifier_Params Parms{};

	Parms.OldFlashlightRangeModifier = OldFlashlightRangeModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FlashlightIntensityModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFlashlightIntensityModifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FlashlightIntensityModifier(struct GameplayAbilities_GameplayAttributeData& OldFlashlightIntensityModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FlashlightIntensityModifier");

	Params::UValAttributeSet_OnRep_FlashlightIntensityModifier_Params Parms{};

	Parms.OldFlashlightIntensityModifier = OldFlashlightIntensityModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FlagHolderDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFlagHolderDamageMultiplier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FlagHolderDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldFlagHolderDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FlagHolderDamageMultiplier");

	Params::UValAttributeSet_OnRep_FlagHolderDamageMultiplier_Params Parms{};

	Parms.OldFlagHolderDamageMultiplier = OldFlagHolderDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FalloffModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFalloffModifier                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FalloffModifier(struct GameplayAbilities_GameplayAttributeData& OldFalloffModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FalloffModifier");

	Params::UValAttributeSet_OnRep_FalloffModifier_Params Parms{};

	Parms.OldFalloffModifier = OldFalloffModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FallingSpread
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFallingSpread                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FallingSpread(struct GameplayAbilities_GameplayAttributeData& OldFallingSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FallingSpread");

	Params::UValAttributeSet_OnRep_FallingSpread_Params Parms{};

	Parms.OldFallingSpread = OldFallingSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_FabricatorCostMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldFabricatorCostMultiplier                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_FabricatorCostMultiplier(struct GameplayAbilities_GameplayAttributeData& OldFabricatorCostMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_FabricatorCostMultiplier");

	Params::UValAttributeSet_OnRep_FabricatorCostMultiplier_Params Parms{};

	Parms.OldFabricatorCostMultiplier = OldFabricatorCostMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_EnergyRegenRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldEnergyRegenRate                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_EnergyRegenRate(struct GameplayAbilities_GameplayAttributeData& OldEnergyRegenRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_EnergyRegenRate");

	Params::UValAttributeSet_OnRep_EnergyRegenRate_Params Parms{};

	Parms.OldEnergyRegenRate = OldEnergyRegenRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_EnergyMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldEnergyMax                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_EnergyMax(struct GameplayAbilities_GameplayAttributeData& OldEnergyMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_EnergyMax");

	Params::UValAttributeSet_OnRep_EnergyMax_Params Parms{};

	Parms.OldEnergyMax = OldEnergyMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_EmpStunModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldEMPStunModifier                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_EmpStunModifier(struct GameplayAbilities_GameplayAttributeData& OldEMPStunModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_EmpStunModifier");

	Params::UValAttributeSet_OnRep_EmpStunModifier_Params Parms{};

	Parms.OldEMPStunModifier = OldEMPStunModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DrawSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDrawSpeedMultiplier                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DrawSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldDrawSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DrawSpeedMultiplier");

	Params::UValAttributeSet_OnRep_DrawSpeedMultiplier_Params Parms{};

	Parms.OldDrawSpeedMultiplier = OldDrawSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DoorInteractTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDoorInteractTimeMultiplier                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DoorInteractTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldDoorInteractTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DoorInteractTimeMultiplier");

	Params::UValAttributeSet_OnRep_DoorInteractTimeMultiplier_Params Parms{};

	Parms.OldDoorInteractTimeMultiplier = OldDoorInteractTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DirectHitDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDirectHitDamageModifier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DirectHitDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldDirectHitDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DirectHitDamageModifier");

	Params::UValAttributeSet_OnRep_DirectHitDamageModifier_Params Parms{};

	Parms.OldDirectHitDamageModifier = OldDirectHitDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DetectionRadius
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDetectionRadius                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DetectionRadius(struct GameplayAbilities_GameplayAttributeData& OldDetectionRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DetectionRadius");

	Params::UValAttributeSet_OnRep_DetectionRadius_Params Parms{};

	Parms.OldDetectionRadius = OldDetectionRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DamageToEnergyConversionRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDamageToEnergyConversionRate                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DamageToEnergyConversionRate(struct GameplayAbilities_GameplayAttributeData& OldDamageToEnergyConversionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DamageToEnergyConversionRate");

	Params::UValAttributeSet_OnRep_DamageToEnergyConversionRate_Params Parms{};

	Parms.OldDamageToEnergyConversionRate = OldDamageToEnergyConversionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_DamageBoostUseSpeedModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldDamageBoostUseSpeedModifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_DamageBoostUseSpeedModifier(struct GameplayAbilities_GameplayAttributeData& OldDamageBoostUseSpeedModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_DamageBoostUseSpeedModifier");

	Params::UValAttributeSet_OnRep_DamageBoostUseSpeedModifier_Params Parms{};

	Parms.OldDamageBoostUseSpeedModifier = OldDamageBoostUseSpeedModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridTetherStateTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridTetherStateTime                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridTetherStateTime(struct GameplayAbilities_GameplayAttributeData& OldCybridTetherStateTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridTetherStateTime");

	Params::UValAttributeSet_OnRep_CybridTetherStateTime_Params Parms{};

	Parms.OldCybridTetherStateTime = OldCybridTetherStateTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridLatchDuration
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridLatchDuration                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridLatchDuration(struct GameplayAbilities_GameplayAttributeData& OldCybridLatchDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridLatchDuration");

	Params::UValAttributeSet_OnRep_CybridLatchDuration_Params Parms{};

	Parms.OldCybridLatchDuration = OldCybridLatchDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridDriveByDistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridDriveByDistance                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridDriveByDistance(struct GameplayAbilities_GameplayAttributeData& OldCybridDriveByDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridDriveByDistance");

	Params::UValAttributeSet_OnRep_CybridDriveByDistance_Params Parms{};

	Parms.OldCybridDriveByDistance = OldCybridDriveByDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridDamageModifier                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldCybridDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridDamageModifier");

	Params::UValAttributeSet_OnRep_CybridDamageModifier_Params Parms{};

	Parms.OldCybridDamageModifier = OldCybridDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridDamageMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridDamageMitigationModifier                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridDamageMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldCybridDamageMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridDamageMitigationModifier");

	Params::UValAttributeSet_OnRep_CybridDamageMitigationModifier_Params Parms{};

	Parms.OldCybridDamageMitigationModifier = OldCybridDamageMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridCriticalHealthThresholdPct
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridCriticalHealthThresholdPct                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridCriticalHealthThresholdPct(struct GameplayAbilities_GameplayAttributeData& OldCybridCriticalHealthThresholdPct)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridCriticalHealthThresholdPct");

	Params::UValAttributeSet_OnRep_CybridCriticalHealthThresholdPct_Params Parms{};

	Parms.OldCybridCriticalHealthThresholdPct = OldCybridCriticalHealthThresholdPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridBeamDistance
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridBeamDistance                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridBeamDistance(struct GameplayAbilities_GameplayAttributeData& OldCybridBeamDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridBeamDistance");

	Params::UValAttributeSet_OnRep_CybridBeamDistance_Params Parms{};

	Parms.OldCybridBeamDistance = OldCybridBeamDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CybridAlertStateTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCybridAlertStateTime                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CybridAlertStateTime(struct GameplayAbilities_GameplayAttributeData& OldCybridAlertStateTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CybridAlertStateTime");

	Params::UValAttributeSet_OnRep_CybridAlertStateTime_Params Parms{};

	Parms.OldCybridAlertStateTime = OldCybridAlertStateTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CrouchingSpread
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCrouchingSpread                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CrouchingSpread(struct GameplayAbilities_GameplayAttributeData& OldCrouchingSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CrouchingSpread");

	Params::UValAttributeSet_OnRep_CrouchingSpread_Params Parms{};

	Parms.OldCrouchingSpread = OldCrouchingSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ClipAmmoMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldClipAmmoMax                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ClipAmmoMax(struct GameplayAbilities_GameplayAttributeData& OldClipAmmoMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ClipAmmoMax");

	Params::UValAttributeSet_OnRep_ClipAmmoMax_Params Parms{};

	Parms.OldClipAmmoMax = OldClipAmmoMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ChestInteractTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldChestInteractTimeMultiplier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ChestInteractTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldChestInteractTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ChestInteractTimeMultiplier");

	Params::UValAttributeSet_OnRep_ChestInteractTimeMultiplier_Params Parms{};

	Parms.OldChestInteractTimeMultiplier = OldChestInteractTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ChargeTimeModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldChargeTimeModifier                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ChargeTimeModifier(struct GameplayAbilities_GameplayAttributeData& OldChargeTimeModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ChargeTimeModifier");

	Params::UValAttributeSet_OnRep_ChargeTimeModifier_Params Parms{};

	Parms.OldChargeTimeModifier = OldChargeTimeModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CharacterMassModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCharacterMassModifier                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CharacterMassModifier(struct GameplayAbilities_GameplayAttributeData& OldCharacterMassModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CharacterMassModifier");

	Params::UValAttributeSet_OnRep_CharacterMassModifier_Params Parms{};

	Parms.OldCharacterMassModifier = OldCharacterMassModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_CharacterMass
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldCharacterMass                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_CharacterMass(struct GameplayAbilities_GameplayAttributeData& OldCharacterMass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_CharacterMass");

	Params::UValAttributeSet_OnRep_CharacterMass_Params Parms{};

	Parms.OldCharacterMass = OldCharacterMass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_BurstShots
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldBurstShots                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_BurstShots(struct GameplayAbilities_GameplayAttributeData& OldBurstShots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_BurstShots");

	Params::UValAttributeSet_OnRep_BurstShots_Params Parms{};

	Parms.OldBurstShots = OldBurstShots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_BlockTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldBlockTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_BlockTime(struct GameplayAbilities_GameplayAttributeData& OldBlockTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_BlockTime");

	Params::UValAttributeSet_OnRep_BlockTime_Params Parms{};

	Parms.OldBlockTime = OldBlockTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_BackwardMovementSpeedReductionMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldBackwardMovementSpeedReductionMultiplier                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_BackwardMovementSpeedReductionMultiplier(struct GameplayAbilities_GameplayAttributeData& OldBackwardMovementSpeedReductionMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_BackwardMovementSpeedReductionMultiplier");

	Params::UValAttributeSet_OnRep_BackwardMovementSpeedReductionMultiplier_Params Parms{};

	Parms.OldBackwardMovementSpeedReductionMultiplier = OldBackwardMovementSpeedReductionMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_BackstabDamageModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldBackstabDamageModifier                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_BackstabDamageModifier(struct GameplayAbilities_GameplayAttributeData& OldBackstabDamageModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_BackstabDamageModifier");

	Params::UValAttributeSet_OnRep_BackstabDamageModifier_Params Parms{};

	Parms.OldBackstabDamageModifier = OldBackstabDamageModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackSpreadReductionModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackSpreadReductionModifier                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackSpreadReductionModifier(struct GameplayAbilities_GameplayAttributeData& OldAttackSpreadReductionModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackSpreadReductionModifier");

	Params::UValAttributeSet_OnRep_AttackSpreadReductionModifier_Params Parms{};

	Parms.OldAttackSpreadReductionModifier = OldAttackSpreadReductionModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackSpreadRecovery
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackSpreadRecovery                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackSpreadRecovery(struct GameplayAbilities_GameplayAttributeData& OldAttackSpreadRecovery)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackSpreadRecovery");

	Params::UValAttributeSet_OnRep_AttackSpreadRecovery_Params Parms{};

	Parms.OldAttackSpreadRecovery = OldAttackSpreadRecovery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackSpreadMax
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackSpreadMax                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackSpreadMax(struct GameplayAbilities_GameplayAttributeData& OldAttackSpreadMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackSpreadMax");

	Params::UValAttributeSet_OnRep_AttackSpreadMax_Params Parms{};

	Parms.OldAttackSpreadMax = OldAttackSpreadMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackSpreadIncrement
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackSpreadIncrement                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackSpreadIncrement(struct GameplayAbilities_GameplayAttributeData& OldAttackSpreadIncrement)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackSpreadIncrement");

	Params::UValAttributeSet_OnRep_AttackSpreadIncrement_Params Parms{};

	Parms.OldAttackSpreadIncrement = OldAttackSpreadIncrement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackSpread
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackSpread                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackSpread(struct GameplayAbilities_GameplayAttributeData& OldAttackSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackSpread");

	Params::UValAttributeSet_OnRep_AttackSpread_Params Parms{};

	Parms.OldAttackSpread = OldAttackSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackRate
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackRate                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackRate(struct GameplayAbilities_GameplayAttributeData& OldAttackRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackRate");

	Params::UValAttributeSet_OnRep_AttackRate_Params Parms{};

	Parms.OldAttackRate = OldAttackRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackDamagePerEnergy
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackDamagePerEnergy                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackDamagePerEnergy(struct GameplayAbilities_GameplayAttributeData& OldAttackDamagePerEnergy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackDamagePerEnergy");

	Params::UValAttributeSet_OnRep_AttackDamagePerEnergy_Params Parms{};

	Parms.OldAttackDamagePerEnergy = OldAttackDamagePerEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AttackDamage
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAttackDamage                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AttackDamage(struct GameplayAbilities_GameplayAttributeData& OldAttackDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AttackDamage");

	Params::UValAttributeSet_OnRep_AttackDamage_Params Parms{};

	Parms.OldAttackDamage = OldAttackDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AOEModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAOEModifier                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AOEModifier(struct GameplayAbilities_GameplayAttributeData& OldAOEModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AOEModifier");

	Params::UValAttributeSet_OnRep_AOEModifier_Params Parms{};

	Parms.OldAOEModifier = OldAOEModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AOEDamageMitigationModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAOEDamageMitigationModifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AOEDamageMitigationModifier(struct GameplayAbilities_GameplayAttributeData& OldAOEDamageMitigationModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AOEDamageMitigationModifier");

	Params::UValAttributeSet_OnRep_AOEDamageMitigationModifier_Params Parms{};

	Parms.OldAOEDamageMitigationModifier = OldAOEDamageMitigationModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AmmoUsedPerShot
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAmmoUsedPerShot                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AmmoUsedPerShot(struct GameplayAbilities_GameplayAttributeData& OldAmmoUsedPerShot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AmmoUsedPerShot");

	Params::UValAttributeSet_OnRep_AmmoUsedPerShot_Params Parms{};

	Parms.OldAmmoUsedPerShot = OldAmmoUsedPerShot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AirControl
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAirControl                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AirControl(struct GameplayAbilities_GameplayAttributeData& OldAirControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AirControl");

	Params::UValAttributeSet_OnRep_AirControl_Params Parms{};

	Parms.OldAirControl = OldAirControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AimSwayModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAimSwayModifier                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AimSwayModifier(struct GameplayAbilities_GameplayAttributeData& OldAimSwayModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AimSwayModifier");

	Params::UValAttributeSet_OnRep_AimSwayModifier_Params Parms{};

	Parms.OldAimSwayModifier = OldAimSwayModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AimingSpread
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAimingSpread                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AimingSpread(struct GameplayAbilities_GameplayAttributeData& OldAimingSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AimingSpread");

	Params::UValAttributeSet_OnRep_AimingSpread_Params Parms{};

	Parms.OldAimingSpread = OldAimingSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AimingMaxSpeedMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAimingMaxSpeedMultiplier                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AimingMaxSpeedMultiplier(struct GameplayAbilities_GameplayAttributeData& OldAimingMaxSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AimingMaxSpeedMultiplier");

	Params::UValAttributeSet_OnRep_AimingMaxSpeedMultiplier_Params Parms{};

	Parms.OldAimingMaxSpeedMultiplier = OldAimingMaxSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AimFOVModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAimFOVModifier                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AimFOVModifier(struct GameplayAbilities_GameplayAttributeData& OldAimFOVModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AimFOVModifier");

	Params::UValAttributeSet_OnRep_AimFOVModifier_Params Parms{};

	Parms.OldAimFOVModifier = OldAimFOVModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AIAcquireTargetTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAIAcquireTargetTime                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AIAcquireTargetTime(struct GameplayAbilities_GameplayAttributeData& OldAIAcquireTargetTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AIAcquireTargetTime");

	Params::UValAttributeSet_OnRep_AIAcquireTargetTime_Params Parms{};

	Parms.OldAIAcquireTargetTime = OldAIAcquireTargetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ADSTimeMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldADSTimeMultiplier                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ADSTimeMultiplier(struct GameplayAbilities_GameplayAttributeData& OldADSTimeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ADSTimeMultiplier");

	Params::UValAttributeSet_OnRep_ADSTimeMultiplier_Params Parms{};

	Parms.OldADSTimeMultiplier = OldADSTimeMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_ADSTime
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldADSTime                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_ADSTime(struct GameplayAbilities_GameplayAttributeData& OldADSTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_ADSTime");

	Params::UValAttributeSet_OnRep_ADSTime_Params Parms{};

	Parms.OldADSTime = OldADSTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AbilityDamageMultiplier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAbilityDamageMultiplier                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AbilityDamageMultiplier(struct GameplayAbilities_GameplayAttributeData& OldAbilityDamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AbilityDamageMultiplier");

	Params::UValAttributeSet_OnRep_AbilityDamageMultiplier_Params Parms{};

	Parms.OldAbilityDamageMultiplier = OldAbilityDamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.OnRep_AbilityAOEModifier
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAttributeDataOldAbilityAOEModifier                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAttributeSet::OnRep_AbilityAOEModifier(struct GameplayAbilities_GameplayAttributeData& OldAbilityAOEModifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "OnRep_AbilityAOEModifier");

	Params::UValAttributeSet_OnRep_AbilityAOEModifier_Params Parms{};

	Parms.OldAbilityAOEModifier = OldAbilityAOEModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAttributeSet.GetPlayerType
// (Native, Public, HasOutParams)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerType             PlayerType                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAttributeSet::GetPlayerType(class AValCharacter* Character, enum class EPlayerType* PlayerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "GetPlayerType");

	Params::UValAttributeSet_GetPlayerType_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerType != nullptr)
		*PlayerType = Parms.PlayerType;

}


// Function Valhalla.ValAttributeSet.GetPlayerStatus
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PlayerStatus       PlayerStatus                                                     (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UValAttributeSet::GetPlayerStatus(class AValCharacter* Character, struct Valhalla_PlayerStatus* PlayerStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "GetPlayerStatus");

	Params::UValAttributeSet_GetPlayerStatus_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerStatus != nullptr)
		*PlayerStatus = std::move(Parms.PlayerStatus);

}


// Function Valhalla.ValAttributeSet.GetPlayerId
// (Native, Public, HasOutParams)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PlayerId                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAttributeSet::GetPlayerId(class AValCharacter* Character, int32* PlayerId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAttributeSet", "GetPlayerId");

	Params::UValAttributeSet_GetPlayerId_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerId != nullptr)
		*PlayerId = Parms.PlayerId;

}


// Class Valhalla.ValAT_CooldownChanged
// (None)

class UClass* UValAT_CooldownChanged::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_CooldownChanged");

	return Clss;
}


// ValAT_CooldownChanged Valhalla.Default__ValAT_CooldownChanged
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAT_CooldownChanged* UValAT_CooldownChanged::GetDefaultObj()
{
	static class UValAT_CooldownChanged* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_CooldownChanged*>(UValAT_CooldownChanged::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_CooldownChanged.OnActiveEffectDurationChange
// (Native, Protected, HasOutParams)
// Parameters:
// struct GameplayAbilities_ActiveGameplayEffectEffect                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAT_CooldownChanged::OnActiveEffectDurationChange(struct GameplayAbilities_ActiveGameplayEffect& Effect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_CooldownChanged", "OnActiveEffectDurationChange");

	Params::UValAT_CooldownChanged_OnActiveEffectDurationChange_Params Parms{};

	Parms.Effect = Effect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAT_CooldownChanged.ListenForCooldownChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerCooldownTags                                                     (Parm, NativeAccessSpecifierPublic)
// bool                               UseServerCooldown                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAT_CooldownChanged*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_CooldownChanged* UValAT_CooldownChanged::ListenForCooldownChange(class UAbilitySystemComponent* AbilitySystemComponent, const struct GameplayTags_GameplayTagContainer& CooldownTags, bool UseServerCooldown)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_CooldownChanged", "ListenForCooldownChange");

	Params::UValAT_CooldownChanged_ListenForCooldownChange_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.CooldownTags = CooldownTags;
	Parms.UseServerCooldown = UseServerCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAT_CooldownChanged.EndTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAT_CooldownChanged::EndTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_CooldownChanged", "EndTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAT_GameplayTagAddedRemoved
// (None)

class UClass* UValAT_GameplayTagAddedRemoved::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_GameplayTagAddedRemoved");

	return Clss;
}


// ValAT_GameplayTagAddedRemoved Valhalla.Default__ValAT_GameplayTagAddedRemoved
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAT_GameplayTagAddedRemoved* UValAT_GameplayTagAddedRemoved::GetDefaultObj()
{
	static class UValAT_GameplayTagAddedRemoved* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_GameplayTagAddedRemoved*>(UValAT_GameplayTagAddedRemoved::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_GameplayTagAddedRemoved.ListenForGameplayTagAddedOrRemoved
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*     AbilitySystemComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerTags                                                             (Parm, NativeAccessSpecifierPublic)
// class UValAT_GameplayTagAddedRemoved*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_GameplayTagAddedRemoved* UValAT_GameplayTagAddedRemoved::ListenForGameplayTagAddedOrRemoved(class UAbilitySystemComponent* AbilitySystemComponent, const struct GameplayTags_GameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_GameplayTagAddedRemoved", "ListenForGameplayTagAddedOrRemoved");

	Params::UValAT_GameplayTagAddedRemoved_ListenForGameplayTagAddedOrRemoved_Params Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Tags = Tags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAT_GameplayTagAddedRemoved.EndTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAT_GameplayTagAddedRemoved::EndTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_GameplayTagAddedRemoved", "EndTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAT_PlayMontageForMeshAndWait
// (None)

class UClass* UValAT_PlayMontageForMeshAndWait::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_PlayMontageForMeshAndWait");

	return Clss;
}


// ValAT_PlayMontageForMeshAndWait Valhalla.Default__ValAT_PlayMontageForMeshAndWait
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UValAT_PlayMontageForMeshAndWait* UValAT_PlayMontageForMeshAndWait::GetDefaultObj()
{
	static class UValAT_PlayMontageForMeshAndWait* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_PlayMontageForMeshAndWait*>(UValAT_PlayMontageForMeshAndWait::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_PlayMontageForMeshAndWait.PlayMontageForMeshAndWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*            OwningAbility                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskInstanceName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*      Mesh                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                MontageToPlay                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerEventTags                                                        (Parm, NativeAccessSpecifierPublic)
// float                              Rate                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        StartSection                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStopWhenAbilityEnds                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AnimRootMotionTranslationScale                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bReplicateMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OverrideBlendOutTimeForCancelAbility                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OverrideBlendOutTimeForStopWhenEndAbility                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAT_PlayMontageForMeshAndWait*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_PlayMontageForMeshAndWait* UValAT_PlayMontageForMeshAndWait::PlayMontageForMeshAndWait(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class USkeletalMeshComponent* Mesh, class UAnimMontage* MontageToPlay, const struct GameplayTags_GameplayTagContainer& EventTags, float Rate, class FName StartSection, bool bStopWhenAbilityEnds, float AnimRootMotionTranslationScale, bool bReplicateMontage, float OverrideBlendOutTimeForCancelAbility, float OverrideBlendOutTimeForStopWhenEndAbility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_PlayMontageForMeshAndWait", "PlayMontageForMeshAndWait");

	Params::UValAT_PlayMontageForMeshAndWait_PlayMontageForMeshAndWait_Params Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Mesh = Mesh;
	Parms.MontageToPlay = MontageToPlay;
	Parms.EventTags = EventTags;
	Parms.Rate = Rate;
	Parms.StartSection = StartSection;
	Parms.bStopWhenAbilityEnds = bStopWhenAbilityEnds;
	Parms.AnimRootMotionTranslationScale = AnimRootMotionTranslationScale;
	Parms.bReplicateMontage = bReplicateMontage;
	Parms.OverrideBlendOutTimeForCancelAbility = OverrideBlendOutTimeForCancelAbility;
	Parms.OverrideBlendOutTimeForStopWhenEndAbility = OverrideBlendOutTimeForStopWhenEndAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAT_ServerWaitForClientTargetData
// (None)

class UClass* UValAT_ServerWaitForClientTargetData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_ServerWaitForClientTargetData");

	return Clss;
}


// ValAT_ServerWaitForClientTargetData Valhalla.Default__ValAT_ServerWaitForClientTargetData
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UValAT_ServerWaitForClientTargetData* UValAT_ServerWaitForClientTargetData::GetDefaultObj()
{
	static class UValAT_ServerWaitForClientTargetData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_ServerWaitForClientTargetData*>(UValAT_ServerWaitForClientTargetData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_ServerWaitForClientTargetData.ServerWaitForClientTargetData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*            OwningAbility                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskInstanceName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TriggerOnce                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAT_ServerWaitForClientTargetData*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_ServerWaitForClientTargetData* UValAT_ServerWaitForClientTargetData::ServerWaitForClientTargetData(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, bool TriggerOnce)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_ServerWaitForClientTargetData", "ServerWaitForClientTargetData");

	Params::UValAT_ServerWaitForClientTargetData_ServerWaitForClientTargetData_Params Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.TriggerOnce = TriggerOnce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAT_ServerWaitForClientTargetData.OnTargetDataReplicatedCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleData                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ActivationTag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAT_ServerWaitForClientTargetData::OnTargetDataReplicatedCallback(struct GameplayAbilities_GameplayAbilityTargetDataHandle& Data, const struct GameplayTags_GameplayTag& ActivationTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_ServerWaitForClientTargetData", "OnTargetDataReplicatedCallback");

	Params::UValAT_ServerWaitForClientTargetData_OnTargetDataReplicatedCallback_Params Parms{};

	Parms.Data = Data;
	Parms.ActivationTag = ActivationTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAT_WaitAiming
// (None)

class UClass* UValAT_WaitAiming::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_WaitAiming");

	return Clss;
}


// ValAT_WaitAiming Valhalla.Default__ValAT_WaitAiming
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UValAT_WaitAiming* UValAT_WaitAiming::GetDefaultObj()
{
	static class UValAT_WaitAiming* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_WaitAiming*>(UValAT_WaitAiming::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_WaitAiming.WaitAiming
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*            OwningAbility                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskInstanceName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWantsToAim                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAT_WaitAiming*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_WaitAiming* UValAT_WaitAiming::WaitAiming(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AValCharacter* Character, bool bWantsToAim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitAiming", "WaitAiming");

	Params::UValAT_WaitAiming_WaitAiming_Params Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Character = Character;
	Parms.bWantsToAim = bWantsToAim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValAT_WaitTargetDataUsingActor
// (None)

class UClass* UValAT_WaitTargetDataUsingActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAT_WaitTargetDataUsingActor");

	return Clss;
}


// ValAT_WaitTargetDataUsingActor Valhalla.Default__ValAT_WaitTargetDataUsingActor
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UValAT_WaitTargetDataUsingActor* UValAT_WaitTargetDataUsingActor::GetDefaultObj()
{
	static class UValAT_WaitTargetDataUsingActor* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAT_WaitTargetDataUsingActor*>(UValAT_WaitTargetDataUsingActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAT_WaitTargetDataUsingActor.WaitTargetDataWithReusableActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*            OwningAbility                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskInstanceName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EGameplayTargetingConfirmationConfirmationType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGameplayAbilityTargetActor* InTargetActor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateKeyIfNotValidForMorePredicting                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAT_WaitTargetDataUsingActor*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAT_WaitTargetDataUsingActor* UValAT_WaitTargetDataUsingActor::WaitTargetDataWithReusableActor(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, enum class EGameplayTargetingConfirmation ConfirmationType, class AGameplayAbilityTargetActor* InTargetActor, bool bCreateKeyIfNotValidForMorePredicting)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitTargetDataUsingActor", "WaitTargetDataWithReusableActor");

	Params::UValAT_WaitTargetDataUsingActor_WaitTargetDataWithReusableActor_Params Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.ConfirmationType = ConfirmationType;
	Parms.InTargetActor = InTargetActor;
	Parms.bCreateKeyIfNotValidForMorePredicting = bCreateKeyIfNotValidForMorePredicting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAT_WaitTargetDataUsingActor.OnTargetDataReplicatedCancelledCallback
// (Native, Public)
// Parameters:

void UValAT_WaitTargetDataUsingActor::OnTargetDataReplicatedCancelledCallback()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitTargetDataUsingActor", "OnTargetDataReplicatedCancelledCallback");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAT_WaitTargetDataUsingActor.OnTargetDataReplicatedCallback
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleData                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ActivationTag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAT_WaitTargetDataUsingActor::OnTargetDataReplicatedCallback(struct GameplayAbilities_GameplayAbilityTargetDataHandle& Data, const struct GameplayTags_GameplayTag& ActivationTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitTargetDataUsingActor", "OnTargetDataReplicatedCallback");

	Params::UValAT_WaitTargetDataUsingActor_OnTargetDataReplicatedCallback_Params Parms{};

	Parms.Data = Data;
	Parms.ActivationTag = ActivationTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAT_WaitTargetDataUsingActor.OnTargetDataReadyCallback
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleData                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAT_WaitTargetDataUsingActor::OnTargetDataReadyCallback(struct GameplayAbilities_GameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitTargetDataUsingActor", "OnTargetDataReadyCallback");

	Params::UValAT_WaitTargetDataUsingActor_OnTargetDataReadyCallback_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAT_WaitTargetDataUsingActor.OnTargetDataCancelledCallback
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetDataHandleData                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValAT_WaitTargetDataUsingActor::OnTargetDataCancelledCallback(struct GameplayAbilities_GameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAT_WaitTargetDataUsingActor", "OnTargetDataCancelledCallback");

	Params::UValAT_WaitTargetDataUsingActor_OnTargetDataCancelledCallback_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAudioRoomCollection
// (None)

class UClass* IValAudioRoomCollection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAudioRoomCollection");

	return Clss;
}


// ValAudioRoomCollection Valhalla.Default__ValAudioRoomCollection
// (Public, ClassDefaultObject, ArchetypeObject)

class IValAudioRoomCollection* IValAudioRoomCollection::GetDefaultObj()
{
	static class IValAudioRoomCollection* Default = nullptr;

	if (!Default)
		Default = static_cast<IValAudioRoomCollection*>(IValAudioRoomCollection::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAudioRoomCollection.SetRoomAkEvent
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*               Event                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::SetRoomAkEvent(struct CoreUObject_Vector& Location, class UAkAudioEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "SetRoomAkEvent");

	Params::IValAudioRoomCollection_SetRoomAkEvent_Params Parms{};

	Parms.Location = Location;
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAudioRoomCollection.OnAudioRoomRequestUnLoad
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bDisableOnlyObjects                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::OnAudioRoomRequestUnLoad(bool bDisableOnlyObjects)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "OnAudioRoomRequestUnLoad");

	Params::IValAudioRoomCollection_OnAudioRoomRequestUnLoad_Params Parms{};

	Parms.bDisableOnlyObjects = bDisableOnlyObjects;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAudioRoomCollection.OnAudioRoomRequestLoad
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bEnableObjects                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::OnAudioRoomRequestLoad(bool bEnableObjects)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "OnAudioRoomRequestLoad");

	Params::IValAudioRoomCollection_OnAudioRoomRequestLoad_Params Parms{};

	Parms.bEnableObjects = bEnableObjects;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAudioRoomCollection.GetAkRooms
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AValAkRoom*>          OutRooms                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::GetAkRooms(TArray<class AValAkRoom*>* OutRooms)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "GetAkRooms");

	Params::IValAudioRoomCollection_GetAkRooms_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRooms != nullptr)
		*OutRooms = std::move(Parms.OutRooms);

}


// Function Valhalla.ValAudioRoomCollection.GetAkRoomAtLocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValAkRoom*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValAkRoom* IValAudioRoomCollection::GetAkRoomAtLocation(struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "GetAkRoomAtLocation");

	Params::IValAudioRoomCollection_GetAkRoomAtLocation_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAudioRoomCollection.AddAkRoom
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AValAkRoom*                  Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::AddAkRoom(class AValAkRoom* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "AddAkRoom");

	Params::IValAudioRoomCollection_AddAkRoom_Params Parms{};

	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAudioRoomCollection.AddAkObject
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                     Object                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValAudioRoomCollection::AddAkObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioRoomCollection", "AddAkObject");

	Params::IValAudioRoomCollection_AddAkObject_Params Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBackendScripting
// (None)

class UClass* UValBackendScripting::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBackendScripting");

	return Clss;
}


// ValBackendScripting Valhalla.Default__ValBackendScripting
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBackendScripting* UValBackendScripting::GetDefaultObj()
{
	static class UValBackendScripting* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBackendScripting*>(UValBackendScripting::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBackendService
// (None)

class UClass* UValBackendService::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBackendService");

	return Clss;
}


// ValBackendService Valhalla.Default__ValBackendService
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBackendService* UValBackendService::GetDefaultObj()
{
	static class UValBackendService* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBackendService*>(UValBackendService::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBackendService.GetValScriptingInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValBackendScripting*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBackendScripting* UValBackendService::GetValScriptingInterface()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBackendService", "GetValScriptingInterface");

	Params::UValBackendService_GetValScriptingInterface_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValBlueprintLibrary
// (None)

class UClass* UValBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBlueprintLibrary");

	return Clss;
}


// ValBlueprintLibrary Valhalla.Default__ValBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBlueprintLibrary* UValBlueprintLibrary::GetDefaultObj()
{
	static class UValBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBlueprintLibrary*>(UValBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBlueprintLibrary.ValidateMeleeHitList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      OwningActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TestCollisionChannel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Engine_HitResult>    InputHits                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilityTargetDataHandle UValBlueprintLibrary::ValidateMeleeHitList(class AActor* OwningActor, enum class ECollisionChannel TestCollisionChannel, TArray<struct Engine_HitResult>& InputHits, bool bDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ValidateMeleeHitList");

	Params::UValBlueprintLibrary_ValidateMeleeHitList_Params Parms{};

	Parms.OwningActor = OwningActor;
	Parms.TestCollisionChannel = TestCollisionChannel;
	Parms.InputHits = InputHits;
	Parms.bDrawDebug = bDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.UpdateContractTaskProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Progress                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::UpdateContractTaskProgress(class UObject* WorldContextObject, const class FString& ContractId, class FName& TaskId, int32 Progress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "UpdateContractTaskProgress");

	Params::UValBlueprintLibrary_UpdateContractTaskProgress_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;
	Parms.TaskId = TaskId;
	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.TryComputeBotJumpVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_JumpTrajectoryPredictionParamsJumpParams                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutJumpVector                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::TryComputeBotJumpVector(class UObject* WorldContextObject, struct Valhalla_JumpTrajectoryPredictionParams& JumpParams, struct CoreUObject_Vector* OutJumpVector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "TryComputeBotJumpVector");

	Params::UValBlueprintLibrary_TryComputeBotJumpVector_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.JumpParams = JumpParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutJumpVector != nullptr)
		*OutJumpVector = std::move(Parms.OutJumpVector);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.SphereOverlapHitResults
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Engine_HitResult>    OutHitResults                                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct Engine_CollisionProfileName InTraceProfile                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIgnoreFriendly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxHitResults                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SphereRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SphereRange                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::SphereOverlapHitResults(class UObject* WorldContextObject, TArray<struct Engine_HitResult>* OutHitResults, const struct CoreUObject_Vector& Origin, const struct CoreUObject_Rotator& Rotation, const struct Engine_CollisionProfileName& InTraceProfile, class AActor* Instigator, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreFriendly, int32 MaxHitResults, bool bDrawDebug, float SphereRadius, float SphereRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SphereOverlapHitResults");

	Params::UValBlueprintLibrary_SphereOverlapHitResults_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Rotation = Rotation;
	Parms.InTraceProfile = InTraceProfile;
	Parms.Instigator = Instigator;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.MaxHitResults = MaxHitResults;
	Parms.bDrawDebug = bDrawDebug;
	Parms.SphereRadius = SphereRadius;
	Parms.SphereRange = SphereRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.SpawnProjectileDeferred
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                      Class                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       SpawnTransform                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValGameplayEffectContainerSpecEffectSpec                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ProjectileOrigin                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ExplosionRadius                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeedModify                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              BotMuzzleSocketIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 InstigatorController                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PredictionID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValProjectile* UValBlueprintLibrary::SpawnProjectileDeferred(class UClass* Class, struct CoreUObject_Transform& SpawnTransform, class AActor* Owner, struct Valhalla_ValGameplayEffectContainerSpec& EffectSpec, struct CoreUObject_Vector& ProjectileOrigin, float ExplosionRadius, float ProjectileSpeedModify, int32 BotMuzzleSocketIndex, class AController* InstigatorController, int32 PredictionID, class APawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SpawnProjectileDeferred");

	Params::UValBlueprintLibrary_SpawnProjectileDeferred_Params Parms{};

	Parms.Class = Class;
	Parms.SpawnTransform = SpawnTransform;
	Parms.Owner = Owner;
	Parms.EffectSpec = EffectSpec;
	Parms.ProjectileOrigin = ProjectileOrigin;
	Parms.ExplosionRadius = ExplosionRadius;
	Parms.ProjectileSpeedModify = ProjectileSpeedModify;
	Parms.BotMuzzleSocketIndex = BotMuzzleSocketIndex;
	Parms.InstigatorController = InstigatorController;
	Parms.PredictionID = PredictionID;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.SpawnPickupItemWithData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AValPickup_Item> PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PendingItem        ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       SpawnTransform                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPickup_Item*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPickup_Item* UValBlueprintLibrary::SpawnPickupItemWithData(class UObject* WorldContextObject, TSubclassOf<class AValPickup_Item> PickupClass, struct Valhalla_PendingItem& ItemData, struct CoreUObject_Transform& SpawnTransform, class AActor* Owner, class APawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SpawnPickupItemWithData");

	Params::UValBlueprintLibrary_SpawnPickupItemWithData_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PickupClass = PickupClass;
	Parms.ItemData = ItemData;
	Parms.SpawnTransform = SpawnTransform;
	Parms.Owner = Owner;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.SortContracts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_ContractSortData>Contracts                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractSortData>SortedContracts                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SortContracts(TArray<struct Valhalla_ContractSortData>& Contracts, TArray<struct Valhalla_ContractSortData>* SortedContracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SortContracts");

	Params::UValBlueprintLibrary_SortContracts_Params Parms{};

	Parms.Contracts = Contracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortedContracts != nullptr)
		*SortedContracts = std::move(Parms.SortedContracts);

}


// Function Valhalla.ValBlueprintLibrary.SortAbilities
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_AbilitySortData>Abilities                                                        (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_AbilitySortData>SortedAbilities                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SortAbilities(TArray<struct Valhalla_AbilitySortData>& Abilities, TArray<struct Valhalla_AbilitySortData>* SortedAbilities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SortAbilities");

	Params::UValBlueprintLibrary_SortAbilities_Params Parms{};

	Parms.Abilities = Abilities;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortedAbilities != nullptr)
		*SortedAbilities = std::move(Parms.SortedAbilities);

}


// Function Valhalla.ValBlueprintLibrary.SetCullDistanceVolumeEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACullDistanceVolume*         Volume                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SetCullDistanceVolumeEnabled(class ACullDistanceVolume* Volume, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SetCullDistanceVolumeEnabled");

	Params::UValBlueprintLibrary_SetCullDistanceVolumeEnabled_Params Parms{};

	Parms.Volume = Volume;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.SetComponentNetAddressable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*             Comp                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SetComponentNetAddressable(class UActorComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SetComponentNetAddressable");

	Params::UValBlueprintLibrary_SetComponentNetAddressable_Params Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.SetComponentIsNetStartup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*             Comp                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bNewIsNetStartup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SetComponentIsNetStartup(class UActorComponent* Comp, bool bNewIsNetStartup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SetComponentIsNetStartup");

	Params::UValBlueprintLibrary_SetComponentIsNetStartup_Params Parms{};

	Parms.Comp = Comp;
	Parms.bNewIsNetStartup = bNewIsNetStartup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.SetCollisionMaskForPrimitiveByTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*         Primitive                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SetCollisionMaskForPrimitiveByTeam(class UPrimitiveComponent* Primitive, int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SetCollisionMaskForPrimitiveByTeam");

	Params::UValBlueprintLibrary_SetCollisionMaskForPrimitiveByTeam_Params Parms{};

	Parms.Primitive = Primitive;
	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.SetActorIsNetStartup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      A                                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bNewIsNetStartup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      RenameSuffix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::SetActorIsNetStartup(class AActor* A, bool bNewIsNetStartup, const class FString& RenameSuffix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "SetActorIsNetStartup");

	Params::UValBlueprintLibrary_SetActorIsNetStartup_Params Parms{};

	Parms.A = A;
	Parms.bNewIsNetStartup = bNewIsNetStartup;
	Parms.RenameSuffix = RenameSuffix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.RemovePlayerContract
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ContractId                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::RemovePlayerContract(class UObject* WorldContextObject, class FName& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "RemovePlayerContract");

	Params::UValBlueprintLibrary_RemovePlayerContract_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.PrintToVerboseLogTemp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InString                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::PrintToVerboseLogTemp(class UObject* WorldContextObject, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "PrintToVerboseLogTemp");

	Params::UValBlueprintLibrary_PrintToVerboseLogTemp_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InString = InString;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.PrintStringInShipping
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InString                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPrintToScreen                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPrintToLog                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_LinearColor     TextColor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPrintOnlyInHighVerbosity                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::PrintStringInShipping(class UObject* WorldContextObject, const class FString& InString, bool bPrintToScreen, bool bPrintToLog, const struct CoreUObject_LinearColor& TextColor, float Duration, bool bPrintOnlyInHighVerbosity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "PrintStringInShipping");

	Params::UValBlueprintLibrary_PrintStringInShipping_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InString = InString;
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = TextColor;
	Parms.Duration = Duration;
	Parms.bPrintOnlyInHighVerbosity = bPrintOnlyInHighVerbosity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.OnStoreContractsLoaded
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        ShopRerollTime                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::OnStoreContractsLoaded(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>& ShopContracts, const struct CoreUObject_DateTime& ShopRerollTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "OnStoreContractsLoaded");

	Params::UValBlueprintLibrary_OnStoreContractsLoaded_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ShopContracts = ShopContracts;
	Parms.ShopRerollTime = ShopRerollTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.OnShopRerolled
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::OnShopRerolled(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>& ShopContracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "OnShopRerolled");

	Params::UValBlueprintLibrary_OnShopRerolled_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ShopContracts = ShopContracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.OnPlayerContractsLoaded
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>Contracts                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::OnPlayerContractsLoaded(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>& Contracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "OnPlayerContractsLoaded");

	Params::UValBlueprintLibrary_OnPlayerContractsLoaded_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Contracts = Contracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.OnContractPurchased
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       ContractId                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::OnContractPurchased(class UObject* WorldContextObject, struct Valhalla_ContractData& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "OnContractPurchased");

	Params::UValBlueprintLibrary_OnContractPurchased_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.MarkQuadrantAsUsed
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        CellCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        QuadrantCellSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Quadrant                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_IntPoint>UsedCoordinates                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::MarkQuadrantAsUsed(const struct CoreUObject_IntPoint& CellCount, const struct CoreUObject_IntPoint& QuadrantCellSize, const struct CoreUObject_IntPoint& Quadrant, TArray<struct CoreUObject_IntPoint>& UsedCoordinates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "MarkQuadrantAsUsed");

	Params::UValBlueprintLibrary_MarkQuadrantAsUsed_Params Parms{};

	Parms.CellCount = CellCount;
	Parms.QuadrantCellSize = QuadrantCellSize;
	Parms.Quadrant = Quadrant;
	Parms.UsedCoordinates = UsedCoordinates;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.LogTimeOfDay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              TimeOfDay                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              RepTimeOfDay                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::LogTimeOfDay(float TimeOfDay, float RepTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "LogTimeOfDay");

	Params::UValBlueprintLibrary_LogTimeOfDay_Params Parms{};

	Parms.TimeOfDay = TimeOfDay;
	Parms.RepTimeOfDay = RepTimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.LineOfSightMultiTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          StartPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_Vector>  EndPoints                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      IgnoreActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OutFoundClearLoS                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::LineOfSightMultiTrace(class UObject* WorldContextObject, const struct CoreUObject_Vector& StartPoint, TArray<struct CoreUObject_Vector>& EndPoints, enum class ECollisionChannel TraceChannel, class AActor* IgnoreActor, bool* OutFoundClearLoS)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "LineOfSightMultiTrace");

	Params::UValBlueprintLibrary_LineOfSightMultiTrace_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartPoint = StartPoint;
	Parms.EndPoints = EndPoints;
	Parms.TraceChannel = TraceChannel;
	Parms.IgnoreActor = IgnoreActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutFoundClearLoS != nullptr)
		*OutFoundClearLoS = Parms.OutFoundClearLoS;

}


// Function Valhalla.ValBlueprintLibrary.JetpackCheck
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SearchDistance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Iterations                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HeightInterval                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              IngoreActors                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutJetpackTarget                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::JetpackCheck(class UObject* WorldContextObject, enum class ECollisionChannel TraceChannel, class AActor* SourceActor, const struct CoreUObject_Vector& TargetLocation, float SearchDistance, int32 Iterations, float HeightInterval, TArray<class AActor*>& IngoreActors, struct CoreUObject_Vector* OutJetpackTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "JetpackCheck");

	Params::UValBlueprintLibrary_JetpackCheck_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TraceChannel = TraceChannel;
	Parms.SourceActor = SourceActor;
	Parms.TargetLocation = TargetLocation;
	Parms.SearchDistance = SearchDistance;
	Parms.Iterations = Iterations;
	Parms.HeightInterval = HeightInterval;
	Parms.IngoreActors = IngoreActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutJetpackTarget != nullptr)
		*OutJetpackTarget = std::move(Parms.OutJetpackTarget);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsTargetDataValidForSpawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilityTargetDataHandleTargetData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                              ValidationDistanceLeeway                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDisallowFriendlyHit                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ShotsPerFire                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinSpread                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsTargetDataValidForSpawn(class AValCharacter* Character, struct GameplayAbilities_GameplayAbilityTargetDataHandle& TargetData, float ValidationDistanceLeeway, bool bDisallowFriendlyHit, uint8 ShotsPerFire, float MinSpread)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsTargetDataValidForSpawn");

	Params::UValBlueprintLibrary_IsTargetDataValidForSpawn_Params Parms{};

	Parms.Character = Character;
	Parms.TargetData = TargetData;
	Parms.ValidationDistanceLeeway = ValidationDistanceLeeway;
	Parms.bDisallowFriendlyHit = bDisallowFriendlyHit;
	Parms.ShotsPerFire = ShotsPerFire;
	Parms.MinSpread = MinSpread;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsOfflineMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsOfflineMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsOfflineMode");

	Params::UValBlueprintLibrary_IsOfflineMode_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsNVIDIA
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsNVIDIA()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsNVIDIA");

	Params::UValBlueprintLibrary_IsNVIDIA_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsEditorWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsEditorWorld(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsEditorWorld");

	Params::UValBlueprintLibrary_IsEditorWorld_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsEditorBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsEditorBuild()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsEditorBuild");

	Params::UValBlueprintLibrary_IsEditorBuild_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsDemoMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsDemoMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsDemoMode");

	Params::UValBlueprintLibrary_IsDemoMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsContractComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsContractComplete(class UObject* WorldContextObject, const class FString& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsContractComplete");

	Params::UValBlueprintLibrary_IsContractComplete_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsAMD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsAMD()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsAMD");

	Params::UValBlueprintLibrary_IsAMD_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.IsActorBehindOtherActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      Source                                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::IsActorBehindOtherActor(class AActor* Source, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "IsActorBehindOtherActor");

	Params::UValBlueprintLibrary_IsActorBehindOtherActor_Params Parms{};

	Parms.Source = Source;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.HaveContractRequiredCurrency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       ContractId                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::HaveContractRequiredCurrency(class UObject* WorldContextObject, struct Valhalla_ContractData& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "HaveContractRequiredCurrency");

	Params::UValBlueprintLibrary_HaveContractRequiredCurrency_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetStoreContracts
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        ShopRerollTime                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetStoreContracts(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>* ShopContracts, struct CoreUObject_DateTime* ShopRerollTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetStoreContracts");

	Params::UValBlueprintLibrary_GetStoreContracts_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ShopContracts != nullptr)
		*ShopContracts = std::move(Parms.ShopContracts);

	if (ShopRerollTime != nullptr)
		*ShopRerollTime = std::move(Parms.ShopRerollTime);

}


// Function Valhalla.ValBlueprintLibrary.GetPlayerCurrencyValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECurrencyType           Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetPlayerCurrencyValue(class UObject* WorldContextObject, enum class ECurrencyType Type, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetPlayerCurrencyValue");

	Params::UValBlueprintLibrary_GetPlayerCurrencyValue_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

}


// Function Valhalla.ValBlueprintLibrary.GetPlayerContracts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>Contracts                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetPlayerContracts(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>* Contracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetPlayerContracts");

	Params::UValBlueprintLibrary_GetPlayerContracts_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Contracts != nullptr)
		*Contracts = std::move(Parms.Contracts);

}


// Function Valhalla.ValBlueprintLibrary.GetPlayerAttributeConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayerAttributeConfig*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayerAttributeConfig* UValBlueprintLibrary::GetPlayerAttributeConfig(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetPlayerAttributeConfig");

	Params::UValBlueprintLibrary_GetPlayerAttributeConfig_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetPingOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToCheck                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPing*                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPing* UValBlueprintLibrary::GetPingOnActor(class AActor* ActorToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetPingOnActor");

	Params::UValBlueprintLibrary_GetPingOnActor_Params Parms{};

	Parms.ActorToCheck = ActorToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetPersistentLoadoutSlotTagContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerOutTagContainer                                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetPersistentLoadoutSlotTagContainer(class UObject* WorldContextObject, struct GameplayTags_GameplayTagContainer* OutTagContainer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetPersistentLoadoutSlotTagContainer");

	Params::UValBlueprintLibrary_GetPersistentLoadoutSlotTagContainer_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTagContainer != nullptr)
		*OutTagContainer = std::move(Parms.OutTagContainer);

}


// Function Valhalla.ValBlueprintLibrary.GetNextPatrolLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                       PawnActor                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*            SplineComponent                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DistanceAlongSpline                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutNextLocation                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBlueprintLibrary::GetNextPatrolLocation(class APawn* PawnActor, class USplineComponent* SplineComponent, float DistanceAlongSpline, struct CoreUObject_Vector* OutNextLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetNextPatrolLocation");

	Params::UValBlueprintLibrary_GetNextPatrolLocation_Params Parms{};

	Parms.PawnActor = PawnActor;
	Parms.SplineComponent = SplineComponent;
	Parms.DistanceAlongSpline = DistanceAlongSpline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutNextLocation != nullptr)
		*OutNextLocation = std::move(Parms.OutNextLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetNetTimeoutStatus
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CompareTime                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeoutDelay                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetNetTimeoutStatus(class UObject* WorldContextObject, float* CompareTime, float* TimeoutDelay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetNetTimeoutStatus");

	Params::UValBlueprintLibrary_GetNetTimeoutStatus_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CompareTime != nullptr)
		*CompareTime = Parms.CompareTime;

	if (TimeoutDelay != nullptr)
		*TimeoutDelay = Parms.TimeoutDelay;

}


// Function Valhalla.ValBlueprintLibrary.GetMetadata
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimationAsset*             AnimationAsset                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAnimMetaData*>       MetaData                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetMetadata(class UAnimationAsset* AnimationAsset, TArray<class UAnimMetaData*>* MetaData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetMetadata");

	Params::UValBlueprintLibrary_GetMetadata_Params Parms{};

	Parms.AnimationAsset = AnimationAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MetaData != nullptr)
		*MetaData = std::move(Parms.MetaData);

}


// Function Valhalla.ValBlueprintLibrary.GetMaterialsFromNiagaraComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*           NiagaraComp                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInterface*>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInterface*> UValBlueprintLibrary::GetMaterialsFromNiagaraComponent(class UNiagaraComponent* NiagaraComp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetMaterialsFromNiagaraComponent");

	Params::UValBlueprintLibrary_GetMaterialsFromNiagaraComponent_Params Parms{};

	Parms.NiagaraComp = NiagaraComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetLocalStoreContracts
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        ShopRerollTime                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetLocalStoreContracts(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>* ShopContracts, struct CoreUObject_DateTime* ShopRerollTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalStoreContracts");

	Params::UValBlueprintLibrary_GetLocalStoreContracts_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ShopContracts != nullptr)
		*ShopContracts = std::move(Parms.ShopContracts);

	if (ShopRerollTime != nullptr)
		*ShopRerollTime = std::move(Parms.ShopRerollTime);

}


// Function Valhalla.ValBlueprintLibrary.GetLocalSettingsSubsystem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValSettingsSubsystem*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSettingsSubsystem* UValBlueprintLibrary::GetLocalSettingsSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalSettingsSubsystem");

	Params::UValBlueprintLibrary_GetLocalSettingsSubsystem_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetLocalPlayerInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* UValBlueprintLibrary::GetLocalPlayerInventory(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalPlayerInventory");

	Params::UValBlueprintLibrary_GetLocalPlayerInventory_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetLocalPlayerContracts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractData>Contracts                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetLocalPlayerContracts(class UObject* WorldContextObject, TArray<struct Valhalla_ContractData>* Contracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalPlayerContracts");

	Params::UValBlueprintLibrary_GetLocalPlayerContracts_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Contracts != nullptr)
		*Contracts = std::move(Parms.Contracts);

}


// Function Valhalla.ValBlueprintLibrary.GetLocalPlayerContract
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       Contract                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::GetLocalPlayerContract(class UObject* WorldContextObject, const class FString& ContractId, struct Valhalla_ContractData* Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalPlayerContract");

	Params::UValBlueprintLibrary_GetLocalPlayerContract_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Contract != nullptr)
		*Contract = std::move(Parms.Contract);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetLocalClientValPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* UValBlueprintLibrary::GetLocalClientValPlayerController(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetLocalClientValPlayerController");

	Params::UValBlueprintLibrary_GetLocalClientValPlayerController_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetJitteredCellLocations
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bVisualize                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        CachedCellCount                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector2D        CachedCellSize                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          CachedWorldLocation                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        CachedRandomCell                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxJitter                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Retries                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_RandomStream    JitterRandomStream                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              MinZ                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              POIRadius                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TerrainRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<struct CoreUObject_IntPoint, struct CoreUObject_Vector>CellJitteredLocations                                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                              DrawDebugDuration                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::GetJitteredCellLocations(class UObject* WorldContextObject, bool bVisualize, struct CoreUObject_IntPoint& CachedCellCount, struct CoreUObject_Vector2D& CachedCellSize, struct CoreUObject_Vector& CachedWorldLocation, struct CoreUObject_IntPoint& CachedRandomCell, float MaxJitter, int32 Retries, struct CoreUObject_RandomStream& JitterRandomStream, float MinZ, float POIRadius, float TerrainRadius, TMap<struct CoreUObject_IntPoint, struct CoreUObject_Vector>& CellJitteredLocations, float DrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetJitteredCellLocations");

	Params::UValBlueprintLibrary_GetJitteredCellLocations_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bVisualize = bVisualize;
	Parms.CachedCellCount = CachedCellCount;
	Parms.CachedCellSize = CachedCellSize;
	Parms.CachedWorldLocation = CachedWorldLocation;
	Parms.CachedRandomCell = CachedRandomCell;
	Parms.MaxJitter = MaxJitter;
	Parms.Retries = Retries;
	Parms.JitterRandomStream = JitterRandomStream;
	Parms.MinZ = MinZ;
	Parms.POIRadius = POIRadius;
	Parms.TerrainRadius = TerrainRadius;
	Parms.CellJitteredLocations = CellJitteredLocations;
	Parms.DrawDebugDuration = DrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.GetItemModAssetById
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemModAsset*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemModAsset* UValBlueprintLibrary::GetItemModAssetById(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetItemModAssetById");

	Params::UValBlueprintLibrary_GetItemModAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetItemAssetById
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemAsset* UValBlueprintLibrary::GetItemAssetById(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetItemAssetById");

	Params::UValBlueprintLibrary_GetItemAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetInventoryManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValInventoryManager*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValInventoryManager* UValBlueprintLibrary::GetInventoryManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetInventoryManager");

	Params::UValBlueprintLibrary_GetInventoryManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetDataTableManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDataTableManager*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDataTableManager* UValBlueprintLibrary::GetDataTableManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetDataTableManager");

	Params::UValBlueprintLibrary_GetDataTableManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetCurrencyValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       ShopContract                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ECurrencyType           Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::GetCurrencyValue(class UObject* WorldContextObject, struct Valhalla_ContractData& ShopContract, enum class ECurrencyType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetCurrencyValue");

	Params::UValBlueprintLibrary_GetCurrencyValue_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ShopContract = ShopContract;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractTaskProgressPercent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBlueprintLibrary::GetContractTaskProgressPercent(class UObject* WorldContextObject, const class FString& ContractId, class FName& TaskId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractTaskProgressPercent");

	Params::UValBlueprintLibrary_GetContractTaskProgressPercent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;
	Parms.TaskId = TaskId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractTaskProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::GetContractTaskProgress(class UObject* WorldContextObject, const class FString& ContractId, class FName& TaskId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractTaskProgress");

	Params::UValBlueprintLibrary_GetContractTaskProgress_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;
	Parms.TaskId = TaskId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractTaskDataProgressPercent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractTaskData   TaskData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBlueprintLibrary::GetContractTaskDataProgressPercent(class UObject* WorldContextObject, struct Valhalla_ContractTaskData& TaskData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractTaskDataProgressPercent");

	Params::UValBlueprintLibrary_GetContractTaskDataProgressPercent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TaskData = TaskData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractRarity
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_Contract           Contract                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity UValBlueprintLibrary::GetContractRarity(class UObject* WorldContextObject, struct Valhalla_Contract& Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractRarity");

	Params::UValBlueprintLibrary_GetContractRarity_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Contract = Contract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractProgressPercent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBlueprintLibrary::GetContractProgressPercent(class UObject* WorldContextObject, const class FString& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractProgressPercent");

	Params::UValBlueprintLibrary_GetContractProgressPercent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractDisplayName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       Contract                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UValBlueprintLibrary::GetContractDisplayName(class UObject* WorldContextObject, struct Valhalla_ContractData& Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractDisplayName");

	Params::UValBlueprintLibrary_GetContractDisplayName_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Contract = Contract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetContractDataProgressPercent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       ContractData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBlueprintLibrary::GetContractDataProgressPercent(class UObject* WorldContextObject, struct Valhalla_ContractData& ContractData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetContractDataProgressPercent");

	Params::UValBlueprintLibrary_GetContractDataProgressPercent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContractData = ContractData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetClassDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UObject>         Class                                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UValBlueprintLibrary::GetClassDefaultObject(TSubclassOf<class UObject> Class)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetClassDefaultObject");

	Params::UValBlueprintLibrary_GetClassDefaultObject_Params Parms{};

	Parms.Class = Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetCharacterClosest3PSocketName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValBlueprintLibrary::GetCharacterClosest3PSocketName(class AValCharacter* Character, const struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetCharacterClosest3PSocketName");

	Params::UValBlueprintLibrary_GetCharacterClosest3PSocketName_Params Parms{};

	Parms.Character = Character;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetCachedArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>             InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UObject*>             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UValBlueprintLibrary::GetCachedArray(TArray<class UObject*>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetCachedArray");

	Params::UValBlueprintLibrary_GetCachedArray_Params Parms{};

	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.GetAgentConfigByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    AgentGameplayTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAgentConfig*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAgentConfig* UValBlueprintLibrary::GetAgentConfigByTag(class UObject* WorldContextObject, const struct GameplayTags_GameplayTag& AgentGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "GetAgentConfigByTag");

	Params::UValBlueprintLibrary_GetAgentConfigByTag_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AgentGameplayTag = AgentGameplayTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.FinishSpawningProjectile
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AValProjectile*              Projectile                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       Transform                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValProjectile* UValBlueprintLibrary::FinishSpawningProjectile(class AValProjectile* Projectile, struct CoreUObject_Transform& Transform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "FinishSpawningProjectile");

	Params::UValBlueprintLibrary_FinishSpawningProjectile_Params Parms{};

	Parms.Projectile = Projectile;
	Parms.Transform = Transform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.FindTeleportSpot
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TestActor                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         TestRotation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TestLocation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          AdjustedLocation                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::FindTeleportSpot(class UObject* WorldContextObject, class AActor* TestActor, const struct CoreUObject_Rotator& TestRotation, const struct CoreUObject_Vector& TestLocation, struct CoreUObject_Vector* AdjustedLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "FindTeleportSpot");

	Params::UValBlueprintLibrary_FindTeleportSpot_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TestActor = TestActor;
	Parms.TestRotation = TestRotation;
	Parms.TestLocation = TestLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AdjustedLocation != nullptr)
		*AdjustedLocation = std::move(Parms.AdjustedLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ExportMontageBonePositionToCurve
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimMontage*                AnimMontage                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InBoneName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveVector*                Curve                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::ExportMontageBonePositionToCurve(class UAnimMontage* AnimMontage, class FName& InBoneName, class UCurveVector* Curve)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ExportMontageBonePositionToCurve");

	Params::UValBlueprintLibrary_ExportMontageBonePositionToCurve_Params Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.InBoneName = InBoneName;
	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.ExportAnimBonePositionToCurve
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAnimSequence*               AnimSequence                                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InBoneName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveVector*                Curve                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::ExportAnimBonePositionToCurve(class UAnimSequence* AnimSequence, class FName& InBoneName, class UCurveVector* Curve)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ExportAnimBonePositionToCurve");

	Params::UValBlueprintLibrary_ExportAnimBonePositionToCurve_Params Parms{};

	Parms.AnimSequence = AnimSequence;
	Parms.InBoneName = InBoneName;
	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.DebugCookBreak
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      bpName                                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::DebugCookBreak(class FString& bpName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "DebugCookBreak");

	Params::UValBlueprintLibrary_DebugCookBreak_Params Parms{};

	Parms.bpName = bpName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBlueprintLibrary.ConvertCollisionChannelToObjectType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class ECollisionChannel       Channel                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EObjectTypeQuery        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EObjectTypeQuery UValBlueprintLibrary::ConvertCollisionChannelToObjectType(enum class ECollisionChannel Channel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ConvertCollisionChannelToObjectType");

	Params::UValBlueprintLibrary_ConvertCollisionChannelToObjectType_Params Parms{};

	Parms.Channel = Channel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ConeOverlapHitResults
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Engine_HitResult>    OutHitResults                                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Angle                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EObjectTypeQuery>ObjectTypes                                                      (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIgnoreFriendly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxHitResults                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TestCollisionChannel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::ConeOverlapHitResults(class UObject* WorldContextObject, TArray<struct Engine_HitResult>* OutHitResults, const struct CoreUObject_Vector& Origin, const struct CoreUObject_Rotator& Rotation, float Radius, float Angle, const TArray<enum class EObjectTypeQuery>& ObjectTypes, class AActor* Instigator, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreFriendly, int32 MaxHitResults, enum class ECollisionChannel TestCollisionChannel, bool bDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ConeOverlapHitResults");

	Params::UValBlueprintLibrary_ConeOverlapHitResults_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Rotation = Rotation;
	Parms.Radius = Radius;
	Parms.Angle = Angle;
	Parms.ObjectTypes = ObjectTypes;
	Parms.Instigator = Instigator;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.MaxHitResults = MaxHitResults;
	Parms.TestCollisionChannel = TestCollisionChannel;
	Parms.bDrawDebug = bDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ConeOverlapActors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OutActors                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Angle                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EObjectTypeQuery>ObjectTypes                                                      (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIgnoreFriendly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxHitResults                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::ConeOverlapActors(class UObject* WorldContextObject, TArray<class AActor*>* OutActors, const struct CoreUObject_Vector& Origin, const struct CoreUObject_Rotator& Rotation, float Radius, float Angle, const TArray<enum class EObjectTypeQuery>& ObjectTypes, class AActor* Instigator, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreFriendly, int32 MaxHitResults, bool bDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ConeOverlapActors");

	Params::UValBlueprintLibrary_ConeOverlapActors_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Rotation = Rotation;
	Parms.Radius = Radius;
	Parms.Angle = Angle;
	Parms.ObjectTypes = ObjectTypes;
	Parms.Instigator = Instigator;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.MaxHitResults = MaxHitResults;
	Parms.bDrawDebug = bDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ComputeQuadrantFromCellCoord
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        Coord                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        QuadrantCellSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint UValBlueprintLibrary::ComputeQuadrantFromCellCoord(const struct CoreUObject_IntPoint& Coord, const struct CoreUObject_IntPoint& QuadrantCellSize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ComputeQuadrantFromCellCoord");

	Params::UValBlueprintLibrary_ComputeQuadrantFromCellCoord_Params Parms{};

	Parms.Coord = Coord;
	Parms.QuadrantCellSize = QuadrantCellSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ComputeJitteredCellLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        CachedCellCount                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector2D        CachedCellSize                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          POIExtent                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_IntPoint>UsedCoordinates                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_RandomStream    JitterRandomStream                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              MaxJitter                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Retries                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinZ                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              POIRadius                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TerrainRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bVisualize                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DrawDebugDuration                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutLocation                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::ComputeJitteredCellLocation(class UObject* WorldContextObject, struct CoreUObject_IntPoint& CachedCellCount, struct CoreUObject_Vector2D& CachedCellSize, struct CoreUObject_Vector& POIExtent, TArray<struct CoreUObject_IntPoint>& UsedCoordinates, struct CoreUObject_RandomStream& JitterRandomStream, float MaxJitter, int32 Retries, float MinZ, float POIRadius, float TerrainRadius, bool bVisualize, float DrawDebugDuration, struct CoreUObject_Vector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ComputeJitteredCellLocation");

	Params::UValBlueprintLibrary_ComputeJitteredCellLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CachedCellCount = CachedCellCount;
	Parms.CachedCellSize = CachedCellSize;
	Parms.POIExtent = POIExtent;
	Parms.UsedCoordinates = UsedCoordinates;
	Parms.JitterRandomStream = JitterRandomStream;
	Parms.MaxJitter = MaxJitter;
	Parms.Retries = Retries;
	Parms.MinZ = MinZ;
	Parms.POIRadius = POIRadius;
	Parms.TerrainRadius = TerrainRadius;
	Parms.bVisualize = bVisualize;
	Parms.DrawDebugDuration = DrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CleanShieldValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Shield                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CleanShieldValue(float Shield)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CleanShieldValue");

	Params::UValBlueprintLibrary_CleanShieldValue_Params Parms{};

	Parms.Shield = Shield;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CleanShieldMaxValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              ShieldMax                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CleanShieldMaxValue(float ShieldMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CleanShieldMaxValue");

	Params::UValBlueprintLibrary_CleanShieldMaxValue_Params Parms{};

	Parms.ShieldMax = ShieldMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CleanHealthValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Health                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CleanHealthValue(float Health)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CleanHealthValue");

	Params::UValBlueprintLibrary_CleanHealthValue_Params Parms{};

	Parms.Health = Health;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CleanHealthMaxValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              HealthMax                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CleanHealthMaxValue(float HealthMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CleanHealthMaxValue");

	Params::UValBlueprintLibrary_CleanHealthMaxValue_Params Parms{};

	Parms.HealthMax = HealthMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ClaimShopContract
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractData       StoreContractID                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::ClaimShopContract(class UObject* WorldContextObject, struct Valhalla_ContractData& StoreContractID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ClaimShopContract");

	Params::UValBlueprintLibrary_ClaimShopContract_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StoreContractID = StoreContractID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CellToWorldLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        Cell                                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector2D        CellSize                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TerrainRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValBlueprintLibrary::CellToWorldLocation(struct CoreUObject_IntPoint& Cell, struct CoreUObject_Vector2D& CellSize, float TerrainRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CellToWorldLocation");

	Params::UValBlueprintLibrary_CellToWorldLocation_Params Parms{};

	Parms.Cell = Cell;
	Parms.CellSize = CellSize;
	Parms.TerrainRadius = TerrainRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CalculateEntryCost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Reputation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CalculateEntryCost(class UObject* WorldContextObject, int32 Reputation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CalculateEntryCost");

	Params::UValBlueprintLibrary_CalculateEntryCost_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Reputation = Reputation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.CalculateDisplayEntryCost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Reputation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValBlueprintLibrary::CalculateDisplayEntryCost(class UObject* WorldContextObject, int32 Reputation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "CalculateDisplayEntryCost");

	Params::UValBlueprintLibrary_CalculateDisplayEntryCost_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Reputation = Reputation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.BoxOverlapHitResults
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Engine_HitResult>    OutHitResults                                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<enum class EObjectTypeQuery>ObjectTypes                                                      (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIgnoreFriendly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxHitResults                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BoxExtent                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BoxOffset                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::BoxOverlapHitResults(class UObject* WorldContextObject, TArray<struct Engine_HitResult>* OutHitResults, const struct CoreUObject_Vector& Origin, const struct CoreUObject_Rotator& Rotation, const TArray<enum class EObjectTypeQuery>& ObjectTypes, class AActor* Instigator, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreFriendly, int32 MaxHitResults, bool bDrawDebug, const struct CoreUObject_Vector& BoxExtent, const struct CoreUObject_Vector& BoxOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "BoxOverlapHitResults");

	Params::UValBlueprintLibrary_BoxOverlapHitResults_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Rotation = Rotation;
	Parms.ObjectTypes = ObjectTypes;
	Parms.Instigator = Instigator;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.MaxHitResults = MaxHitResults;
	Parms.bDrawDebug = bDrawDebug;
	Parms.BoxExtent = BoxExtent;
	Parms.BoxOffset = BoxOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.BoxOverlapActors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OutActors                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<enum class EObjectTypeQuery>ObjectTypes                                                      (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIgnoreFriendly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxHitResults                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDrawDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BoxExtent                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BoxOffset                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBlueprintLibrary::BoxOverlapActors(class UObject* WorldContextObject, TArray<class AActor*>* OutActors, const struct CoreUObject_Vector& Origin, const struct CoreUObject_Rotator& Rotation, const TArray<enum class EObjectTypeQuery>& ObjectTypes, class AActor* Instigator, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreFriendly, int32 MaxHitResults, bool bDrawDebug, const struct CoreUObject_Vector& BoxExtent, const struct CoreUObject_Vector& BoxOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "BoxOverlapActors");

	Params::UValBlueprintLibrary_BoxOverlapActors_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Rotation = Rotation;
	Parms.ObjectTypes = ObjectTypes;
	Parms.Instigator = Instigator;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.bIgnoreFriendly = bIgnoreFriendly;
	Parms.MaxHitResults = MaxHitResults;
	Parms.bDrawDebug = bDrawDebug;
	Parms.BoxExtent = BoxExtent;
	Parms.BoxOffset = BoxOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBlueprintLibrary.ApplyDirectDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      SourceActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEffectSpecHandleDamageSpec                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValBlueprintLibrary::ApplyDirectDamage(class AActor* SourceActor, class AActor* TargetActor, struct GameplayAbilities_GameplayEffectSpecHandle& DamageSpec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBlueprintLibrary", "ApplyDirectDamage");

	Params::UValBlueprintLibrary_ApplyDirectDamage_Params Parms{};

	Parms.SourceActor = SourceActor;
	Parms.TargetActor = TargetActor;
	Parms.DamageSpec = DamageSpec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValThreatComponent
// (None)

class UClass* UValThreatComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValThreatComponent");

	return Clss;
}


// ValThreatComponent Valhalla.Default__ValThreatComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValThreatComponent* UValThreatComponent::GetDefaultObj()
{
	static class UValThreatComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValThreatComponent*>(UValThreatComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValThreatComponent.UpdateThreats
// (Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::UpdateThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "UpdateThreats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.UpdateThreatLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ThreatIndex                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::UpdateThreatLevel(int32 ThreatIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "UpdateThreatLevel");

	Params::UValThreatComponent_UpdateThreatLevel_Params Parms{};

	Parms.ThreatIndex = ThreatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.UpdateBlackboard
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_Threat             ThreatStruct                                                     (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UValThreatComponent::UpdateBlackboard(struct Valhalla_Threat* ThreatStruct)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "UpdateBlackboard");

	Params::UValThreatComponent_UpdateBlackboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ThreatStruct != nullptr)
		*ThreatStruct = std::move(Parms.ThreatStruct);

}


// Function Valhalla.ValThreatComponent.ToggleSetTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::ToggleSetTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "ToggleSetTargetActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.StopThreatSystem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bClearBlackboard                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::StopThreatSystem(bool bClearBlackboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "StopThreatSystem");

	Params::UValThreatComponent_StopThreatSystem_Params Parms{};

	Parms.bClearBlackboard = bClearBlackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.StartThreatSystem
// (Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::StartThreatSystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "StartThreatSystem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.SortThreatList
// (Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::SortThreatList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "SortThreatList");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.ShouldIgnoreThreat
// (Native, Public)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::ShouldIgnoreThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "ShouldIgnoreThreat");

	Params::UValThreatComponent_ShouldIgnoreThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.SetTetherRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewTetherRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::SetTetherRadius(float NewTetherRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "SetTetherRadius");

	Params::UValThreatComponent_SetTetherRadius_Params Parms{};

	Parms.NewTetherRadius = NewTetherRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.RemoveThreat
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::RemoveThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "RemoveThreat");

	Params::UValThreatComponent_RemoveThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.RemoveCurrentInCoverTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::RemoveCurrentInCoverTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "RemoveCurrentInCoverTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.PrioritizeThreat
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::PrioritizeThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "PrioritizeThreat");

	Params::UValThreatComponent_PrioritizeThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnThreatListEmptied
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::OnThreatListEmptied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnThreatListEmptied");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnOwnerAttackingUpdated
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::OnOwnerAttackingUpdated(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnOwnerAttackingUpdated");

	Params::UValThreatComponent_OnOwnerAttackingUpdated_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnMatchStateChanged
// (Final, Native, Protected)
// Parameters:

void UValThreatComponent::OnMatchStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnMatchStateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnCurrentThreatTagChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::OnCurrentThreatTagChanged(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnCurrentThreatTagChanged");

	Params::UValThreatComponent_OnCurrentThreatTagChanged_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnCoverTagChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::OnCoverTagChanged(const struct GameplayTags_GameplayTag& Tag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnCoverTagChanged");

	Params::UValThreatComponent_OnCoverTagChanged_Params Parms{};

	Parms.Tag = Tag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnCharacterThreatDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::OnCharacterThreatDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnCharacterThreatDied");

	Params::UValThreatComponent_OnCharacterThreatDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.OnAttributeActorThreatDied
// (Final, Native, Protected)
// Parameters:
// class AValAttributeActorBase*      Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::OnAttributeActorThreatDied(class AValAttributeActorBase* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "OnAttributeActorThreatDied");

	Params::UValThreatComponent_OnAttributeActorThreatDied_Params Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.IsThreatValid
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_Threat             ThreatStruct                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::IsThreatValid(struct Valhalla_Threat& ThreatStruct)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "IsThreatValid");

	Params::UValThreatComponent_IsThreatValid_Params Parms{};

	Parms.ThreatStruct = ThreatStruct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.IsThreatSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::IsThreatSeen(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "IsThreatSeen");

	Params::UValThreatComponent_IsThreatSeen_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.IsThreatReachable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::IsThreatReachable(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "IsThreatReachable");

	Params::UValThreatComponent_IsThreatReachable_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.IsThreatInCover
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::IsThreatInCover(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "IsThreatInCover");

	Params::UValThreatComponent_IsThreatInCover_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.IsThreatHeard
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::IsThreatHeard(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "IsThreatHeard");

	Params::UValThreatComponent_IsThreatHeard_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.HasThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::HasThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "HasThreat");

	Params::UValThreatComponent_HasThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.HasEnemyThreat
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::HasEnemyThreat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "HasEnemyThreat");

	Params::UValThreatComponent_HasEnemyThreat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.HasAnyThreats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValThreatComponent::HasAnyThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "HasAnyThreats");

	Params::UValThreatComponent_HasAnyThreats_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.GetThreatIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      ThreatActor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValThreatComponent::GetThreatIndex(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "GetThreatIndex");

	Params::UValThreatComponent_GetThreatIndex_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.GetThreatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValThreatComponent::GetThreatCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "GetThreatCount");

	Params::UValThreatComponent_GetThreatCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.GetOrAddThreat
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValThreatComponent::GetOrAddThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "GetOrAddThreat");

	Params::UValThreatComponent_GetOrAddThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.GetCurrentThreat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UValThreatComponent::GetCurrentThreat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "GetCurrentThreat");

	Params::UValThreatComponent_GetCurrentThreat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValThreatComponent.ForceUpdateThreats
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::ForceUpdateThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "ForceUpdateThreats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.DebugDump
// (Native, Public, BlueprintCallable)
// Parameters:

void UValThreatComponent::DebugDump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "DebugDump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.ClearGameplayTagEvents
// (Final, Native, Protected)
// Parameters:
// class AActor*                      PreviousTarget                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::ClearGameplayTagEvents(class AActor* PreviousTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "ClearGameplayTagEvents");

	Params::UValThreatComponent_ClearGameplayTagEvents_Params Parms{};

	Parms.PreviousTarget = PreviousTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.BindGameplayTagEvents
// (Final, Native, Protected)
// Parameters:
// class AActor*                      NewTarget                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::BindGameplayTagEvents(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "BindGameplayTagEvents");

	Params::UValThreatComponent_BindGameplayTagEvents_Params Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.AddOrUpdateThreatSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsSeen                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::AddOrUpdateThreatSeen(class AActor* ThreatActor, bool bIsSeen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "AddOrUpdateThreatSeen");

	Params::UValThreatComponent_AddOrUpdateThreatSeen_Params Parms{};

	Parms.ThreatActor = ThreatActor;
	Parms.bIsSeen = bIsSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.AddOrUpdateThreatHeard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsHeard                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::AddOrUpdateThreatHeard(class AActor* ThreatActor, bool bIsHeard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "AddOrUpdateThreatHeard");

	Params::UValThreatComponent_AddOrUpdateThreatHeard_Params Parms{};

	Parms.ThreatActor = ThreatActor;
	Parms.bIsHeard = bIsHeard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.AddOrUpdateThreatFlashlighting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::AddOrUpdateThreatFlashlighting(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "AddOrUpdateThreatFlashlighting");

	Params::UValThreatComponent_AddOrUpdateThreatFlashlighting_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValThreatComponent.AddOrUpdateThreatDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageAmount                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValThreatComponent::AddOrUpdateThreatDamage(class AActor* ThreatActor, float DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValThreatComponent", "AddOrUpdateThreatDamage");

	Params::UValThreatComponent_AddOrUpdateThreatDamage_Params Parms{};

	Parms.ThreatActor = ThreatActor;
	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBossThreatComponent
// (None)

class UClass* UValBossThreatComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBossThreatComponent");

	return Clss;
}


// ValBossThreatComponent Valhalla.Default__ValBossThreatComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBossThreatComponent* UValBossThreatComponent::GetDefaultObj()
{
	static class UValBossThreatComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBossThreatComponent*>(UValBossThreatComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBossThreatComponent.HasOnlyUntargetableEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBossThreatComponent::HasOnlyUntargetableEnemies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBossThreatComponent", "HasOnlyUntargetableEnemies");

	Params::UValBossThreatComponent_HasOnlyUntargetableEnemies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBossThreatComponent.AddThreat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ThreatActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValBossThreatComponent::AddThreat(class AActor* ThreatActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBossThreatComponent", "AddThreat");

	Params::UValBossThreatComponent_AddThreat_Params Parms{};

	Parms.ThreatActor = ThreatActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBotData
// (None)

class UClass* UValBotData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotData");

	return Clss;
}


// ValBotData Valhalla.Default__ValBotData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotData* UValBotData::GetDefaultObj()
{
	static class UValBotData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotData*>(UValBotData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBotData.ShouldUsePredictiveAimingForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFoundDefinition                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBotData::ShouldUsePredictiveAimingForSlot(const struct GameplayTags_GameplayTag& EquipSlot, bool* bFoundDefinition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "ShouldUsePredictiveAimingForSlot");

	Params::UValBotData_ShouldUsePredictiveAimingForSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (bFoundDefinition != nullptr)
		*bFoundDefinition = Parms.bFoundDefinition;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotData.HasFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    TagToCheck                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bExactMatch                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBotData::HasFlag(const struct GameplayTags_GameplayTag& TagToCheck, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "HasFlag");

	Params::UValBotData_HasFlag_Params Parms{};

	Parms.TagToCheck = TagToCheck;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotData.GetSpreadOverrideForSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect> ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEffect> UValBotData::GetSpreadOverrideForSlot(const struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "GetSpreadOverrideForSlot");

	Params::UValBotData_GetSpreadOverrideForSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotData.GetIdealCombatRangeMin
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBotData::GetIdealCombatRangeMin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "GetIdealCombatRangeMin");

	Params::UValBotData_GetIdealCombatRangeMin_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotData.GetIdealCombatRangeMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValBotData::GetIdealCombatRangeMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "GetIdealCombatRangeMax");

	Params::UValBotData_GetIdealCombatRangeMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotData.GetFlags
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTagContainerReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTagContainer UValBotData::GetFlags()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotData", "GetFlags");

	Params::UValBotData_GetFlags_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValBotTierData
// (None)

class UClass* UValBotTierData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotTierData");

	return Clss;
}


// ValBotTierData Valhalla.Default__ValBotTierData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotTierData* UValBotTierData::GetDefaultObj()
{
	static class UValBotTierData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotTierData*>(UValBotTierData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBotTierData.SelectAffix
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_RandomStream    Stream                                                           (Parm, OutParm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UGameplayEffect>ReturnValue                                                      (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UGameplayEffect> UValBotTierData::SelectAffix(struct CoreUObject_RandomStream* Stream)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotTierData", "SelectAffix");

	Params::UValBotTierData_SelectAffix_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Stream != nullptr)
		*Stream = std::move(Parms.Stream);

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotTierData.GetBotClassData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UValBotData>  ReturnValue                                                      (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UValBotData> UValBotTierData::GetBotClassData(struct GameplayTags_GameplayTag& Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotTierData", "GetBotClassData");

	Params::UValBotTierData_GetBotClassData_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValBotPersonality
// (None)

class UClass* UValBotPersonality::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotPersonality");

	return Clss;
}


// ValBotPersonality Valhalla.Default__ValBotPersonality
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotPersonality* UValBotPersonality::GetDefaultObj()
{
	static class UValBotPersonality* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotPersonality*>(UValBotPersonality::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBotSpawner
// (Actor)

class UClass* AValBotSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotSpawner");

	return Clss;
}


// ValBotSpawner Valhalla.Default__ValBotSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AValBotSpawner* AValBotSpawner::GetDefaultObj()
{
	static class AValBotSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AValBotSpawner*>(AValBotSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBotSpawner.Spawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValBotWaveConfig*           InBotSpawnData                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TriggerActor                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValBotSpawnVolume*          OwningVolume                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValBotSpawner::Spawn(class UValBotWaveConfig* InBotSpawnData, class AActor* TriggerActor, class AValBotSpawnVolume* OwningVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawner", "Spawn");

	Params::AValBotSpawner_Spawn_Params Parms{};

	Parms.InBotSpawnData = InBotSpawnData;
	Parms.TriggerActor = TriggerActor;
	Parms.OwningVolume = OwningVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawner.OnBotSpawned
// (Final, Native, Protected)
// Parameters:
// class UBotInitData*                BotInitData                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawner::OnBotSpawned(class UBotInitData* BotInitData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawner", "OnBotSpawned");

	Params::AValBotSpawner_OnBotSpawned_Params Parms{};

	Parms.BotInitData = BotInitData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawner.HandleSpawnUX
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBotInitData*                BotInitData                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawner::HandleSpawnUX(class UBotInitData* BotInitData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawner", "HandleSpawnUX");

	Params::AValBotSpawner_HandleSpawnUX_Params Parms{};

	Parms.BotInitData = BotInitData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValBotSpawner.HandleActivatedUX
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValBotSpawner::HandleActivatedUX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawner", "HandleActivatedUX");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValBotSpawner.ClientHandleActivatedUX
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AValBotSpawner::ClientHandleActivatedUX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawner", "ClientHandleActivatedUX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBotSpawnerBlueprintLibrary
// (None)

class UClass* UValBotSpawnerBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotSpawnerBlueprintLibrary");

	return Clss;
}


// ValBotSpawnerBlueprintLibrary Valhalla.Default__ValBotSpawnerBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotSpawnerBlueprintLibrary* UValBotSpawnerBlueprintLibrary::GetDefaultObj()
{
	static class UValBotSpawnerBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotSpawnerBlueprintLibrary*>(UValBotSpawnerBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBotSpawnerBlueprintLibrary.SpawnAtNearestBotSpawnerWithChance
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Chance                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotWaveConfig*           Config                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TriggerActor                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValUtopiaConstructor*       Constructor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValBotSpawnVolume*          OwningVolume                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBotSpawnerBlueprintLibrary::SpawnAtNearestBotSpawnerWithChance(class UObject* WorldContextObject, const struct CoreUObject_Vector& Location, float Chance, class UValBotWaveConfig* Config, class AActor* TriggerActor, class AValUtopiaConstructor* Constructor, class AValBotSpawnVolume* OwningVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnerBlueprintLibrary", "SpawnAtNearestBotSpawnerWithChance");

	Params::UValBotSpawnerBlueprintLibrary_SpawnAtNearestBotSpawnerWithChance_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = Location;
	Parms.Chance = Chance;
	Parms.Config = Config;
	Parms.TriggerActor = TriggerActor;
	Parms.Constructor = Constructor;
	Parms.OwningVolume = OwningVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnerBlueprintLibrary.SpawnAtNearestBotSpawner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotWaveConfig*           Config                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TriggerActor                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValUtopiaConstructor*       Constructor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValBotSpawnVolume*          OwningVolume                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValBotSpawnerBlueprintLibrary::SpawnAtNearestBotSpawner(class UObject* WorldContextObject, const struct CoreUObject_Vector& Location, class UValBotWaveConfig* Config, class AActor* TriggerActor, class AValUtopiaConstructor* Constructor, class AValBotSpawnVolume* OwningVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnerBlueprintLibrary", "SpawnAtNearestBotSpawner");

	Params::UValBotSpawnerBlueprintLibrary_SpawnAtNearestBotSpawner_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = Location;
	Parms.Config = Config;
	Parms.TriggerActor = TriggerActor;
	Parms.Constructor = Constructor;
	Parms.OwningVolume = OwningVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnerBlueprintLibrary.GetNearestBotSpawner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValUtopiaConstructor*       Constructor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDistance                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValBotSpawner*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValBotSpawner* UValBotSpawnerBlueprintLibrary::GetNearestBotSpawner(class UObject* WorldContextObject, const struct CoreUObject_Vector& Location, class AValUtopiaConstructor* Constructor, float MaxDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnerBlueprintLibrary", "GetNearestBotSpawner");

	Params::UValBotSpawnerBlueprintLibrary_GetNearestBotSpawner_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = Location;
	Parms.Constructor = Constructor;
	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.BotInitData
// (None)

class UClass* UBotInitData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("BotInitData");

	return Clss;
}


// BotInitData Valhalla.Default__BotInitData
// (Public, ClassDefaultObject, ArchetypeObject)

class UBotInitData* UBotInitData::GetDefaultObj()
{
	static class UBotInitData* Default = nullptr;

	if (!Default)
		Default = static_cast<UBotInitData*>(UBotInitData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.BotInitData.SpawnBot
// (Final, Native, Protected)
// Parameters:

void UBotInitData::SpawnBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "SpawnBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.BotInitData.OnPrecacheComplete
// (Final, Native, Protected)
// Parameters:

void UBotInitData::OnPrecacheComplete()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "OnPrecacheComplete");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.BotInitData.OnBotDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBotInitData::OnBotDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "OnBotDied");

	Params::UBotInitData_OnBotDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.BotInitData.IsPendingSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBotInitData::IsPendingSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "IsPendingSpawn");

	Params::UBotInitData_IsPendingSpawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.BotInitData.IsDespawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBotInitData::IsDespawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "IsDespawned");

	Params::UBotInitData_IsDespawned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.BotInitData.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBotInitData::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "IsAlive");

	Params::UBotInitData_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.BotInitData.HasSpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBotInitData::HasSpawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "HasSpawned");

	Params::UBotInitData_HasSpawned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.BotInitData.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UBotInitData::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "GetCharacter");

	Params::UBotInitData_GetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.BotInitData.FinishPrecache
// (Final, Native, Protected)
// Parameters:

void UBotInitData::FinishPrecache()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("BotInitData", "FinishPrecache");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBotSpawnVolume
// (Actor)

class UClass* AValBotSpawnVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotSpawnVolume");

	return Clss;
}


// ValBotSpawnVolume Valhalla.Default__ValBotSpawnVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValBotSpawnVolume* AValBotSpawnVolume::GetDefaultObj()
{
	static class AValBotSpawnVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValBotSpawnVolume*>(AValBotSpawnVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBotSpawnVolume.TriggerAlarm
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValBotSpawnVolume::TriggerAlarm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "TriggerAlarm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.SpawnStreamedBots
// (Final, Native, Protected)
// Parameters:

void AValBotSpawnVolume::SpawnStreamedBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "SpawnStreamedBots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.SetPatrolForOverlappingBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Bot                                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::SetPatrolForOverlappingBot(class AValCharacter* Bot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "SetPatrolForOverlappingBot");

	Params::AValBotSpawnVolume_SetPatrolForOverlappingBot_Params Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.SetOwningConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValUtopiaConstructor*       InConstructor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::SetOwningConstructor(class AValUtopiaConstructor* InConstructor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "SetOwningConstructor");

	Params::AValBotSpawnVolume_SetOwningConstructor_Params Parms{};

	Parms.InConstructor = InConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.OnShapeComponentOverlapped
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::OnShapeComponentOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "OnShapeComponentOverlapped");

	Params::AValBotSpawnVolume_OnShapeComponentOverlapped_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.OnShapeComponentEndOverlapped
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::OnShapeComponentEndOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "OnShapeComponentEndOverlapped");

	Params::AValBotSpawnVolume_OnShapeComponentEndOverlapped_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.OnBotDataAvailable
// (Native, Protected)
// Parameters:

void AValBotSpawnVolume::OnBotDataAvailable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "OnBotDataAvailable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBotSpawnVolume.HaveBotsSpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValBotSpawnVolume::HaveBotsSpawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "HaveBotsSpawned");

	Params::AValBotSpawnVolume_HaveBotsSpawned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnVolume.GetSpawnedBots
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValCharacter*>       OutCharacters                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::GetSpawnedBots(TArray<class AValCharacter*>* OutCharacters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "GetSpawnedBots");

	Params::AValBotSpawnVolume_GetSpawnedBots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutCharacters != nullptr)
		*OutCharacters = std::move(Parms.OutCharacters);

}


// Function Valhalla.ValBotSpawnVolume.GetSafeSpawns
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>OutMap                                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::GetSafeSpawns(TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>& OutMap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "GetSafeSpawns");

	Params::AValBotSpawnVolume_GetSafeSpawns_Params Parms{};

	Parms.OutMap = OutMap;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValBotSpawnVolume.GetPatrolPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct CoreUObject_Vector>  ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct CoreUObject_Vector> AValBotSpawnVolume::GetPatrolPoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "GetPatrolPoints");

	Params::AValBotSpawnVolume_GetPatrolPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnVolume.GetOwningConstructor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValUtopiaConstructor*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValUtopiaConstructor* AValBotSpawnVolume::GetOwningConstructor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "GetOwningConstructor");

	Params::AValBotSpawnVolume_GetOwningConstructor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnVolume.GetBotSpawnData
// (Final, Native, Public)
// Parameters:
// class UValBotTierData*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBotTierData* AValBotSpawnVolume::GetBotSpawnData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "GetBotSpawnData");

	Params::AValBotSpawnVolume_GetBotSpawnData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBotSpawnVolume.FinishDestroyBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Bot                                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBotSpawnVolume::FinishDestroyBot(class AValCharacter* Bot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBotSpawnVolume", "FinishDestroyBot");

	Params::AValBotSpawnVolume_FinishDestroyBot_Params Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBTComposite_ParallelSequence
// (None)

class UClass* UValBTComposite_ParallelSequence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTComposite_ParallelSequence");

	return Clss;
}


// ValBTComposite_ParallelSequence Valhalla.Default__ValBTComposite_ParallelSequence
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTComposite_ParallelSequence* UValBTComposite_ParallelSequence::GetDefaultObj()
{
	static class UValBTComposite_ParallelSequence* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTComposite_ParallelSequence*>(UValBTComposite_ParallelSequence::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTComposite_Random
// (None)

class UClass* UValBTComposite_Random::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTComposite_Random");

	return Clss;
}


// ValBTComposite_Random Valhalla.Default__ValBTComposite_Random
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTComposite_Random* UValBTComposite_Random::GetDefaultObj()
{
	static class UValBTComposite_Random* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTComposite_Random*>(UValBTComposite_Random::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTComposite_Random_Selector
// (None)

class UClass* UValBTComposite_Random_Selector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTComposite_Random_Selector");

	return Clss;
}


// ValBTComposite_Random_Selector Valhalla.Default__ValBTComposite_Random_Selector
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTComposite_Random_Selector* UValBTComposite_Random_Selector::GetDefaultObj()
{
	static class UValBTComposite_Random_Selector* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTComposite_Random_Selector*>(UValBTComposite_Random_Selector::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTComposite_Random_Sequence
// (None)

class UClass* UValBTComposite_Random_Sequence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTComposite_Random_Sequence");

	return Clss;
}


// ValBTComposite_Random_Sequence Valhalla.Default__ValBTComposite_Random_Sequence
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTComposite_Random_Sequence* UValBTComposite_Random_Sequence::GetDefaultObj()
{
	static class UValBTComposite_Random_Sequence* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTComposite_Random_Sequence*>(UValBTComposite_Random_Sequence::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTDecorator_ActorHasTags
// (None)

class UClass* UValBTDecorator_ActorHasTags::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTDecorator_ActorHasTags");

	return Clss;
}


// ValBTDecorator_ActorHasTags Valhalla.Default__ValBTDecorator_ActorHasTags
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTDecorator_ActorHasTags* UValBTDecorator_ActorHasTags::GetDefaultObj()
{
	static class UValBTDecorator_ActorHasTags* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTDecorator_ActorHasTags*>(UValBTDecorator_ActorHasTags::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTDecorator_IsInShip
// (None)

class UClass* UValBTDecorator_IsInShip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTDecorator_IsInShip");

	return Clss;
}


// ValBTDecorator_IsInShip Valhalla.Default__ValBTDecorator_IsInShip
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTDecorator_IsInShip* UValBTDecorator_IsInShip::GetDefaultObj()
{
	static class UValBTDecorator_IsInShip* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTDecorator_IsInShip*>(UValBTDecorator_IsInShip::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTFunctionLibrary
// (None)

class UClass* UValBTFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTFunctionLibrary");

	return Clss;
}


// ValBTFunctionLibrary Valhalla.Default__ValBTFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTFunctionLibrary* UValBTFunctionLibrary::GetDefaultObj()
{
	static class UValBTFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTFunctionLibrary*>(UValBTFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBTFunctionLibrary.GetLocationFromBlackboardValue
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBTNode*                     NodeOwner                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct AIModule_BlackboardKeySelectorKey                                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValBTFunctionLibrary::GetLocationFromBlackboardValue(class UBTNode* NodeOwner, struct AIModule_BlackboardKeySelector& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBTFunctionLibrary", "GetLocationFromBlackboardValue");

	Params::UValBTFunctionLibrary_GetLocationFromBlackboardValue_Params Parms{};

	Parms.NodeOwner = NodeOwner;
	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValBTService_ApplyTempEffect
// (None)

class UClass* UValBTService_ApplyTempEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTService_ApplyTempEffect");

	return Clss;
}


// ValBTService_ApplyTempEffect Valhalla.Default__ValBTService_ApplyTempEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTService_ApplyTempEffect* UValBTService_ApplyTempEffect::GetDefaultObj()
{
	static class UValBTService_ApplyTempEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTService_ApplyTempEffect*>(UValBTService_ApplyTempEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_AlwaysReturn
// (None)

class UClass* UValBTTask_AlwaysReturn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_AlwaysReturn");

	return Clss;
}


// ValBTTask_AlwaysReturn Valhalla.Default__ValBTTask_AlwaysReturn
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_AlwaysReturn* UValBTTask_AlwaysReturn::GetDefaultObj()
{
	static class UValBTTask_AlwaysReturn* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_AlwaysReturn*>(UValBTTask_AlwaysReturn::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_ApplyEffect
// (None)

class UClass* UValBTTask_ApplyEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_ApplyEffect");

	return Clss;
}


// ValBTTask_ApplyEffect Valhalla.Default__ValBTTask_ApplyEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_ApplyEffect* UValBTTask_ApplyEffect::GetDefaultObj()
{
	static class UValBTTask_ApplyEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_ApplyEffect*>(UValBTTask_ApplyEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_ClearBlackboardKey
// (None)

class UClass* UValBTTask_ClearBlackboardKey::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_ClearBlackboardKey");

	return Clss;
}


// ValBTTask_ClearBlackboardKey Valhalla.Default__ValBTTask_ClearBlackboardKey
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_ClearBlackboardKey* UValBTTask_ClearBlackboardKey::GetDefaultObj()
{
	static class UValBTTask_ClearBlackboardKey* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_ClearBlackboardKey*>(UValBTTask_ClearBlackboardKey::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_EnterPOI
// (None)

class UClass* UValBTTask_EnterPOI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_EnterPOI");

	return Clss;
}


// ValBTTask_EnterPOI Valhalla.Default__ValBTTask_EnterPOI
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_EnterPOI* UValBTTask_EnterPOI::GetDefaultObj()
{
	static class UValBTTask_EnterPOI* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_EnterPOI*>(UValBTTask_EnterPOI::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_SetBoolKey
// (None)

class UClass* UValBTTask_SetBoolKey::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_SetBoolKey");

	return Clss;
}


// ValBTTask_SetBoolKey Valhalla.Default__ValBTTask_SetBoolKey
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_SetBoolKey* UValBTTask_SetBoolKey::GetDefaultObj()
{
	static class UValBTTask_SetBoolKey* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_SetBoolKey*>(UValBTTask_SetBoolKey::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_SetDirective
// (None)

class UClass* UValBTTask_SetDirective::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_SetDirective");

	return Clss;
}


// ValBTTask_SetDirective Valhalla.Default__ValBTTask_SetDirective
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_SetDirective* UValBTTask_SetDirective::GetDefaultObj()
{
	static class UValBTTask_SetDirective* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_SetDirective*>(UValBTTask_SetDirective::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBTTask_SetPatrolLocation
// (None)

class UClass* UValBTTask_SetPatrolLocation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBTTask_SetPatrolLocation");

	return Clss;
}


// ValBTTask_SetPatrolLocation Valhalla.Default__ValBTTask_SetPatrolLocation
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBTTask_SetPatrolLocation* UValBTTask_SetPatrolLocation::GetDefaultObj()
{
	static class UValBTTask_SetPatrolLocation* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBTTask_SetPatrolLocation*>(UValBTTask_SetPatrolLocation::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBuildingPOI
// (None)

class UClass* IValBuildingPOI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBuildingPOI");

	return Clss;
}


// ValBuildingPOI Valhalla.Default__ValBuildingPOI
// (Public, ClassDefaultObject, ArchetypeObject)

class IValBuildingPOI* IValBuildingPOI::GetDefaultObj()
{
	static class IValBuildingPOI* Default = nullptr;

	if (!Default)
		Default = static_cast<IValBuildingPOI*>(IValBuildingPOI::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBuildingPOI.GetBuildingType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// enum class EBuildingType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EBuildingType IValBuildingPOI::GetBuildingType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBuildingPOI", "GetBuildingType");

	Params::IValBuildingPOI_GetBuildingType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValCallToActionManager
// (Actor)

class UClass* AValCallToActionManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCallToActionManager");

	return Clss;
}


// ValCallToActionManager Valhalla.Default__ValCallToActionManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValCallToActionManager* AValCallToActionManager::GetDefaultObj()
{
	static class AValCallToActionManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValCallToActionManager*>(AValCallToActionManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCallToActionManager.SaveActiveCTAsToGameUserSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCallToActionManager::SaveActiveCTAsToGameUserSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "SaveActiveCTAsToGameUserSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.RemoveMasteryAbilityCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ViewdItemId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerProperty         MasteryType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Unequpped                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::RemoveMasteryAbilityCTA(int32 ViewdItemId, enum class EPlayerProperty MasteryType, bool Unequpped)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "RemoveMasteryAbilityCTA");

	Params::AValCallToActionManager_RemoveMasteryAbilityCTA_Params Parms{};

	Parms.ViewdItemId = ViewdItemId;
	Parms.MasteryType = MasteryType;
	Parms.Unequpped = Unequpped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.RemoveActivePerkCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ViewedItemId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::RemoveActivePerkCTA(int32 ViewedItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "RemoveActivePerkCTA");

	Params::AValCallToActionManager_RemoveActivePerkCTA_Params Parms{};

	Parms.ViewedItemId = ViewedItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.RemoveActiveAbilityCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ViewedItemId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::RemoveActiveAbilityCTA(int32 ViewedItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "RemoveActiveAbilityCTA");

	Params::AValCallToActionManager_RemoveActiveAbilityCTA_Params Parms{};

	Parms.ViewedItemId = ViewedItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.PopulateManagerFromGameUserSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCallToActionManager::PopulateManagerFromGameUserSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "PopulateManagerFromGameUserSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.HasActivePerkCTAForItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ItemToCheck                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCallToActionManager::HasActivePerkCTAForItemId(int32 ItemToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "HasActivePerkCTAForItemId");

	Params::AValCallToActionManager_HasActivePerkCTAForItemId_Params Parms{};

	Parms.ItemToCheck = ItemToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCallToActionManager.HasActivePerkCTA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCallToActionManager::HasActivePerkCTA()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "HasActivePerkCTA");

	Params::AValCallToActionManager_HasActivePerkCTA_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCallToActionManager.HasActiveAbilityCTAForItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ItemToCheck                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCallToActionManager::HasActiveAbilityCTAForItemId(int32 ItemToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "HasActiveAbilityCTAForItemId");

	Params::AValCallToActionManager_HasActiveAbilityCTAForItemId_Params Parms{};

	Parms.ItemToCheck = ItemToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCallToActionManager.HasActiveAbilityCTA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCallToActionManager::HasActiveAbilityCTA()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "HasActiveAbilityCTA");

	Params::AValCallToActionManager_HasActiveAbilityCTA_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCallToActionManager.ClearAllActiveCTAs
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCallToActionManager::ClearAllActiveCTAs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "ClearAllActiveCTAs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.AddActivePerkCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              UnviewedItemId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::AddActivePerkCTA(int32 UnviewedItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "AddActivePerkCTA");

	Params::AValCallToActionManager_AddActivePerkCTA_Params Parms{};

	Parms.UnviewedItemId = UnviewedItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.AddActiveMasteryCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              UnviewedItemId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerProperty         MasteryType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::AddActiveMasteryCTA(int32 UnviewedItemId, enum class EPlayerProperty MasteryType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "AddActiveMasteryCTA");

	Params::AValCallToActionManager_AddActiveMasteryCTA_Params Parms{};

	Parms.UnviewedItemId = UnviewedItemId;
	Parms.MasteryType = MasteryType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCallToActionManager.AddActiveAbilityCTA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              UnviewedItemId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCallToActionManager::AddActiveAbilityCTA(int32 UnviewedItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCallToActionManager", "AddActiveAbilityCTA");

	Params::AValCallToActionManager_AddActiveAbilityCTA_Params Parms{};

	Parms.UnviewedItemId = UnviewedItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCameraHitFeedbackActor
// (Actor)

class UClass* AValCameraHitFeedbackActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCameraHitFeedbackActor");

	return Clss;
}


// ValCameraHitFeedbackActor Valhalla.Default__ValCameraHitFeedbackActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValCameraHitFeedbackActor* AValCameraHitFeedbackActor::GetDefaultObj()
{
	static class AValCameraHitFeedbackActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValCameraHitFeedbackActor*>(AValCameraHitFeedbackActor::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCameraModifier
// (None)

class UClass* UValCameraModifier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCameraModifier");

	return Clss;
}


// ValCameraModifier Valhalla.Default__ValCameraModifier
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCameraModifier* UValCameraModifier::GetDefaultObj()
{
	static class UValCameraModifier* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCameraModifier*>(UValCameraModifier::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCameraModifier.SetMaterials
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct Engine_WeightedBlendable>InMaterials                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValCameraModifier::SetMaterials(TArray<struct Engine_WeightedBlendable>& InMaterials)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCameraModifier", "SetMaterials");

	Params::UValCameraModifier_SetMaterials_Params Parms{};

	Parms.InMaterials = InMaterials;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCameraModifier.OnModifierDisabled
// (Event, Public, BlueprintEvent)
// Parameters:

void UValCameraModifier::OnModifierDisabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCameraModifier", "OnModifierDisabled");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCameraModifier.OnEnabled
// (Event, Public, BlueprintEvent)
// Parameters:

void UValCameraModifier::OnEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCameraModifier", "OnEnabled");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCameraModifier.OnAddedToCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*        Camera                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCameraModifier::OnAddedToCamera(class APlayerCameraManager* Camera)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCameraModifier", "OnAddedToCamera");

	Params::UValCameraModifier_OnAddedToCamera_Params Parms{};

	Parms.Camera = Camera;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValCameraModifier_CameraOnlyCameraShake
// (None)

class UClass* UValCameraModifier_CameraOnlyCameraShake::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCameraModifier_CameraOnlyCameraShake");

	return Clss;
}


// ValCameraModifier_CameraOnlyCameraShake Valhalla.Default__ValCameraModifier_CameraOnlyCameraShake
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCameraModifier_CameraOnlyCameraShake* UValCameraModifier_CameraOnlyCameraShake::GetDefaultObj()
{
	static class UValCameraModifier_CameraOnlyCameraShake* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCameraModifier_CameraOnlyCameraShake*>(UValCameraModifier_CameraOnlyCameraShake::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCameraOnlyCameraShakeBase
// (None)

class UClass* UValCameraOnlyCameraShakeBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCameraOnlyCameraShakeBase");

	return Clss;
}


// ValCameraOnlyCameraShakeBase Valhalla.Default__ValCameraOnlyCameraShakeBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCameraOnlyCameraShakeBase* UValCameraOnlyCameraShakeBase::GetDefaultObj()
{
	static class UValCameraOnlyCameraShakeBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCameraOnlyCameraShakeBase*>(UValCameraOnlyCameraShakeBase::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCellDestructionConfig
// (None)

class UClass* UValCellDestructionConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCellDestructionConfig");

	return Clss;
}


// ValCellDestructionConfig Valhalla.Default__ValCellDestructionConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCellDestructionConfig* UValCellDestructionConfig::GetDefaultObj()
{
	static class UValCellDestructionConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCellDestructionConfig*>(UValCellDestructionConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterBase
// (Actor, Pawn)

class UClass* AValCharacterBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterBase");

	return Clss;
}


// ValCharacterBase Valhalla.Default__ValCharacterBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValCharacterBase* AValCharacterBase::GetDefaultObj()
{
	static class AValCharacterBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValCharacterBase*>(AValCharacterBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterBase.OnTeamChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacterBase::OnTeamChanged(int32 OldTeamId, int32 NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterBase", "OnTeamChanged");

	Params::AValCharacterBase_OnTeamChanged_Params Parms{};

	Parms.OldTeamId = OldTeamId;
	Parms.NewTeamId = NewTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCharacterFootprintComponent
// (None)

class UClass* UValCharacterFootprintComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterFootprintComponent");

	return Clss;
}


// ValCharacterFootprintComponent Valhalla.Default__ValCharacterFootprintComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterFootprintComponent* UValCharacterFootprintComponent::GetDefaultObj()
{
	static class UValCharacterFootprintComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterFootprintComponent*>(UValCharacterFootprintComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterFootprintComponent.SpawnNewFootprint
// (Final, Native, Protected)
// Parameters:

void UValCharacterFootprintComponent::SpawnNewFootprint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterFootprintComponent", "SpawnNewFootprint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterFootprintComponent.CanSpawnNewFootprint
// (Final, Native, Protected)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterFootprintComponent::CanSpawnNewFootprint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterFootprintComponent", "CanSpawnNewFootprint");

	Params::UValCharacterFootprintComponent_CanSpawnNewFootprint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValCharacterMovementComponent
// (None)

class UClass* UValCharacterMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterMovementComponent");

	return Clss;
}


// ValCharacterMovementComponent Valhalla.Default__ValCharacterMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterMovementComponent* UValCharacterMovementComponent::GetDefaultObj()
{
	static class UValCharacterMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterMovementComponent*>(UValCharacterMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterMovementComponent.ShouldSpeedometerBeVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::ShouldSpeedometerBeVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "ShouldSpeedometerBeVisible");

	Params::UValCharacterMovementComponent_ShouldSpeedometerBeVisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.SetSkiInitialImpulseLockoutTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetSkiInitialImpulseLockoutTime(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetSkiInitialImpulseLockoutTime");

	Params::UValCharacterMovementComponent_SetSkiInitialImpulseLockoutTime_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetPrevJetpackThrustMode
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterMovementComponent::SetPrevJetpackThrustMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetPrevJetpackThrustMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetNextJetpackThrustMode
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterMovementComponent::SetNextJetpackThrustMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetNextJetpackThrustMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetJetpackThrustMode
// (Native, Public, BlueprintCallable)
// Parameters:
// enum class EJetpackThrustMode      NewJetpackThrustMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetJetpackThrustMode(enum class EJetpackThrustMode NewJetpackThrustMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetJetpackThrustMode");

	Params::UValCharacterMovementComponent_SetJetpackThrustMode_Params Parms{};

	Parms.NewJetpackThrustMode = NewJetpackThrustMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetIsJetpackActive
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bActive                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetIsJetpackActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetIsJetpackActive");

	Params::UValCharacterMovementComponent_SetIsJetpackActive_Params Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetForceMaxAccel
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ForceMaxAccel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::SetForceMaxAccel(bool ForceMaxAccel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetForceMaxAccel");

	Params::UValCharacterMovementComponent_SetForceMaxAccel_Params Parms{};

	Parms.ForceMaxAccel = ForceMaxAccel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.SetCurrentForceField
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValForceField*              NewForceField                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetCurrentForceField(class AValForceField* NewForceField)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetCurrentForceField");

	Params::UValCharacterMovementComponent_SetCurrentForceField_Params Parms{};

	Parms.NewForceField = NewForceField;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetAutoSprint
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetAutoSprint(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetAutoSprint");

	Params::UValCharacterMovementComponent_SetAutoSprint_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.SetAimingMaxSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::SetAimingMaxSpeedMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "SetAimingMaxSpeedMultiplier");

	Params::UValCharacterMovementComponent_SetAimingMaxSpeedMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.OnSettingsChanged
// (Final, Native, Protected)
// Parameters:

void UValCharacterMovementComponent::OnSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "OnSettingsChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.IsVaulting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsVaulting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsVaulting");

	Params::UValCharacterMovementComponent_IsVaulting_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSprintingForLocalView
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSprintingForLocalView()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSprintingForLocalView");

	Params::UValCharacterMovementComponent_IsSprintingForLocalView_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSprinting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSprinting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSprinting");

	Params::UValCharacterMovementComponent_IsSprinting_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSkydiving
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSkydiving()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSkydiving");

	Params::UValCharacterMovementComponent_IsSkydiving_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSkydiveLanding
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSkydiveLanding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSkydiveLanding");

	Params::UValCharacterMovementComponent_IsSkydiveLanding_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSkiing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSkiing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSkiing");

	Params::UValCharacterMovementComponent_IsSkiing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSkiIndicatorEnabled
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSkiIndicatorEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSkiIndicatorEnabled");

	Params::UValCharacterMovementComponent_IsSkiIndicatorEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsSkiBoostAvailable
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               bJustLanded                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsSkiBoostAvailable(bool bJustLanded)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsSkiBoostAvailable");

	Params::UValCharacterMovementComponent_IsSkiBoostAvailable_Params Parms{};

	Parms.bJustLanded = bJustLanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsJetpacking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsJetpacking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsJetpacking");

	Params::UValCharacterMovementComponent_IsJetpacking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.IsExtracting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::IsExtracting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "IsExtracting");

	Params::UValCharacterMovementComponent_IsExtracting_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.InterruptSprint
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bRestoreSprint                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::InterruptSprint(bool bRestoreSprint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "InterruptSprint");

	Params::UValCharacterMovementComponent_InterruptSprint_Params Parms{};

	Parms.bRestoreSprint = bRestoreSprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.GetUpperBoundSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterMovementComponent::GetUpperBoundSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetUpperBoundSpeed");

	Params::UValCharacterMovementComponent_GetUpperBoundSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetJetpackThrustMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EJetpackThrustMode      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EJetpackThrustMode UValCharacterMovementComponent::GetJetpackThrustMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetJetpackThrustMode");

	Params::UValCharacterMovementComponent_GetJetpackThrustMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetJetpackAccelerationMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterMovementComponent::GetJetpackAccelerationMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetJetpackAccelerationMultiplier");

	Params::UValCharacterMovementComponent_GetJetpackAccelerationMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetForceMaxAccel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::GetForceMaxAccel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetForceMaxAccel");

	Params::UValCharacterMovementComponent_GetForceMaxAccel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetCurrentSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterMovementComponent::GetCurrentSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetCurrentSpeed");

	Params::UValCharacterMovementComponent_GetCurrentSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetCurrentForceField
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValForceField*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValForceField* UValCharacterMovementComponent::GetCurrentForceField()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetCurrentForceField");

	Params::UValCharacterMovementComponent_GetCurrentForceField_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.GetAutoSprint
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterMovementComponent::GetAutoSprint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "GetAutoSprint");

	Params::UValCharacterMovementComponent_GetAutoSprint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterMovementComponent.ApplyJumpPadForce
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                              ForwardVelocity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VelocityZ                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          JumpPadUpVector                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::ApplyJumpPadForce(float ForwardVelocity, float VelocityZ, struct CoreUObject_Vector& JumpPadUpVector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "ApplyJumpPadForce");

	Params::UValCharacterMovementComponent_ApplyJumpPadForce_Params Parms{};

	Parms.ForwardVelocity = ForwardVelocity;
	Parms.VelocityZ = VelocityZ;
	Parms.JumpPadUpVector = JumpPadUpVector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.ApplyInitialJetpackThrust
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          ThrustVector                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::ApplyInitialJetpackThrust(struct CoreUObject_Vector& ThrustVector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "ApplyInitialJetpackThrust");

	Params::UValCharacterMovementComponent_ApplyInitialJetpackThrust_Params Parms{};

	Parms.ThrustVector = ThrustVector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterMovementComponent.AddForceAccelerationDirection
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterMovementComponent::AddForceAccelerationDirection(const struct CoreUObject_Vector& Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterMovementComponent", "AddForceAccelerationDirection");

	Params::UValCharacterMovementComponent_AddForceAccelerationDirection_Params Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCharacterOverlayComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UValCharacterOverlayComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterOverlayComponent");

	return Clss;
}


// ValCharacterOverlayComponent Valhalla.Default__ValCharacterOverlayComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterOverlayComponent* UValCharacterOverlayComponent::GetDefaultObj()
{
	static class UValCharacterOverlayComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterOverlayComponent*>(UValCharacterOverlayComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterOverlayComponent.UpdateVisibility
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterOverlayComponent::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlayComponent", "UpdateVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlayComponent.GetOverlayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValCharacterOverlay*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValCharacterOverlay* UValCharacterOverlayComponent::GetOverlayWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlayComponent", "GetOverlayWidget");

	Params::UValCharacterOverlayComponent_GetOverlayWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValCharacterOverlay
// (None)

class UClass* UValCharacterOverlay::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterOverlay");

	return Clss;
}


// ValCharacterOverlay Valhalla.Default__ValCharacterOverlay
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterOverlay* UValCharacterOverlay::GetDefaultObj()
{
	static class UValCharacterOverlay* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterOverlay*>(UValCharacterOverlay::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterOverlay.SetOwningWaypoint
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValWaypoint*                NewWaypoint                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetOwningWaypoint(class AValWaypoint* NewWaypoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetOwningWaypoint");

	Params::UValCharacterOverlay_SetOwningWaypoint_Params Parms{};

	Parms.NewWaypoint = NewWaypoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.SetOwningObjective
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValAttributeActor*          NewObjective                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetOwningObjective(class AValAttributeActor* NewObjective)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetOwningObjective");

	Params::UValCharacterOverlay_SetOwningObjective_Params Parms{};

	Parms.NewObjective = NewObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.SetOwningIndicator
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValIndicator*               NewIndicator                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetOwningIndicator(class AValIndicator* NewIndicator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetOwningIndicator");

	Params::UValCharacterOverlay_SetOwningIndicator_Params Parms{};

	Parms.NewIndicator = NewIndicator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.SetOwningGeneralActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      NewGeneralActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetOwningGeneralActor(class AActor* NewGeneralActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetOwningGeneralActor");

	Params::UValCharacterOverlay_SetOwningGeneralActor_Params Parms{};

	Parms.NewGeneralActor = NewGeneralActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.SetOwningCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               NewOwner                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetOwningCharacter(class AValCharacter* NewOwner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetOwningCharacter");

	Params::UValCharacterOverlay_SetOwningCharacter_Params Parms{};

	Parms.NewOwner = NewOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.SetMinObjectiveDistanceSq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              MinDistanceSq                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::SetMinObjectiveDistanceSq(float MinDistanceSq)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "SetMinObjectiveDistanceSq");

	Params::UValCharacterOverlay_SetMinObjectiveDistanceSq_Params Parms{};

	Parms.MinDistanceSq = MinDistanceSq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnUpdateVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Visible                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Hovered                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bClose                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bShowHealthBar                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::OnUpdateVisibility(bool Visible, bool Hovered, bool bClose, bool bShowHealthBar)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnUpdateVisibility");

	Params::UValCharacterOverlay_OnUpdateVisibility_Params Parms{};

	Parms.Visible = Visible;
	Parms.Hovered = Hovered;
	Parms.bClose = bClose;
	Parms.bShowHealthBar = bShowHealthBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnSetObjectiveLabel
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                        Label                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::OnSetObjectiveLabel(class FName& Label)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnSetObjectiveLabel");

	Params::UValCharacterOverlay_OnSetObjectiveLabel_Params Parms{};

	Parms.Label = Label;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnSetObjectiveDebugText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class FString                      DebugText                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::OnSetObjectiveDebugText(const class FString& DebugText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnSetObjectiveDebugText");

	Params::UValCharacterOverlay_OnSetObjectiveDebugText_Params Parms{};

	Parms.DebugText = DebugText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnSetObjectiveColor
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_LinearColor     Color                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOverlay::OnSetObjectiveColor(struct CoreUObject_LinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnSetObjectiveColor");

	Params::UValCharacterOverlay_OnSetObjectiveColor_Params Parms{};

	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningWaypointSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningWaypointSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningWaypointSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningObjectiveSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningObjectiveSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningObjectiveSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningNPCSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningNPCSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningNPCSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningIndicatorSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningIndicatorSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningIndicatorSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningGeneralActorSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningGeneralActorSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningGeneralActorSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnOwningCharacterSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnOwningCharacterSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnOwningCharacterSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.OnInitializedFromComponent
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValCharacterOverlay::OnInitializedFromComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "OnInitializedFromComponent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOverlay.GetLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* UValCharacterOverlay::GetLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "GetLocalPlayer");

	Params::UValCharacterOverlay_GetLocalPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterOverlay.GetLocalChar
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValCharacterOverlay::GetLocalChar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOverlay", "GetLocalChar");

	Params::UValCharacterOverlay_GetLocalChar_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValCharacterOverlay_NPC
// (None)

class UClass* UValCharacterOverlay_NPC::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterOverlay_NPC");

	return Clss;
}


// ValCharacterOverlay_NPC Valhalla.Default__ValCharacterOverlay_NPC
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterOverlay_NPC* UValCharacterOverlay_NPC::GetDefaultObj()
{
	static class UValCharacterOverlay_NPC* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterOverlay_NPC*>(UValCharacterOverlay_NPC::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterOxygenComponent
// (None)

class UClass* UValCharacterOxygenComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterOxygenComponent");

	return Clss;
}


// ValCharacterOxygenComponent Valhalla.Default__ValCharacterOxygenComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterOxygenComponent* UValCharacterOxygenComponent::GetDefaultObj()
{
	static class UValCharacterOxygenComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterOxygenComponent*>(UValCharacterOxygenComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterOxygenComponent.RemoveSuffocating
// (Final, Native, Protected)
// Parameters:

void UValCharacterOxygenComponent::RemoveSuffocating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "RemoveSuffocating");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOxygenComponent.RegenOxygen
// (Final, Native, Protected)
// Parameters:

void UValCharacterOxygenComponent::RegenOxygen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "RegenOxygen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOxygenComponent.OnTagChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterOxygenComponent::OnTagChanged(const struct GameplayTags_GameplayTag& Tag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "OnTagChanged");

	Params::UValCharacterOxygenComponent_OnTagChanged_Params Parms{};

	Parms.Tag = Tag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOxygenComponent.ConsumeOxygen
// (Final, Native, Protected)
// Parameters:

void UValCharacterOxygenComponent::ConsumeOxygen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "ConsumeOxygen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOxygenComponent.ApplySuffocationDamage
// (Final, Native, Protected)
// Parameters:

void UValCharacterOxygenComponent::ApplySuffocationDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "ApplySuffocationDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterOxygenComponent.ApplySuffocating
// (Final, Native, Protected)
// Parameters:

void UValCharacterOxygenComponent::ApplySuffocating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterOxygenComponent", "ApplySuffocating");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCheatData
// (None)

class UClass* UValCheatData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCheatData");

	return Clss;
}


// ValCheatData Valhalla.Default__ValCheatData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCheatData* UValCheatData::GetDefaultObj()
{
	static class UValCheatData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCheatData*>(UValCheatData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCheatComponent
// (None)

class UClass* UValCheatComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCheatComponent");

	return Clss;
}


// ValCheatComponent Valhalla.Default__ValCheatComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCheatComponent* UValCheatComponent::GetDefaultObj()
{
	static class UValCheatComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCheatComponent*>(UValCheatComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCheatComponent.WhatBuild
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::WhatBuild()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "WhatBuild");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.UseSurveyTower
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::UseSurveyTower()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "UseSurveyTower");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.UpdateXPData
// (Exec, Native, Protected)
// Parameters:
// int32                              StartingXp                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GainedXP                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentXP                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::UpdateXPData(int32 StartingXp, int32 GainedXP, int32 CurrentXP)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "UpdateXPData");

	Params::UValCheatComponent_UpdateXPData_Params Parms{};

	Parms.StartingXp = StartingXp;
	Parms.GainedXP = GainedXP;
	Parms.CurrentXP = CurrentXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.UpdateRepData
// (Exec, Native, Protected)
// Parameters:
// int32                              StartingRep                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GainedRep                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentRep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::UpdateRepData(int32 StartingRep, int32 GainedRep, int32 CurrentRep)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "UpdateRepData");

	Params::UValCheatComponent_UpdateRepData_Params Parms{};

	Parms.StartingRep = StartingRep;
	Parms.GainedRep = GainedRep;
	Parms.CurrentRep = CurrentRep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.UpdateActivityData
// (Exec, Native, Protected)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StartingProgress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EndingProgress                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::UpdateActivityData(int64 ActivityId, int32 StartingProgress, int32 EndingProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "UpdateActivityData");

	Params::UValCheatComponent_UpdateActivityData_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.StartingProgress = StartingProgress;
	Parms.EndingProgress = EndingProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToUber
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToUber()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToUber");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToReaper
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToReaper()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToReaper");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToPlayerBot
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToPlayerBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToPlayerBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToObjectiveTerminal
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToObjectiveTerminal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToObjectiveTerminal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToMe
// (Exec, Native, Protected)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::TPToMe(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToMe");

	Params::UValCheatComponent_TPToMe_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToMarker
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToMarker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToMarker");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToInteractableMission
// (Exec, Native, Protected)
// Parameters:
// bool                               bIncludeAll                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::TPToInteractableMission(bool bIncludeAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToInteractableMission");

	Params::UValCheatComponent_TPToInteractableMission_Params Parms{};

	Parms.bIncludeAll = bIncludeAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToHunterBot
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToHunterBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToHunterBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToHackablePanel
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TPToHackablePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToHackablePanel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPToExtractionPortal
// (Exec, Native, Protected)
// Parameters:
// bool                               bIncludeLocked                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::TPToExtractionPortal(bool bIncludeLocked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPToExtractionPortal");

	Params::UValCheatComponent_TPToExtractionPortal_Params Parms{};

	Parms.bIncludeLocked = bIncludeLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TPBotsToMe
// (Exec, Native, Protected)
// Parameters:
// bool                               bIncludeCybrids                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIncludeHunterBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::TPBotsToMe(bool bIncludeCybrids, bool bIncludeHunterBots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TPBotsToMe");

	Params::UValCheatComponent_TPBotsToMe_Params Parms{};

	Parms.bIncludeCybrids = bIncludeCybrids;
	Parms.bIncludeHunterBots = bIncludeHunterBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TP
// (Exec, Native, Protected)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::TP(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TP");

	Params::UValCheatComponent_TP_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ToggleShowPlayerStat
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      StatName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ToggleShowPlayerStat(const class FString& StatName, bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ToggleShowPlayerStat");

	Params::UValCheatComponent_ToggleShowPlayerStat_Params Parms{};

	Parms.StatName = StatName;
	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ToggleShowBotPerceptions
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ToggleShowBotPerceptions(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ToggleShowBotPerceptions");

	Params::UValCheatComponent_ToggleShowBotPerceptions_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ToggleRecordPlayerBotSquads
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ToggleRecordPlayerBotSquads(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ToggleRecordPlayerBotSquads");

	Params::UValCheatComponent_ToggleRecordPlayerBotSquads_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ToggleCoverVisualizations
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ToggleCoverVisualizations(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ToggleCoverVisualizations");

	Params::UValCheatComponent_ToggleCoverVisualizations_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Timescale
// (Exec, Native, Protected)
// Parameters:
// float                              Scale                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::Timescale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Timescale");

	Params::UValCheatComponent_Timescale_Params Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TestFubarRewardPostLogin
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TestFubarRewardPostLogin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TestFubarRewardPostLogin");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TestFubarRewardPosted
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TestFubarRewardPosted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TestFubarRewardPosted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.TestFubar
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::TestFubar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "TestFubar");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Suicide
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::Suicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Suicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.StopLookAtTarget
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::StopLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "StopLookAtTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.StopAllSounds
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::StopAllSounds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "StopAllSounds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.State
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpectatePlayerBot
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::SpectatePlayerBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpectatePlayerBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpectateHunterBot
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::SpectateHunterBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpectateHunterBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Spectate
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::Spectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Spectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpawnPlayerBotAtLocation
// (Final, Exec, Native, Protected)
// Parameters:
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSpawnAsAlly                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMakeMeLeader                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SpawnPlayerBotAtLocation(float X, float Y, float Z, bool bSpawnAsAlly, bool bMakeMeLeader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpawnPlayerBotAtLocation");

	Params::UValCheatComponent_SpawnPlayerBotAtLocation_Params Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.bSpawnAsAlly = bSpawnAsAlly;
	Parms.bMakeMeLeader = bMakeMeLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpawnPlayerBotAtCursor
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bSpawnAsAlly                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMakeMeLeader                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SpawnPlayerBotAtCursor(bool bSpawnAsAlly, bool bMakeMeLeader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpawnPlayerBotAtCursor");

	Params::UValCheatComponent_SpawnPlayerBotAtCursor_Params Parms{};

	Parms.bSpawnAsAlly = bSpawnAsAlly;
	Parms.bMakeMeLeader = bMakeMeLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpawnAIAtLocation
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      botId                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SpawnAIAtLocation(const class FString& botId, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpawnAIAtLocation");

	Params::UValCheatComponent_SpawnAIAtLocation_Params Parms{};

	Parms.botId = botId;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SpawnAIAtCursor
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      botId                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SpawnAIAtCursor(const class FString& botId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SpawnAIAtCursor");

	Params::UValCheatComponent_SpawnAIAtCursor_Params Parms{};

	Parms.botId = botId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Skydive
// (Exec, Native, Protected)
// Parameters:
// float                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::Skydive(float Distance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Skydive");

	Params::UValCheatComponent_Skydive_Params Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowTeamCount
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bShowTeamCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ShowTeamCount(bool bShowTeamCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowTeamCount");

	Params::UValCheatComponent_ShowTeamCount_Params Parms{};

	Parms.bShowTeamCount = bShowTeamCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowProjectileRejectionMessages
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ShowProjectileRejectionMessages(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowProjectileRejectionMessages");

	Params::UValCheatComponent_ShowProjectileRejectionMessages_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowMap
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bShowMap                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ShowMap(bool bShowMap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowMap");

	Params::UValCheatComponent_ShowMap_Params Parms{};

	Parms.bShowMap = bShowMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowDamageNumbers
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ShowDamageNumbers(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowDamageNumbers");

	Params::UValCheatComponent_ShowDamageNumbers_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowAIOnMiniMap
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::ShowAIOnMiniMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowAIOnMiniMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ShowAimAssistDebug
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bShow                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ShowAimAssistDebug(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ShowAimAssistDebug");

	Params::UValCheatComponent_ShowAimAssistDebug_Params Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetWorldPos
// (Exec, Native, Protected)
// Parameters:
// float                              InX                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InY                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InZ                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetWorldPos(float InX, float InY, float InZ)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetWorldPos");

	Params::UValCheatComponent_SetWorldPos_Params Parms{};

	Parms.InX = InX;
	Parms.InY = InY;
	Parms.InZ = InZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetUseAutoPickup
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::SetUseAutoPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetUseAutoPickup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetShields
// (Exec, Native, Protected)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetShields(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetShields");

	Params::UValCheatComponent_SetShields_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetLives
// (Exec, Native, Protected)
// Parameters:
// int32                              NewLives                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetLives(int32 NewLives)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetLives");

	Params::UValCheatComponent_SetLives_Params Parms{};

	Parms.NewLives = NewLives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetLiveGunPositioning
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetLiveGunPositioning(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetLiveGunPositioning");

	Params::UValCheatComponent_SetLiveGunPositioning_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetLevel
// (Exec, Native, Protected)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetLevel");

	Params::UValCheatComponent_SetLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetJumpZ
// (Exec, Native, Protected)
// Parameters:
// float                              NewJumpZ                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetJumpZ(float NewJumpZ)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetJumpZ");

	Params::UValCheatComponent_SetJumpZ_Params Parms{};

	Parms.NewJumpZ = NewJumpZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetHealth
// (Exec, Native, Protected)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetHealth");

	Params::UValCheatComponent_SetHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetExtractionPortalsInteractable
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::SetExtractionPortalsInteractable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetExtractionPortalsInteractable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetDungeonTimer
// (Exec, Native, Protected)
// Parameters:
// int32                              Seconds                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetDungeonTimer(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetDungeonTimer");

	Params::UValCheatComponent_SetDungeonTimer_Params Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SetAttributeValue
// (Final, Exec, Native, Protected)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SetAttributeValue(enum class EPlayerAttributeType AttributeType, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SetAttributeValue");

	Params::UValCheatComponent_SetAttributeValue_Params Parms{};

	Parms.AttributeType = AttributeType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerUseSurveyTower
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerUseSurveyTower()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerUseSurveyTower");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerUpdateXPData
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              StartingXp                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GainedXP                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentXP                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerUpdateXPData(int32 StartingXp, int32 GainedXP, int32 CurrentXP)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerUpdateXPData");

	Params::UValCheatComponent_ServerUpdateXPData_Params Parms{};

	Parms.StartingXp = StartingXp;
	Parms.GainedXP = GainedXP;
	Parms.CurrentXP = CurrentXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerUpdateRepData
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              StartingRep                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GainedRep                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentRep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerUpdateRepData(int32 StartingRep, int32 GainedRep, int32 CurrentRep)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerUpdateRepData");

	Params::UValCheatComponent_ServerUpdateRepData_Params Parms{};

	Parms.StartingRep = StartingRep;
	Parms.GainedRep = GainedRep;
	Parms.CurrentRep = CurrentRep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToUber
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToUber()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToUber");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToReaper
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToReaper()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToReaper");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToPlayerBot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToPlayerBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToPlayerBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToObjectiveTerminal
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToObjectiveTerminal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToObjectiveTerminal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToMe
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTPToMe(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToMe");

	Params::UValCheatComponent_ServerTPToMe_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToMarker
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToMarker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToMarker");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToInteractableMission
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bIncludeAll                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTPToInteractableMission(bool bIncludeAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToInteractableMission");

	Params::UValCheatComponent_ServerTPToInteractableMission_Params Parms{};

	Parms.bIncludeAll = bIncludeAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToHunterBot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToHunterBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToHunterBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToHackablePanel
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTPToHackablePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToHackablePanel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPToExtractionPortal
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bIncludeLocked                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTPToExtractionPortal(bool bIncludeLocked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPToExtractionPortal");

	Params::UValCheatComponent_ServerTPToExtractionPortal_Params Parms{};

	Parms.bIncludeLocked = bIncludeLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTPBotsToMe
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bIncludeCybrids                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIncludeHunterBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTPBotsToMe(bool bIncludeCybrids, bool bIncludeHunterBots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTPBotsToMe");

	Params::UValCheatComponent_ServerTPBotsToMe_Params Parms{};

	Parms.bIncludeCybrids = bIncludeCybrids;
	Parms.bIncludeHunterBots = bIncludeHunterBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTP
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTP(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTP");

	Params::UValCheatComponent_ServerTP_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerToggleRecordPlayerBotSquads
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerToggleRecordPlayerBotSquads(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerToggleRecordPlayerBotSquads");

	Params::UValCheatComponent_ServerToggleRecordPlayerBotSquads_Params Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTimescale
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Scale                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerTimescale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTimescale");

	Params::UValCheatComponent_ServerTimescale_Params Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTestFubarRewardPostLogin
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTestFubarRewardPostLogin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTestFubarRewardPostLogin");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTestFubarRewardPosted
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTestFubarRewardPosted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTestFubarRewardPosted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerTestFubar
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerTestFubar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerTestFubar");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSuicide
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerSuicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSuicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerState(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerState");

	Params::UValCheatComponent_ServerState_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpectatePlayerBot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpectatePlayerBot(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpectatePlayerBot");

	Params::UValCheatComponent_ServerSpectatePlayerBot_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpectateHunterBot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpectateHunterBot(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpectateHunterBot");

	Params::UValCheatComponent_ServerSpectateHunterBot_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpectate
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpectate(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpectate");

	Params::UValCheatComponent_ServerSpectate_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpawnPlayerBotAtLocation
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSpawnAsAlly                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMakeMeLeader                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpawnPlayerBotAtLocation(float X, float Y, float Z, bool bSpawnAsAlly, bool bMakeMeLeader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpawnPlayerBotAtLocation");

	Params::UValCheatComponent_ServerSpawnPlayerBotAtLocation_Params Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.bSpawnAsAlly = bSpawnAsAlly;
	Parms.bMakeMeLeader = bMakeMeLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpawnPlayerBotAtCursor
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bSpawnAsAlly                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMakeMeLeader                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpawnPlayerBotAtCursor(bool bSpawnAsAlly, bool bMakeMeLeader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpawnPlayerBotAtCursor");

	Params::UValCheatComponent_ServerSpawnPlayerBotAtCursor_Params Parms{};

	Parms.bSpawnAsAlly = bSpawnAsAlly;
	Parms.bMakeMeLeader = bMakeMeLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpawnAIAtLocation
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      botId                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpawnAIAtLocation(const class FString& botId, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpawnAIAtLocation");

	Params::UValCheatComponent_ServerSpawnAIAtLocation_Params Parms{};

	Parms.botId = botId;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSpawnAIAtCursor
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      botId                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSpawnAIAtCursor(const class FString& botId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSpawnAIAtCursor");

	Params::UValCheatComponent_ServerSpawnAIAtCursor_Params Parms{};

	Parms.botId = botId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSkydive
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSkydive(float Distance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSkydive");

	Params::UValCheatComponent_ServerSkydive_Params Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerShowTeamCount
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bShowTeamCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerShowTeamCount(bool bShowTeamCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerShowTeamCount");

	Params::UValCheatComponent_ServerShowTeamCount_Params Parms{};

	Parms.bShowTeamCount = bShowTeamCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerShowMap
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bShowMap                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerShowMap(bool bShowMap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerShowMap");

	Params::UValCheatComponent_ServerShowMap_Params Parms{};

	Parms.bShowMap = bShowMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerShowAIOnMiniMap
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerShowAIOnMiniMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerShowAIOnMiniMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetWorldPos
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              InX                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InY                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InZ                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetWorldPos(float InX, float InY, float InZ)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetWorldPos");

	Params::UValCheatComponent_ServerSetWorldPos_Params Parms{};

	Parms.InX = InX;
	Parms.InY = InY;
	Parms.InZ = InZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetUseAutoPickup
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerSetUseAutoPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetUseAutoPickup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetShields
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetShields(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetShields");

	Params::UValCheatComponent_ServerSetShields_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetLives
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              NewLives                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetLives(int32 NewLives)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetLives");

	Params::UValCheatComponent_ServerSetLives_Params Parms{};

	Parms.NewLives = NewLives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetLevel
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetLevel");

	Params::UValCheatComponent_ServerSetLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetJumpZ
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewJumpZ                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetJumpZ(float NewJumpZ)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetJumpZ");

	Params::UValCheatComponent_ServerSetJumpZ_Params Parms{};

	Parms.NewJumpZ = NewJumpZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetHealth
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetHealth");

	Params::UValCheatComponent_ServerSetHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetExtractionPortalsInteractable
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerSetExtractionPortalsInteractable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetExtractionPortalsInteractable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetDungeonTimer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Seconds                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetDungeonTimer(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetDungeonTimer");

	Params::UValCheatComponent_ServerSetDungeonTimer_Params Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSetAttributeValue
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSetAttributeValue(enum class EPlayerAttributeType AttributeType, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSetAttributeValue");

	Params::UValCheatComponent_ServerSetAttributeValue_Params Parms{};

	Parms.AttributeType = AttributeType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSendServerLogLine
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      LogLine                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerSendServerLogLine(const class FString& LogLine)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSendServerLogLine");

	Params::UValCheatComponent_ServerSendServerLogLine_Params Parms{};

	Parms.LogLine = LogLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerSaveInventory
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerSaveInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerSaveInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerRevokeInventory
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               RevokeArtifacts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RevokeLoadoutItems                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerRevokeInventory(bool RevokeArtifacts, bool RevokeLoadoutItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerRevokeInventory");

	Params::UValCheatComponent_ServerRevokeInventory_Params Parms{};

	Parms.RevokeArtifacts = RevokeArtifacts;
	Parms.RevokeLoadoutItems = RevokeLoadoutItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerRevive
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerRevive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerRevive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerPausePlayerSurviveTimer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bPause                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerPausePlayerSurviveTimer(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerPausePlayerSurviveTimer");

	Params::UValCheatComponent_ServerPausePlayerSurviveTimer_Params Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerPausePhaseTimer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerPausePhaseTimer(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerPausePhaseTimer");

	Params::UValCheatComponent_ServerPausePhaseTimer_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerPauseFog
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerPauseFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerPauseFog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerPauseBots
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bPause                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerPauseBots(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerPauseBots");

	Params::UValCheatComponent_ServerPauseBots_Params Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerOpenAllCrates
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerOpenAllCrates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerOpenAllCrates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerNoClip
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerNoClip()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerNoClip");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerKillPlayer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerKillPlayer(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerKillPlayer");

	Params::UValCheatComponent_ServerKillPlayer_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerKillMatch
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerKillMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerKillMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerKillBotsInRadius
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerKillBotsInRadius(int32 Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerKillBotsInRadius");

	Params::UValCheatComponent_ServerKillBotsInRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerIgnoreMissionRequirements
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerIgnoreMissionRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerIgnoreMissionRequirements");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerIgnoreCooldowns
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerIgnoreCooldowns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerIgnoreCooldowns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGTFO
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerGTFO()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGTFO");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGrantSecurityLevelAccessCard
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// enum class ESecurityLevel          SecurityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGrantSecurityLevelAccessCard(enum class ESecurityLevel SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGrantSecurityLevelAccessCard");

	Params::UValCheatComponent_ServerGrantSecurityLevelAccessCard_Params Parms{};

	Parms.SecurityLevel = SecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGrantLoot
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGrantLoot(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGrantLoot");

	Params::UValCheatComponent_ServerGrantLoot_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGodTrace
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APawn*                       P                                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGodTrace(class APawn* P)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGodTrace");

	Params::UValCheatComponent_ServerGodTrace_Params Parms{};

	Parms.P = P;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGodAllPlayers
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGodAllPlayers(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGodAllPlayers");

	Params::UValCheatComponent_ServerGodAllPlayers_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGodAllBots
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGodAllBots(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGodAllBots");

	Params::UValCheatComponent_ServerGodAllBots_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGodAll
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGodAll(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGodAll");

	Params::UValCheatComponent_ServerGodAll_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGod
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerGod()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGod");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveXP
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveXP(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveXP");

	Params::UValCheatComponent_ServerGiveXP_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGivePermanentMod
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGivePermanentMod(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGivePermanentMod");

	Params::UValCheatComponent_ServerGivePermanentMod_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveMoney
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveMoney(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveMoney");

	Params::UValCheatComponent_ServerGiveMoney_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveMod
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveMod(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveMod");

	Params::UValCheatComponent_ServerGiveMod_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveEquipment
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveEquipment(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveEquipment");

	Params::UValCheatComponent_ServerGiveEquipment_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveCurrency
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      CurrencyCode                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveCurrency(const class FString& CurrencyCode, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveCurrency");

	Params::UValCheatComponent_ServerGiveCurrency_Params Parms{};

	Parms.CurrencyCode = CurrencyCode;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveBoostItem
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                        ItemUpgrade                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveBoostItem(class FName ItemUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveBoostItem");

	Params::UValCheatComponent_ServerGiveBoostItem_Params Parms{};

	Parms.ItemUpgrade = ItemUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerGiveBoost
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerGiveBoost(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerGiveBoost");

	Params::UValCheatComponent_ServerGiveBoost_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerFreeCam
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerFreeCam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerFreeCam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerForce3p
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerForce3p(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerForce3p");

	Params::UValCheatComponent_ServerForce3p_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerExtendPlayerSurviveTimer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              ExtraSecond                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerExtendPlayerSurviveTimer(float ExtraSecond)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerExtendPlayerSurviveTimer");

	Params::UValCheatComponent_ServerExtendPlayerSurviveTimer_Params Parms{};

	Parms.ExtraSecond = ExtraSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerExecCall
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      Request                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerExecCall(const class FString& Request)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerExecCall");

	Params::UValCheatComponent_ServerExecCall_Params Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerExec
// (Exec, Native, Protected)
// Parameters:
// class FString                      Request                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerExec(const class FString& Request)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerExec");

	Params::UValCheatComponent_ServerExec_Params Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDumpWorldAIState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerDumpWorldAIState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDumpWorldAIState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDumpCrateState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AValBaseCrate*               TargetCrate                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDumpCrateState(class AValBaseCrate* TargetCrate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDumpCrateState");

	Params::UValCheatComponent_ServerDumpCrateState_Params Parms{};

	Parms.TargetCrate = TargetCrate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDumpAIState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AValCharacter*               TargetBot                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDumpAIState(class AValCharacter* TargetBot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDumpAIState");

	Params::UValCheatComponent_ServerDumpAIState_Params Parms{};

	Parms.TargetBot = TargetBot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementSkiInitialImpulse
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementSkiInitialImpulse(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementSkiInitialImpulse");

	Params::UValCheatComponent_ServerDevMovementSkiInitialImpulse_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementSkiGravityZ
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementSkiGravityZ(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementSkiGravityZ");

	Params::UValCheatComponent_ServerDevMovementSkiGravityZ_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementSkiFriction
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementSkiFriction(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementSkiFriction");

	Params::UValCheatComponent_ServerDevMovementSkiFriction_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementMaxSpeedForSkiInitialImpulse
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementMaxSpeedForSkiInitialImpulse(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementMaxSpeedForSkiInitialImpulse");

	Params::UValCheatComponent_ServerDevMovementMaxSpeedForSkiInitialImpulse_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementMaxSkiSpeed
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementMaxSkiSpeed(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementMaxSkiSpeed");

	Params::UValCheatComponent_ServerDevMovementMaxSkiSpeed_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementMaxSkiAcceleration
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementMaxSkiAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementMaxSkiAcceleration");

	Params::UValCheatComponent_ServerDevMovementMaxSkiAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementMaxAirSpeed
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementMaxAirSpeed(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementMaxAirSpeed");

	Params::UValCheatComponent_ServerDevMovementMaxAirSpeed_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementLateralJetpackAcceleration
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementLateralJetpackAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementLateralJetpackAcceleration");

	Params::UValCheatComponent_ServerDevMovementLateralJetpackAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementJetpackMaxIgnitionSpeedFromJump
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementJetpackMaxIgnitionSpeedFromJump(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementJetpackMaxIgnitionSpeedFromJump");

	Params::UValCheatComponent_ServerDevMovementJetpackMaxIgnitionSpeedFromJump_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementJetpackAcceleration
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementJetpackAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementJetpackAcceleration");

	Params::UValCheatComponent_ServerDevMovementJetpackAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementGroundMovementAcceleration
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementGroundMovementAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementGroundMovementAcceleration");

	Params::UValCheatComponent_ServerDevMovementGroundMovementAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementGravityZ
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementGravityZ(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementGravityZ");

	Params::UValCheatComponent_ServerDevMovementGravityZ_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDevMovementAirControl
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDevMovementAirControl(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDevMovementAirControl");

	Params::UValCheatComponent_ServerDevMovementAirControl_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDebugSetPlayerStat
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                      StatName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerDebugSetPlayerStat(const class FString& StatName, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDebugSetPlayerStat");

	Params::UValCheatComponent_ServerDebugSetPlayerStat_Params Parms{};

	Parms.StatName = StatName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDebugProjectileHit
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerDebugProjectileHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDebugProjectileHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerDebugDamage
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerDebugDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerDebugDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerCycleCharacterClass
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerCycleCharacterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerCycleCharacterClass");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerClearAttributeValue
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerClearAttributeValue(enum class EPlayerAttributeType AttributeType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerClearAttributeValue");

	Params::UValCheatComponent_ServerClearAttributeValue_Params Parms{};

	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerChangeTeam
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerChangeTeam(int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerChangeTeam");

	Params::UValCheatComponent_ServerChangeTeam_Params Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerCanGainXP
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerCanGainXP(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerCanGainXP");

	Params::UValCheatComponent_ServerCanGainXP_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerBotsIgnoreTrace
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class APawn*                       P                                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerBotsIgnoreTrace(class APawn* P, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerBotsIgnoreTrace");

	Params::UValCheatComponent_ServerBotsIgnoreTrace_Params Parms{};

	Parms.P = P;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerBotsIgnoreMe
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerBotsIgnoreMe(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerBotsIgnoreMe");

	Params::UValCheatComponent_ServerBotsIgnoreMe_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerBotsIgnoreAll
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIncludeBots                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerBotsIgnoreAll(bool bEnabled, bool bIncludeBots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerBotsIgnoreAll");

	Params::UValCheatComponent_ServerBotsIgnoreAll_Params Parms{};

	Parms.bEnabled = bEnabled;
	Parms.bIncludeBots = bIncludeBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerAuditWorldMeshComposer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerAuditWorldMeshComposer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerAuditWorldMeshComposer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerAlmostKillMe
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void UValCheatComponent::ServerAlmostKillMe()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerAlmostKillMe");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerAlmostKillBotsInRadius
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerAlmostKillBotsInRadius(int32 Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerAlmostKillBotsInRadius");

	Params::UValCheatComponent_ServerAlmostKillBotsInRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerAddMissionProgress
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              ActivityId                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerAddMissionProgress(int32 ActivityId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerAddMissionProgress");

	Params::UValCheatComponent_ServerAddMissionProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ServerAddAmmo
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              ClipAmmo                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReserveAmmo                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ServerAddAmmo(float ClipAmmo, float ReserveAmmo, struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ServerAddAmmo");

	Params::UValCheatComponent_ServerAddAmmo_Params Parms{};

	Parms.ClipAmmo = ClipAmmo;
	Parms.ReserveAmmo = ReserveAmmo;
	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SendServerLogLine
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      LogLine                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SendServerLogLine(const class FString& LogLine)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SendServerLogLine");

	Params::UValCheatComponent_SendServerLogLine_Params Parms{};

	Parms.LogLine = LogLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SendPartyChat
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      Msg                                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::SendPartyChat(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SendPartyChat");

	Params::UValCheatComponent_SendPartyChat_Params Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.SaveInventory
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::SaveInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "SaveInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.RevokeInventory
// (Exec, Native, Protected)
// Parameters:
// bool                               RevokeArtifacts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RevokeLoadoutItems                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::RevokeInventory(bool RevokeArtifacts, bool RevokeLoadoutItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "RevokeInventory");

	Params::UValCheatComponent_RevokeInventory_Params Parms{};

	Parms.RevokeArtifacts = RevokeArtifacts;
	Parms.RevokeLoadoutItems = RevokeLoadoutItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Revive
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::Revive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Revive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.QADebug
// (Exec, Native, Protected)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::QADebug(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "QADebug");

	Params::UValCheatComponent_QADebug_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.PausePlayerSurviveTimer
// (Exec, Native, Protected)
// Parameters:
// bool                               bPause                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::PausePlayerSurviveTimer(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "PausePlayerSurviveTimer");

	Params::UValCheatComponent_PausePlayerSurviveTimer_Params Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.PausePhaseTimer
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::PausePhaseTimer(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "PausePhaseTimer");

	Params::UValCheatComponent_PausePhaseTimer_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.PauseFog
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::PauseFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "PauseFog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.PauseBots
// (Exec, Native, Protected)
// Parameters:
// bool                               bPause                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::PauseBots(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "PauseBots");

	Params::UValCheatComponent_PauseBots_Params Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Orbit3p
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::Orbit3p(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Orbit3p");

	Params::UValCheatComponent_Orbit3p_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.OpenAllCrates
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::OpenAllCrates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "OpenAllCrates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.NoClip
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::NoClip()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "NoClip");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.NextPostProcessVolume
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::NextPostProcessVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "NextPostProcessVolume");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Monkey
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::Monkey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Monkey");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.LookAtTarget
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::LookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "LookAtTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Logout
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::Logout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Logout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ListAttributes
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::ListAttributes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ListAttributes");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.LeaveQueue
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::LeaveQueue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "LeaveQueue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.KillPlayer
// (Exec, Native, Protected)
// Parameters:
// class FString                      TargetPlayer                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::KillPlayer(const class FString& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "KillPlayer");

	Params::UValCheatComponent_KillPlayer_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.KillMatch
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::KillMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "KillMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.KillBotsInRadius
// (Exec, Native, Protected)
// Parameters:
// int32                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::KillBotsInRadius(int32 Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "KillBotsInRadius");

	Params::UValCheatComponent_KillBotsInRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.JoinQueue
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      QueueId                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DisablePartyMatching                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SkillScore                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PartyLevel                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::JoinQueue(const class FString& QueueId, bool DisablePartyMatching, float SkillScore, float PartyLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "JoinQueue");

	Params::UValCheatComponent_JoinQueue_Params Parms{};

	Parms.QueueId = QueueId;
	Parms.DisablePartyMatching = DisablePartyMatching;
	Parms.SkillScore = SkillScore;
	Parms.PartyLevel = PartyLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.JoinBackfill
// (Final, Exec, Native, Protected)
// Parameters:
// int32                              QueueId                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SiteId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::JoinBackfill(int32 QueueId, int32 SiteId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "JoinBackfill");

	Params::UValCheatComponent_JoinBackfill_Params Parms{};

	Parms.QueueId = QueueId;
	Parms.SiteId = SiteId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.IgnoreMissionRequirements
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::IgnoreMissionRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "IgnoreMissionRequirements");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.IgnoreCooldowns
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::IgnoreCooldowns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "IgnoreCooldowns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.HideHUD
// (Exec, Native, Protected)
// Parameters:
// bool                               bShouldHide                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::HideHUD(bool bShouldHide)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "HideHUD");

	Params::UValCheatComponent_HideHUD_Params Parms{};

	Parms.bShouldHide = bShouldHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GTFO
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::GTFO()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GTFO");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GrantSpecificLoot
// (Exec, Native, Protected, HasOutParams)
// Parameters:
// class FString                      Rarity                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ItemType                                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GrantSpecificLoot(const class FString& Rarity, struct GameplayTags_GameplayTag* ItemType, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GrantSpecificLoot");

	Params::UValCheatComponent_GrantSpecificLoot_Params Parms{};

	Parms.Rarity = Rarity;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemType != nullptr)
		*ItemType = std::move(Parms.ItemType);

}


// Function Valhalla.ValCheatComponent.GrantSecurityLevelAccessCard
// (Exec, Native, Protected)
// Parameters:
// enum class ESecurityLevel          SecurityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GrantSecurityLevelAccessCard(enum class ESecurityLevel SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GrantSecurityLevelAccessCard");

	Params::UValCheatComponent_GrantSecurityLevelAccessCard_Params Parms{};

	Parms.SecurityLevel = SecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GrantLoot
// (Exec, Native, Protected)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GrantLoot(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GrantLoot");

	Params::UValCheatComponent_GrantLoot_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GPM
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GPM(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GPM");

	Params::UValCheatComponent_GPM_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GoHome
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bForce                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GoHome(bool bForce)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GoHome");

	Params::UValCheatComponent_GoHome_Params Parms{};

	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GodTrace
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::GodTrace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GodTrace");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GodAllPlayers
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GodAllPlayers(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GodAllPlayers");

	Params::UValCheatComponent_GodAllPlayers_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GodAllBots
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GodAllBots(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GodAllBots");

	Params::UValCheatComponent_GodAllBots_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GodAll
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GodAll(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GodAll");

	Params::UValCheatComponent_GodAll_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.God
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::God()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "God");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GM
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GM(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GM");

	Params::UValCheatComponent_GM_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveXP
// (Exec, Native, Protected)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveXP(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveXP");

	Params::UValCheatComponent_GiveXP_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GivePermanentMod
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GivePermanentMod(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GivePermanentMod");

	Params::UValCheatComponent_GivePermanentMod_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveMoney
// (Exec, Native, Protected)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveMoney(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveMoney");

	Params::UValCheatComponent_GiveMoney_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveMod
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveMod(int32 ItemId, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveMod");

	Params::UValCheatComponent_GiveMod_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveEquipment
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveEquipment(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveEquipment");

	Params::UValCheatComponent_GiveEquipment_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveCurrency
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      CurrencyCode                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveCurrency(const class FString& CurrencyCode, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveCurrency");

	Params::UValCheatComponent_GiveCurrency_Params Parms{};

	Parms.CurrencyCode = CurrencyCode;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveBoostItem
// (Exec, Native, Protected)
// Parameters:
// class FName                        ItemRowName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveBoostItem(class FName ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveBoostItem");

	Params::UValCheatComponent_GiveBoostItem_Params Parms{};

	Parms.ItemRowName = ItemRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveBoost
// (Exec, Native, Protected)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveBoost(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveBoost");

	Params::UValCheatComponent_GiveBoost_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GiveAbility
// (Exec, Native, Protected)
// Parameters:
// class FName                        AbilityRowName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GiveAbility(class FName AbilityRowName, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GiveAbility");

	Params::UValCheatComponent_GiveAbility_Params Parms{};

	Parms.AbilityRowName = AbilityRowName;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.GE
// (Exec, Native, Protected)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::GE(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "GE");

	Params::UValCheatComponent_GE_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.FreeCam
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::FreeCam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "FreeCam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ForceStartAiming
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::ForceStartAiming()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ForceStartAiming");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ForceCrash
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::ForceCrash()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ForceCrash");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.Force3p
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::Force3p(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "Force3p");

	Params::UValCheatComponent_Force3p_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ExtendPlayerSurviveTimer
// (Exec, Native, Protected)
// Parameters:
// float                              ExtraSecond                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ExtendPlayerSurviveTimer(float ExtraSecond)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ExtendPlayerSurviveTimer");

	Params::UValCheatComponent_ExtendPlayerSurviveTimer_Params Parms{};

	Parms.ExtraSecond = ExtraSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.EnableAimAssist
// (Final, Exec, Native, Protected)
// Parameters:
// bool                               bEnable                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::EnableAimAssist(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "EnableAimAssist");

	Params::UValCheatComponent_EnableAimAssist_Params Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DumpWorldAIState
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DumpWorldAIState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DumpWorldAIState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DumpCrateState
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DumpCrateState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DumpCrateState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DumpAnimationStats
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DumpAnimationStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DumpAnimationStats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DumpAIState
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DumpAIState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DumpAIState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DisplayAssetName
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DisplayAssetName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DisplayAssetName");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DisplayAbilityPropertyMods
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DisplayAbilityPropertyMods()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DisplayAbilityPropertyMods");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementSkiInitialImpulse
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementSkiInitialImpulse(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementSkiInitialImpulse");

	Params::UValCheatComponent_DevMovementSkiInitialImpulse_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementSkiGravityZ
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementSkiGravityZ(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementSkiGravityZ");

	Params::UValCheatComponent_DevMovementSkiGravityZ_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementSkiFriction
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementSkiFriction(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementSkiFriction");

	Params::UValCheatComponent_DevMovementSkiFriction_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementMaxSpeedForSkiInitialImpulse
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementMaxSpeedForSkiInitialImpulse(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementMaxSpeedForSkiInitialImpulse");

	Params::UValCheatComponent_DevMovementMaxSpeedForSkiInitialImpulse_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementMaxSkiSpeed
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementMaxSkiSpeed(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementMaxSkiSpeed");

	Params::UValCheatComponent_DevMovementMaxSkiSpeed_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementMaxSkiAcceleration
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementMaxSkiAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementMaxSkiAcceleration");

	Params::UValCheatComponent_DevMovementMaxSkiAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementMaxAirSpeed
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementMaxAirSpeed(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementMaxAirSpeed");

	Params::UValCheatComponent_DevMovementMaxAirSpeed_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementList
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DevMovementList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementList");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementLateralJetpackAcceleration
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementLateralJetpackAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementLateralJetpackAcceleration");

	Params::UValCheatComponent_DevMovementLateralJetpackAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementJetpackMaxIgnitionSpeedFromJump
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementJetpackMaxIgnitionSpeedFromJump(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementJetpackMaxIgnitionSpeedFromJump");

	Params::UValCheatComponent_DevMovementJetpackMaxIgnitionSpeedFromJump_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementJetpackAcceleration
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementJetpackAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementJetpackAcceleration");

	Params::UValCheatComponent_DevMovementJetpackAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementGroundMovementAcceleration
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementGroundMovementAcceleration(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementGroundMovementAcceleration");

	Params::UValCheatComponent_DevMovementGroundMovementAcceleration_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementGravityZ
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementGravityZ(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementGravityZ");

	Params::UValCheatComponent_DevMovementGravityZ_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DevMovementAirControl
// (Exec, Native, Protected)
// Parameters:
// float                              NewMultiplier                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DevMovementAirControl(float NewMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DevMovementAirControl");

	Params::UValCheatComponent_DevMovementAirControl_Params Parms{};

	Parms.NewMultiplier = NewMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DebugSurface
// (Exec, Native, Protected)
// Parameters:
// float                              TraceDownDistance                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TraceRadius                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DebugSurface(float TraceDownDistance, float TraceRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DebugSurface");

	Params::UValCheatComponent_DebugSurface_Params Parms{};

	Parms.TraceDownDistance = TraceDownDistance;
	Parms.TraceRadius = TraceRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DebugSetPlayerStat
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      StatName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DebugSetPlayerStat(const class FString& StatName, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DebugSetPlayerStat");

	Params::UValCheatComponent_DebugSetPlayerStat_Params Parms{};

	Parms.StatName = StatName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DebugProjectileHit
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DebugProjectileHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DebugProjectileHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DebugPositionHistory
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::DebugPositionHistory(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DebugPositionHistory");

	Params::UValCheatComponent_DebugPositionHistory_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.DebugDamage
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::DebugDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "DebugDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.CycleCharacterClass
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::CycleCharacterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "CycleCharacterClass");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.CustomForceStart
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::CustomForceStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "CustomForceStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ClearAttributeValue
// (Final, Exec, Native, Protected)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ClearAttributeValue(enum class EPlayerAttributeType AttributeType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ClearAttributeValue");

	Params::UValCheatComponent_ClearAttributeValue_Params Parms{};

	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ChangeTeam
// (Exec, Native, Protected)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ChangeTeam(int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ChangeTeam");

	Params::UValCheatComponent_ChangeTeam_Params Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.ChangeTargetControllerTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                 Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::ChangeTargetControllerTeam(class AController* Controller, int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "ChangeTargetControllerTeam");

	Params::UValCheatComponent_ChangeTargetControllerTeam_Params Parms{};

	Parms.Controller = Controller;
	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.CCC
// (Final, Exec, Native, Protected)
// Parameters:

void UValCheatComponent::CCC()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "CCC");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.CanGainXP
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::CanGainXP(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "CanGainXP");

	Params::UValCheatComponent_CanGainXP_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.BotsIgnoreTrace
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::BotsIgnoreTrace(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "BotsIgnoreTrace");

	Params::UValCheatComponent_BotsIgnoreTrace_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.BotsIgnoreMe
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::BotsIgnoreMe(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "BotsIgnoreMe");

	Params::UValCheatComponent_BotsIgnoreMe_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.BotsIgnoreAllPlayers
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::BotsIgnoreAllPlayers(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "BotsIgnoreAllPlayers");

	Params::UValCheatComponent_BotsIgnoreAllPlayers_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.BotsIgnoreAll
// (Exec, Native, Protected)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::BotsIgnoreAll(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "BotsIgnoreAll");

	Params::UValCheatComponent_BotsIgnoreAll_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AudThr
// (Exec, Native, Protected)
// Parameters:
// class FString                      Params                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::AudThr(const class FString& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AudThr");

	Params::UValCheatComponent_AudThr_Params Parms{};

	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AuditWorldMeshComposer
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::AuditWorldMeshComposer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AuditWorldMeshComposer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AudioRoomDebug
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                      Params                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::AudioRoomDebug(const class FString& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AudioRoomDebug");

	Params::UValCheatComponent_AudioRoomDebug_Params Parms{};

	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AlmostKillMe
// (Exec, Native, Protected)
// Parameters:

void UValCheatComponent::AlmostKillMe()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AlmostKillMe");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AlmostKillBotsInRadius
// (Exec, Native, Protected)
// Parameters:
// int32                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::AlmostKillBotsInRadius(int32 Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AlmostKillBotsInRadius");

	Params::UValCheatComponent_AlmostKillBotsInRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AddMissionProgress
// (Final, Exec, Native, Protected)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::AddMissionProgress(int32 ActivityId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AddMissionProgress");

	Params::UValCheatComponent_AddMissionProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCheatComponent.AddAmmo
// (Exec, Native, Protected, HasOutParams)
// Parameters:
// float                              ClipAmmo                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReserveAmmo                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCheatComponent::AddAmmo(float ClipAmmo, float ReserveAmmo, struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCheatComponent", "AddAmmo");

	Params::UValCheatComponent_AddAmmo_Params Parms{};

	Parms.ClipAmmo = ClipAmmo;
	Parms.ReserveAmmo = ReserveAmmo;
	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValClientQueueAsset
// (None)

class UClass* UValClientQueueAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValClientQueueAsset");

	return Clss;
}


// ValClientQueueAsset Valhalla.Default__ValClientQueueAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValClientQueueAsset* UValClientQueueAsset::GetDefaultObj()
{
	static class UValClientQueueAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValClientQueueAsset*>(UValClientQueueAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValClientQueueAsset.GetMinRequiredLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValClientQueueAsset::GetMinRequiredLevel(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClientQueueAsset", "GetMinRequiredLevel");

	Params::UValClientQueueAsset_GetMinRequiredLevel_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValClientQueueAsset.GetMaxRequiredLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValClientQueueAsset::GetMaxRequiredLevel(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClientQueueAsset", "GetMaxRequiredLevel");

	Params::UValClientQueueAsset_GetMaxRequiredLevel_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValColorConfigData
// (None)

class UClass* UValColorConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValColorConfigData");

	return Clss;
}


// ValColorConfigData Valhalla.Default__ValColorConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValColorConfigData* UValColorConfigData::GetDefaultObj()
{
	static class UValColorConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValColorConfigData*>(UValColorConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValColorConfigData.GetColorConfigFromId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ID                                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValColorConfigData*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValColorConfigData* UValColorConfigData::GetColorConfigFromId(class FName& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValColorConfigData", "GetColorConfigFromId");

	Params::UValColorConfigData_GetColorConfigFromId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValContextPingActor
// (None)

class UClass* IValContextPingActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContextPingActor");

	return Clss;
}


// ValContextPingActor Valhalla.Default__ValContextPingActor
// (Public, ClassDefaultObject, ArchetypeObject)

class IValContextPingActor* IValContextPingActor::GetDefaultObj()
{
	static class IValContextPingActor* Default = nullptr;

	if (!Default)
		Default = static_cast<IValContextPingActor*>(IValContextPingActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContextPingActor.GetPreviewDetectionOffset
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector IValContextPingActor::GetPreviewDetectionOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetPreviewDetectionOffset");

	Params::IValContextPingActor_GetPreviewDetectionOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValContextPingActor.GetPingOffset
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector IValContextPingActor::GetPingOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetPingOffset");

	Params::IValContextPingActor_GetPingOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValContextPingActor.GetContextTitleOverride
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IValContextPingActor::GetContextTitleOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetContextTitleOverride");

	Params::IValContextPingActor_GetContextTitleOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValContextPingActor.GetContextPingType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EValPingType            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValPingType IValContextPingActor::GetContextPingType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetContextPingType");

	Params::IValContextPingActor_GetContextPingType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValContextPingActor.GetContextPingRarity
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity IValContextPingActor::GetContextPingRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetContextPingRarity");

	Params::IValContextPingActor_GetContextPingRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValContextPingActor.GetContextDescriptionOverride
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IValContextPingActor::GetContextDescriptionOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContextPingActor", "GetContextDescriptionOverride");

	Params::IValContextPingActor_GetContextDescriptionOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValContract
// (None)

class UClass* UValContract::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract");

	return Clss;
}


// ValContract Valhalla.Default__ValContract
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract* UValContract::GetDefaultObj()
{
	static class UValContract* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract*>(UValContract::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValContractTaskData
// (None)

class UClass* UValContractTaskData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractTaskData");

	return Clss;
}


// ValContractTaskData Valhalla.Default__ValContractTaskData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractTaskData* UValContractTaskData::GetDefaultObj()
{
	static class UValContractTaskData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractTaskData*>(UValContractTaskData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContractTaskData.GetTaskFromId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ID                                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValContractTaskData*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValContractTaskData* UValContractTaskData::GetTaskFromId(class FName& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContractTaskData", "GetTaskFromId");

	Params::UValContractTaskData_GetTaskFromId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValContractConfigData
// (None)

class UClass* UValContractConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractConfigData");

	return Clss;
}


// ValContractConfigData Valhalla.Default__ValContractConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractConfigData* UValContractConfigData::GetDefaultObj()
{
	static class UValContractConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractConfigData*>(UValContractConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValContractManager
// (None)

class UClass* UValContractManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractManager");

	return Clss;
}


// ValContractManager Valhalla.Default__ValContractManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractManager* UValContractManager::GetDefaultObj()
{
	static class UValContractManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractManager*>(UValContractManager::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValContractPendingClaim
// (None)

class UClass* UValContractPendingClaim::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractPendingClaim");

	return Clss;
}


// ValContractPendingClaim Valhalla.Default__ValContractPendingClaim
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractPendingClaim* UValContractPendingClaim::GetDefaultObj()
{
	static class UValContractPendingClaim* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractPendingClaim*>(UValContractPendingClaim::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValContractPurchase
// (None)

class UClass* UValContractPurchase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractPurchase");

	return Clss;
}


// ValContractPurchase Valhalla.Default__ValContractPurchase
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractPurchase* UValContractPurchase::GetDefaultObj()
{
	static class UValContractPurchase* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractPurchase*>(UValContractPurchase::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValContractShop
// (None)

class UClass* UValContractShop::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContractShop");

	return Clss;
}


// ValContractShop Valhalla.Default__ValContractShop
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContractShop* UValContractShop::GetDefaultObj()
{
	static class UValContractShop* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContractShop*>(UValContractShop::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContractShop.GetRerollTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_DateTime        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_DateTime UValContractShop::GetRerollTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContractShop", "GetRerollTime");

	Params::UValContractShop_GetRerollTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValContract_Damage
// (None)

class UClass* UValContract_Damage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Damage");

	return Clss;
}


// ValContract_Damage Valhalla.Default__ValContract_Damage
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Damage* UValContract_Damage::GetDefaultObj()
{
	static class UValContract_Damage* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Damage*>(UValContract_Damage::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Damage.OnDamage
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_DamageData         DamageData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValContract_Damage::OnDamage(struct CoreUObject_Guid& PlayerUuid, struct Valhalla_DamageData& DamageData, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Damage", "OnDamage");

	Params::UValContract_Damage_OnDamage_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.DamageData = DamageData;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValContract_Evac
// (None)

class UClass* UValContract_Evac::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Evac");

	return Clss;
}


// ValContract_Evac Valhalla.Default__ValContract_Evac
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Evac* UValContract_Evac::GetDefaultObj()
{
	static class UValContract_Evac* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Evac*>(UValContract_Evac::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Evac.OnEvac
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValContract_Evac::OnEvac(struct CoreUObject_Guid& PlayerUuid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Evac", "OnEvac");

	Params::UValContract_Evac_OnEvac_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValContract_Fabricator
// (None)

class UClass* UValContract_Fabricator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Fabricator");

	return Clss;
}


// ValContract_Fabricator Valhalla.Default__ValContract_Fabricator
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Fabricator* UValContract_Fabricator::GetDefaultObj()
{
	static class UValContract_Fabricator* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Fabricator*>(UValContract_Fabricator::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Fabricator.OnFabricate
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EFabricatorShopType     Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValContract_Fabricator::OnFabricate(struct CoreUObject_Guid& PlayerUuid, enum class EFabricatorShopType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Fabricator", "OnFabricate");

	Params::UValContract_Fabricator_OnFabricate_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValContract_Loot
// (None)

class UClass* UValContract_Loot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Loot");

	return Clss;
}


// ValContract_Loot Valhalla.Default__ValContract_Loot
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Loot* UValContract_Loot::GetDefaultObj()
{
	static class UValContract_Loot* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Loot*>(UValContract_Loot::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Loot.OnLoot
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_PendingItem>LootArray                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValContract_Loot::OnLoot(struct CoreUObject_Guid& PlayerUuid, TArray<struct Valhalla_PendingItem>* LootArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Loot", "OnLoot");

	Params::UValContract_Loot_OnLoot_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LootArray != nullptr)
		*LootArray = std::move(Parms.LootArray);

}


// Class Valhalla.ValContract_Pickup
// (None)

class UClass* UValContract_Pickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Pickup");

	return Clss;
}


// ValContract_Pickup Valhalla.Default__ValContract_Pickup
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Pickup* UValContract_Pickup::GetDefaultObj()
{
	static class UValContract_Pickup* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Pickup*>(UValContract_Pickup::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Pickup.OnPickup
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPickup*                  Pickup                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValContract_Pickup::OnPickup(struct CoreUObject_Guid& PlayerUuid, class AValPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Pickup", "OnPickup");

	Params::UValContract_Pickup_OnPickup_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.Pickup = Pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValContract_Stat
// (None)

class UClass* UValContract_Stat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValContract_Stat");

	return Clss;
}


// ValContract_Stat Valhalla.Default__ValContract_Stat
// (Public, ClassDefaultObject, ArchetypeObject)

class UValContract_Stat* UValContract_Stat::GetDefaultObj()
{
	static class UValContract_Stat* Default = nullptr;

	if (!Default)
		Default = static_cast<UValContract_Stat*>(UValContract_Stat::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValContract_Stat.OnPlayerStat
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EGameStatType           Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValContract_Stat::OnPlayerStat(struct CoreUObject_Guid& PlayerUuid, enum class EGameStatType Type, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValContract_Stat", "OnPlayerStat");

	Params::UValContract_Stat_OnPlayerStat_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.Type = Type;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCrouchComponent
// (None)

class UClass* UValCrouchComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCrouchComponent");

	return Clss;
}


// ValCrouchComponent Valhalla.Default__ValCrouchComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCrouchComponent* UValCrouchComponent::GetDefaultObj()
{
	static class UValCrouchComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCrouchComponent*>(UValCrouchComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCrouchComponent.Evaluate
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AValCharacter*               ViewTarget                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ViewLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          NewViewLocation                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCrouchComponent::Evaluate(class AValCharacter* ViewTarget, float DeltaSeconds, struct CoreUObject_Vector& ViewLocation, struct CoreUObject_Vector* NewViewLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCrouchComponent", "Evaluate");

	Params::UValCrouchComponent_Evaluate_Params Parms{};

	Parms.ViewTarget = ViewTarget;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.ViewLocation = ViewLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NewViewLocation != nullptr)
		*NewViewLocation = std::move(Parms.NewViewLocation);

}


// Class Valhalla.ValCustomDataLibrary
// (None)

class UClass* UValCustomDataLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCustomDataLibrary");

	return Clss;
}


// ValCustomDataLibrary Valhalla.Default__ValCustomDataLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCustomDataLibrary* UValCustomDataLibrary::GetDefaultObj()
{
	static class UValCustomDataLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCustomDataLibrary*>(UValCustomDataLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCustomDataLibrary.GetInventoryUpgradeLevel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct RallyHereIntegration_RH_ItemInventoryInventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValCustomDataLibrary::GetInventoryUpgradeLevel(struct RallyHereIntegration_RH_ItemInventory& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetInventoryUpgradeLevel");

	Params::UValCustomDataLibrary_GetInventoryUpgradeLevel_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetInventoryRarity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct RallyHereIntegration_RH_ItemInventoryInventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetInventoryRarity(struct RallyHereIntegration_RH_ItemInventory& InventoryItem, enum class ERarity* Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetInventoryRarity");

	Params::UValCustomDataLibrary_GetInventoryRarity_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Rarity != nullptr)
		*Rarity = Parms.Rarity;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataUpgradeLevel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              UpgradeLevel                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataUpgradeLevel(TArray<struct PlatformInterface_StringPair>& CustomData, int32* UpgradeLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataUpgradeLevel");

	Params::UValCustomDataLibrary_GetCustomDataUpgradeLevel_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (UpgradeLevel != nullptr)
		*UpgradeLevel = Parms.UpgradeLevel;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataSortOrder
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              SortOrder                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataSortOrder(TArray<struct PlatformInterface_StringPair>& CustomData, int32* SortOrder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataSortOrder");

	Params::UValCustomDataLibrary_GetCustomDataSortOrder_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortOrder != nullptr)
		*SortOrder = Parms.SortOrder;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataRarity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataRarity(TArray<struct PlatformInterface_StringPair>& CustomData, enum class ERarity* Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataRarity");

	Params::UValCustomDataLibrary_GetCustomDataRarity_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Rarity != nullptr)
		*Rarity = Parms.Rarity;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataPurchased
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               Purchased                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataPurchased(TArray<struct PlatformInterface_StringPair>& CustomData, bool* Purchased)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataPurchased");

	Params::UValCustomDataLibrary_GetCustomDataPurchased_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Purchased != nullptr)
		*Purchased = Parms.Purchased;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataProperties
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<enum class EPlayerProperty> PlayerProperties                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataProperties(TArray<struct PlatformInterface_StringPair>& CustomData, TArray<enum class EPlayerProperty>* PlayerProperties)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataProperties");

	Params::UValCustomDataLibrary_GetCustomDataProperties_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerProperties != nullptr)
		*PlayerProperties = std::move(Parms.PlayerProperties);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataPlayerData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryPlayerDataPlayerData                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataPlayerData(TArray<struct PlatformInterface_StringPair>& CustomData, struct Valhalla_InventoryPlayerData* PlayerData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataPlayerData");

	Params::UValCustomDataLibrary_GetCustomDataPlayerData_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerData != nullptr)
		*PlayerData = std::move(Parms.PlayerData);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataPlayerAttributeData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_PlayerAttributeData>PlayerAttributeData                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataPlayerAttributeData(TArray<struct PlatformInterface_StringPair>& CustomData, TArray<struct Valhalla_PlayerAttributeData>* PlayerAttributeData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataPlayerAttributeData");

	Params::UValCustomDataLibrary_GetCustomDataPlayerAttributeData_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerAttributeData != nullptr)
		*PlayerAttributeData = std::move(Parms.PlayerAttributeData);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataOffensivePower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                              OffensivePower                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataOffensivePower(TArray<struct PlatformInterface_StringPair>& CustomData, float* OffensivePower)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataOffensivePower");

	Params::UValCustomDataLibrary_GetCustomDataOffensivePower_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OffensivePower != nullptr)
		*OffensivePower = Parms.OffensivePower;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataMapSortOrder
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString> CustomData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              SortOrder                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataMapSortOrder(TMap<class FString, class FString>& CustomData, int32* SortOrder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataMapSortOrder");

	Params::UValCustomDataLibrary_GetCustomDataMapSortOrder_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortOrder != nullptr)
		*SortOrder = Parms.SortOrder;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataMapPlayerAttributeData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString> CustomData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_PlayerAttributeData>PlayerAttributeData                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataMapPlayerAttributeData(TMap<class FString, class FString>& CustomData, TArray<struct Valhalla_PlayerAttributeData>* PlayerAttributeData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataMapPlayerAttributeData");

	Params::UValCustomDataLibrary_GetCustomDataMapPlayerAttributeData_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerAttributeData != nullptr)
		*PlayerAttributeData = std::move(Parms.PlayerAttributeData);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataMapGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString> CustomData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerGameplayTags                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataMapGameplayTags(TMap<class FString, class FString>& CustomData, struct GameplayTags_GameplayTagContainer* GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataMapGameplayTags");

	Params::UValCustomDataLibrary_GetCustomDataMapGameplayTags_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (GameplayTags != nullptr)
		*GameplayTags = std::move(Parms.GameplayTags);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataMapContractRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString> CustomData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractLoot>ContractRewards                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataMapContractRewards(TMap<class FString, class FString>& CustomData, TArray<struct Valhalla_ContractLoot>* ContractRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataMapContractRewards");

	Params::UValCustomDataLibrary_GetCustomDataMapContractRewards_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ContractRewards != nullptr)
		*ContractRewards = std::move(Parms.ContractRewards);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataItemSource
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ItemSource                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataItemSource(TArray<struct PlatformInterface_StringPair>& CustomData, int32* ItemSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataItemSource");

	Params::UValCustomDataLibrary_GetCustomDataItemSource_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemSource != nullptr)
		*ItemSource = Parms.ItemSource;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerGameplayTags                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataGameplayTags(TArray<struct PlatformInterface_StringPair>& CustomData, struct GameplayTags_GameplayTagContainer* GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataGameplayTags");

	Params::UValCustomDataLibrary_GetCustomDataGameplayTags_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (GameplayTags != nullptr)
		*GameplayTags = std::move(Parms.GameplayTags);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataDefensivePower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                              DefensivePower                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataDefensivePower(TArray<struct PlatformInterface_StringPair>& CustomData, float* DefensivePower)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataDefensivePower");

	Params::UValCustomDataLibrary_GetCustomDataDefensivePower_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DefensivePower != nullptr)
		*DefensivePower = Parms.DefensivePower;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataCustomName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                      CustomName                                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataCustomName(TArray<struct PlatformInterface_StringPair>& CustomData, class FString* CustomName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataCustomName");

	Params::UValCustomDataLibrary_GetCustomDataCustomName_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CustomName != nullptr)
		*CustomName = std::move(Parms.CustomName);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataContractRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractLoot>ContractRewards                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataContractRewards(TArray<struct PlatformInterface_StringPair>& CustomData, TArray<struct Valhalla_ContractLoot>* ContractRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataContractRewards");

	Params::UValCustomDataLibrary_GetCustomDataContractRewards_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ContractRewards != nullptr)
		*ContractRewards = std::move(Parms.ContractRewards);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCustomDataLibrary.GetCustomDataChildItemIds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct PlatformInterface_StringPair>CustomData                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                      ChildItemIds                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCustomDataLibrary::GetCustomDataChildItemIds(TArray<struct PlatformInterface_StringPair>& CustomData, TArray<int32>* ChildItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCustomDataLibrary", "GetCustomDataChildItemIds");

	Params::UValCustomDataLibrary_GetCustomDataChildItemIds_Params Parms{};

	Parms.CustomData = CustomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ChildItemIds != nullptr)
		*ChildItemIds = std::move(Parms.ChildItemIds);

	return Parms.ReturnValue;

}


// Class Valhalla.ValDamageable
// (None)

class UClass* IValDamageable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDamageable");

	return Clss;
}


// ValDamageable Valhalla.Default__ValDamageable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValDamageable* IValDamageable::GetDefaultObj()
{
	static class IValDamageable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValDamageable*>(IValDamageable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDamageable.OnHealed
// (Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void IValDamageable::OnHealed(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "OnHealed");

	Params::IValDamageable_OnHealed_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDamageable.OnDamaged
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void IValDamageable::OnDamaged(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "OnDamaged");

	Params::IValDamageable_OnDamaged_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDamageable.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDamageable::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "IsAlive");

	Params::IValDamageable_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDamageable.CanBeHealed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDamageable::CanBeHealed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "CanBeHealed");

	Params::IValDamageable_CanBeHealed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDamageable.CanBeDamaged
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDamageable::CanBeDamaged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "CanBeDamaged");

	Params::IValDamageable_CanBeDamaged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDamageable.AlwaysDamageable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDamageable::AlwaysDamageable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageable", "AlwaysDamageable");

	Params::IValDamageable_AlwaysDamageable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDamageExecutionCalc
// (None)

class UClass* UValDamageExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDamageExecutionCalc");

	return Clss;
}


// ValDamageExecutionCalc Valhalla.Default__ValDamageExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDamageExecutionCalc* UValDamageExecutionCalc::GetDefaultObj()
{
	static class UValDamageExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDamageExecutionCalc*>(UValDamageExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDamageIndicatorActor
// (Actor)

class UClass* AValDamageIndicatorActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDamageIndicatorActor");

	return Clss;
}


// ValDamageIndicatorActor Valhalla.Default__ValDamageIndicatorActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDamageIndicatorActor* AValDamageIndicatorActor::GetDefaultObj()
{
	static class AValDamageIndicatorActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDamageIndicatorActor*>(AValDamageIndicatorActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDamageIndicatorActor.OnSpawnCompleteTimerExpired
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDamageIndicatorActor::OnSpawnCompleteTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageIndicatorActor", "OnSpawnCompleteTimerExpired");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDamageIndicatorActor.OnShutdownTimerExpired
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDamageIndicatorActor::OnShutdownTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageIndicatorActor", "OnShutdownTimerExpired");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDamageIndicatorActor.OnIndicatorTimerExpired
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDamageIndicatorActor::OnIndicatorTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageIndicatorActor", "OnIndicatorTimerExpired");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDamageIndicatorActor.IsTargetValidToTrack
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDamageIndicatorActor::IsTargetValidToTrack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageIndicatorActor", "IsTargetValidToTrack");

	Params::AValDamageIndicatorActor_IsTargetValidToTrack_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDamageIndicatorActor.BeginShutdown
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDamageIndicatorActor::BeginShutdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDamageIndicatorActor", "BeginShutdown");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValDataManager
// (Actor)

class UClass* AValDataManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDataManager");

	return Clss;
}


// ValDataManager Valhalla.Default__ValDataManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDataManager* AValDataManager::GetDefaultObj()
{
	static class AValDataManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDataManager*>(AValDataManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDataManager.OnPlayerInfoReady
// (Native, Protected)
// Parameters:
// class URHS_PlayerInfo*             PlayerInfo                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDataManager::OnPlayerInfoReady(class URHS_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "OnPlayerInfoReady");

	Params::AValDataManager_OnPlayerInfoReady_Params Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDataManager.OnInventoryUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValDataManager::OnInventoryUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "OnInventoryUpdated");

	Params::AValDataManager_OnInventoryUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDataManager.OnInventoryOrderResults
// (Native, Protected, HasDefaults)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Guid            OrderReferenceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDataManager::OnInventoryOrderResults(bool Success, const struct CoreUObject_Guid& OrderReferenceId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "OnInventoryOrderResults");

	Params::AValDataManager_OnInventoryOrderResults_Params Parms{};

	Parms.Success = Success;
	Parms.OrderReferenceId = OrderReferenceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDataManager.OnInventoryLoaded
// (Native, Protected)
// Parameters:

void AValDataManager::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDataManager.OnDataManagerReady
// (Native, Protected)
// Parameters:

void AValDataManager::OnDataManagerReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "OnDataManagerReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDataManager.IsDataManagerReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDataManager::IsDataManagerReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "IsDataManagerReady");

	Params::AValDataManager_IsDataManagerReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataManager.GetPlayerUuid
// (Final, Native, Public, HasDefaults)
// Parameters:
// bool                               LogError                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Guid            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Guid AValDataManager::GetPlayerUuid(bool LogError)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "GetPlayerUuid");

	Params::AValDataManager_GetPlayerUuid_Params Parms{};

	Parms.LogError = LogError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataManager.GetPlayerInventory
// (Final, Native, Public)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* AValDataManager::GetPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "GetPlayerInventory");

	Params::AValDataManager_GetPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataManager.GetOwningPlayer
// (Final, Native, Public)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* AValDataManager::GetOwningPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "GetOwningPlayer");

	Params::AValDataManager_GetOwningPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataManager.GetGameState
// (Final, Native, Protected)
// Parameters:
// bool                               LogError                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValGameState*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValGameState* AValDataManager::GetGameState(bool LogError)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "GetGameState");

	Params::AValDataManager_GetGameState_Params Parms{};

	Parms.LogError = LogError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataManager.GetGameMode
// (Final, Native, Protected)
// Parameters:
// class AGameModeBase*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGameModeBase* AValDataManager::GetGameMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataManager", "GetGameMode");

	Params::AValDataManager_GetGameMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDataTableManager
// (None)

class UClass* UValDataTableManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDataTableManager");

	return Clss;
}


// ValDataTableManager Valhalla.Default__ValDataTableManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDataTableManager* UValDataTableManager::GetDefaultObj()
{
	static class UValDataTableManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDataTableManager*>(UValDataTableManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDataTableManager.GetUpgradeTreesTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetUpgradeTreesTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetUpgradeTreesTable");

	Params::UValDataTableManager_GetUpgradeTreesTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetUpgradeTreeRowNames
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                OutUpgradeTrees                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValDataTableManager::GetUpgradeTreeRowNames(TArray<class FName>* OutUpgradeTrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetUpgradeTreeRowNames");

	Params::UValDataTableManager_GetUpgradeTreeRowNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTrees != nullptr)
		*OutUpgradeTrees = std::move(Parms.OutUpgradeTrees);

}


// Function Valhalla.ValDataTableManager.GetUpgradeTreeNodes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        UpgradeTree                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FName, struct Valhalla_UpgradeTreeNode>OutUpgradeTreeNodes                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UValDataTableManager::GetUpgradeTreeNodes(class FName UpgradeTree, TMap<class FName, struct Valhalla_UpgradeTreeNode>* OutUpgradeTreeNodes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetUpgradeTreeNodes");

	Params::UValDataTableManager_GetUpgradeTreeNodes_Params Parms{};

	Parms.UpgradeTree = UpgradeTree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTreeNodes != nullptr)
		*OutUpgradeTreeNodes = Parms.OutUpgradeTreeNodes;

}


// Function Valhalla.ValDataTableManager.GetUpgradeTreeNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        TreeName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        UpgradeName                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_UpgradeTreeNode    OutUpgradeTreeNode                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetUpgradeTreeNode(class FName& TreeName, class FName& UpgradeName, struct Valhalla_UpgradeTreeNode* OutUpgradeTreeNode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetUpgradeTreeNode");

	Params::UValDataTableManager_GetUpgradeTreeNode_Params Parms{};

	Parms.TreeName = TreeName;
	Parms.UpgradeName = UpgradeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTreeNode != nullptr)
		*OutUpgradeTreeNode = std::move(Parms.OutUpgradeTreeNode);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetUpgradeTree
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        TreeName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_UpgradeTree        OutUpgradeTree                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetUpgradeTree(class FName& TreeName, struct Valhalla_UpgradeTree* OutUpgradeTree)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetUpgradeTree");

	Params::UValDataTableManager_GetUpgradeTree_Params Parms{};

	Parms.TreeName = TreeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTree != nullptr)
		*OutUpgradeTree = std::move(Parms.OutUpgradeTree);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetTable
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  PCachedTable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_SoftObjectPath  Path                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetTable(class UDataTable* PCachedTable, const struct CoreUObject_SoftObjectPath& Path)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetTable");

	Params::UValDataTableManager_GetTable_Params Parms{};

	Parms.PCachedTable = PCachedTable;
	Parms.Path = Path;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetShopContracts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_ContractShop>Shop                                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValDataTableManager::GetShopContracts(TArray<struct Valhalla_ContractShop>* Shop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetShopContracts");

	Params::UValDataTableManager_GetShopContracts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Shop != nullptr)
		*Shop = std::move(Parms.Shop);

}


// Function Valhalla.ValDataTableManager.GetShopContract
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ShopContractID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractShop       ShopContract                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetShopContract(class FName ShopContractID, struct Valhalla_ContractShop* ShopContract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetShopContract");

	Params::UValDataTableManager_GetShopContract_Params Parms{};

	Parms.ShopContractID = ShopContractID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ShopContract != nullptr)
		*ShopContract = std::move(Parms.ShopContract);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetMissionTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetMissionTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetMissionTable");

	Params::UValDataTableManager_GetMissionTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetMissionData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        Name                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_MissionData        Data                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetMissionData(class FName Name, struct Valhalla_MissionData* Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetMissionData");

	Params::UValDataTableManager_GetMissionData_Params Parms{};

	Parms.Name = Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetItemUpgradeTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetItemUpgradeTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetItemUpgradeTable");

	Params::UValDataTableManager_GetItemUpgradeTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetItemUpgrade
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ItemName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_BoostItem          OutItemUpgrade                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetItemUpgrade(class FName& ItemName, struct Valhalla_BoostItem* OutItemUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetItemUpgrade");

	Params::UValDataTableManager_GetItemUpgrade_Params Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutItemUpgrade != nullptr)
		*OutItemUpgrade = std::move(Parms.OutItemUpgrade);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetItemTreesTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetItemTreesTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetItemTreesTable");

	Params::UValDataTableManager_GetItemTreesTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetItemTreesByCategory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class ETreeCategory           Category                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                OutUpgradeTrees                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValDataTableManager::GetItemTreesByCategory(enum class ETreeCategory Category, TArray<class FName>* OutUpgradeTrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetItemTreesByCategory");

	Params::UValDataTableManager_GetItemTreesByCategory_Params Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTrees != nullptr)
		*OutUpgradeTrees = std::move(Parms.OutUpgradeTrees);

}


// Function Valhalla.ValDataTableManager.GetItemTree
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ItemTreeName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_BoostTree          OutItemTree                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetItemTree(class FName ItemTreeName, struct Valhalla_BoostTree* OutItemTree)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetItemTree");

	Params::UValDataTableManager_GetItemTree_Params Parms{};

	Parms.ItemTreeName = ItemTreeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutItemTree != nullptr)
		*OutItemTree = std::move(Parms.OutItemTree);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetGameplayTextTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetGameplayTextTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetGameplayTextTable");

	Params::UValDataTableManager_GetGameplayTextTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetGameplayText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Text                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetGameplayText(struct GameplayTags_GameplayTag& Tag, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetGameplayText");

	Params::UValDataTableManager_GetGameplayText_Params Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Text != nullptr)
		*Text = Parms.Text;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetFrontierScoringConfigTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetFrontierScoringConfigTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetFrontierScoringConfigTable");

	Params::UValDataTableManager_GetFrontierScoringConfigTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetFrontierScoringConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        RowName                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_FrontierScoring    FrontierScoring                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetFrontierScoringConfig(class FName RowName, struct Valhalla_FrontierScoring* FrontierScoring)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetFrontierScoringConfig");

	Params::UValDataTableManager_GetFrontierScoringConfig_Params Parms{};

	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FrontierScoring != nullptr)
		*FrontierScoring = std::move(Parms.FrontierScoring);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetFirstGameplayTextByContainer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerTagContainer                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                        Text                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetFirstGameplayTextByContainer(struct GameplayTags_GameplayTagContainer& TagContainer, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetFirstGameplayTextByContainer");

	Params::UValDataTableManager_GetFirstGameplayTextByContainer_Params Parms{};

	Parms.TagContainer = TagContainer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Text != nullptr)
		*Text = Parms.Text;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetFabricatorItemsTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetFabricatorItemsTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetFabricatorItemsTable");

	Params::UValDataTableManager_GetFabricatorItemsTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetFabricatorItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ItemName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_FabricatorItem     OutFabricatorItem                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetFabricatorItem(class FName& ItemName, struct Valhalla_FabricatorItem* OutFabricatorItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetFabricatorItem");

	Params::UValDataTableManager_GetFabricatorItem_Params Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutFabricatorItem != nullptr)
		*OutFabricatorItem = std::move(Parms.OutFabricatorItem);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetDamageSourcesTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UValDataTableManager::GetDamageSourcesTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetDamageSourcesTable");

	Params::UValDataTableManager_GetDamageSourcesTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetDamageSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    DamageSource                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_DamageSourceMappingOutDamageSource                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetDamageSource(const struct GameplayTags_GameplayTag& DamageSource, struct Valhalla_DamageSourceMapping* OutDamageSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetDamageSource");

	Params::UValDataTableManager_GetDamageSource_Params Parms{};

	Parms.DamageSource = DamageSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDamageSource != nullptr)
		*OutDamageSource = std::move(Parms.OutDamageSource);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetContractTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        TaskId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ContractTask       Task                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetContractTask(class FName TaskId, struct Valhalla_ContractTask* Task)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetContractTask");

	Params::UValDataTableManager_GetContractTask_Params Parms{};

	Parms.TaskId = TaskId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Task != nullptr)
		*Task = std::move(Parms.Task);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetContract
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ContractId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_Contract           Contract                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDataTableManager::GetContract(class FName ContractId, struct Valhalla_Contract* Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetContract");

	Params::UValDataTableManager_GetContract_Params Parms{};

	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Contract != nullptr)
		*Contract = std::move(Parms.Contract);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDataTableManager.GetChildrenNodes
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UDataTable*                  Table                                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                ChildrenNodes                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<class FName, struct Valhalla_UpgradeTreeNode>OutUpgradeTreeNodes                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UValDataTableManager::GetChildrenNodes(class UDataTable* Table, TArray<class FName>& ChildrenNodes, TMap<class FName, struct Valhalla_UpgradeTreeNode>* OutUpgradeTreeNodes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDataTableManager", "GetChildrenNodes");

	Params::UValDataTableManager_GetChildrenNodes_Params Parms{};

	Parms.Table = Table;
	Parms.ChildrenNodes = ChildrenNodes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeTreeNodes != nullptr)
		*OutUpgradeTreeNodes = Parms.OutUpgradeTreeNodes;

}


// Class Valhalla.ValDependencyInterface
// (None)

class UClass* IValDependencyInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDependencyInterface");

	return Clss;
}


// ValDependencyInterface Valhalla.Default__ValDependencyInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IValDependencyInterface* IValDependencyInterface::GetDefaultObj()
{
	static class IValDependencyInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IValDependencyInterface*>(IValDependencyInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDependencyInterface.RegisterDependency
// (Native, Public)
// Parameters:
// class FName                        Category                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        DependencyName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     DependencyObject                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValDependencyInterface::RegisterDependency(class FName Category, class FName DependencyName, class UObject* DependencyObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDependencyInterface", "RegisterDependency");

	Params::IValDependencyInterface_RegisterDependency_Params Parms{};

	Parms.Category = Category;
	Parms.DependencyName = DependencyName;
	Parms.DependencyObject = DependencyObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDependencyInterface.HasDependencies
// (Native, Public)
// Parameters:
// class FName                        Category                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDependencyInterface::HasDependencies(class FName Category)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDependencyInterface", "HasDependencies");

	Params::IValDependencyInterface_HasDependencies_Params Parms{};

	Parms.Category = Category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDependencyInterface.HasAnyDependencies
// (Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValDependencyInterface::HasAnyDependencies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDependencyInterface", "HasAnyDependencies");

	Params::IValDependencyInterface_HasAnyDependencies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDependencyInterface.DependencySatisfied
// (Native, Public)
// Parameters:
// class UWorld*                      World                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Category                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        DependencyName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IValDependencyInterface::DependencySatisfied(class UWorld* World, class FName Category, class FName DependencyName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDependencyInterface", "DependencySatisfied");

	Params::IValDependencyInterface_DependencySatisfied_Params Parms{};

	Parms.World = World;
	Parms.Category = Category;
	Parms.DependencyName = DependencyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDeployable
// (None)

class UClass* IValDeployable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDeployable");

	return Clss;
}


// ValDeployable Valhalla.Default__ValDeployable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValDeployable* IValDeployable::GetDefaultObj()
{
	static class IValDeployable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValDeployable*>(IValDeployable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDeployable.GetASC
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* IValDeployable::GetASC()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeployable", "GetASC");

	Params::IValDeployable_GetASC_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class Valhalla.ValDeployableAudioVisual
// (None)

class UClass* UValDeployableAudioVisual::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDeployableAudioVisual");

	return Clss;
}


// ValDeployableAudioVisual Valhalla.Default__ValDeployableAudioVisual
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDeployableAudioVisual* UValDeployableAudioVisual::GetDefaultObj()
{
	static class UValDeployableAudioVisual* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDeployableAudioVisual*>(UValDeployableAudioVisual::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDeviceAudioVisual
// (None)

class UClass* UValDeviceAudioVisual::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDeviceAudioVisual");

	return Clss;
}


// ValDeviceAudioVisual Valhalla.Default__ValDeviceAudioVisual
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDeviceAudioVisual* UValDeviceAudioVisual::GetDefaultObj()
{
	static class UValDeviceAudioVisual* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDeviceAudioVisual*>(UValDeviceAudioVisual::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDeviceAudioVisual.IsMelee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValDeviceAudioVisual::IsMelee()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeviceAudioVisual", "IsMelee");

	Params::UValDeviceAudioVisual_IsMelee_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDeviceAudioVisual.GetActionsSocketNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_ActionFX>   Actions                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ECameraPerspective      CameraPerspective                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UValDeviceAudioVisual::GetActionsSocketNames(TArray<struct Valhalla_ActionFX>& Actions, enum class ECameraPerspective CameraPerspective)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeviceAudioVisual", "GetActionsSocketNames");

	Params::UValDeviceAudioVisual_GetActionsSocketNames_Params Parms{};

	Parms.Actions = Actions;
	Parms.CameraPerspective = CameraPerspective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDeviceAudioVisual.GetActionsSocketCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_ActionFX>   Actions                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ECameraPerspective      CameraPerspective                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValDeviceAudioVisual::GetActionsSocketCount(TArray<struct Valhalla_ActionFX>& Actions, enum class ECameraPerspective CameraPerspective)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeviceAudioVisual", "GetActionsSocketCount");

	Params::UValDeviceAudioVisual_GetActionsSocketCount_Params Parms{};

	Parms.Actions = Actions;
	Parms.CameraPerspective = CameraPerspective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDoor
// (Actor)

class UClass* AValDoor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDoor");

	return Clss;
}


// ValDoor Valhalla.Default__ValDoor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDoor* AValDoor::GetDefaultObj()
{
	static class AValDoor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDoor*>(AValDoor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDoor.TryInteractDoor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValInteractablePanel*       InitiatorPanel                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDoor::TryInteractDoor(class AValCharacter* Initiator, class AValInteractablePanel* InitiatorPanel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "TryInteractDoor");

	Params::AValDoor_TryInteractDoor_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.InitiatorPanel = InitiatorPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.ToggleDoor
// (Final, Native, Protected)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::ToggleDoor(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "ToggleDoor");

	Params::AValDoor_ToggleDoor_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.StartChanneledInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "StartChanneledInteract");

	Params::AValDoor_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.SetIsCancelledChanneling
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsCancelled                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::SetIsCancelledChanneling(bool bIsCancelled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "SetIsCancelledChanneling");

	Params::AValDoor_SetIsCancelledChanneling_Params Parms{};

	Parms.bIsCancelled = bIsCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "SetCachedChanneler");

	Params::AValDoor_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.PredictInteractDoor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               bOpen                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::PredictInteractDoor(bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "PredictInteractDoor");

	Params::AValDoor_PredictInteractDoor_Params Parms{};

	Parms.bOpen = bOpen;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDoor.OnRep_DoorStartChannel
// (Final, Native, Public)
// Parameters:

void AValDoor::OnRep_DoorStartChannel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnRep_DoorStartChannel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.OnRep_DoorOpen
// (Final, Native, Public)
// Parameters:

void AValDoor::OnRep_DoorOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnRep_DoorOpen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.OnRep_Channeler
// (Final, Native, Public)
// Parameters:

void AValDoor::OnRep_Channeler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnRep_Channeler");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnEndOverlap");

	Params::AValDoor_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.OnDoorStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               DoorOpen                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::OnDoorStatusChanged(bool DoorOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnDoorStatusChanged");

	Params::AValDoor_OnDoorStatusChanged_Params Parms{};

	Parms.DoorOpen = DoorOpen;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDoor.OnDoorSetHidden
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDoor::OnDoorSetHidden()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnDoorSetHidden");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDoor.OnBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValDoor::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "OnBeginOverlap");

	Params::AValDoor_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.IsDoorOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDoor::IsDoorOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "IsDoorOpen");

	Params::AValDoor_IsDoorOpen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.GetIsCancelledChanneling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDoor::GetIsCancelledChanneling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "GetIsCancelledChanneling");

	Params::AValDoor_GetIsCancelledChanneling_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValDoor::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "GetInteractTextOverride");

	Params::AValDoor_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValDoor::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "GetInteractComponent");

	Params::AValDoor_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValDoor::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "GetChannelTime");

	Params::AValDoor_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValDoor::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "GetCachedChanneler");

	Params::AValDoor_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.EndChanneledInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDoor::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "EndChanneledInteract");

	Params::AValDoor_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.DelayCloseAkPortal
// (Final, Native, Protected)
// Parameters:

void AValDoor::DelayCloseAkPortal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "DelayCloseAkPortal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDoor.CalculateRequiredChannelTime
// (Final, Native, Protected, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValDoor::CalculateRequiredChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "CalculateRequiredChannelTime");

	Params::AValDoor_CalculateRequiredChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDoor.AttemptToClose
// (Final, Native, Public)
// Parameters:

void AValDoor::AttemptToClose()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDoor", "AttemptToClose");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDropPodVolume
// (Actor)

class UClass* AValDropPodVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDropPodVolume");

	return Clss;
}


// ValDropPodVolume Valhalla.Default__ValDropPodVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDropPodVolume* AValDropPodVolume::GetDefaultObj()
{
	static class AValDropPodVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDropPodVolume*>(AValDropPodVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDungeonRoomData
// (None)

class UClass* UValDungeonRoomData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonRoomData");

	return Clss;
}


// ValDungeonRoomData Valhalla.Default__ValDungeonRoomData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDungeonRoomData* UValDungeonRoomData::GetDefaultObj()
{
	static class UValDungeonRoomData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDungeonRoomData*>(UValDungeonRoomData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDungeonConfig
// (None)

class UClass* UValDungeonConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonConfig");

	return Clss;
}


// ValDungeonConfig Valhalla.Default__ValDungeonConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDungeonConfig* UValDungeonConfig::GetDefaultObj()
{
	static class UValDungeonConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDungeonConfig*>(UValDungeonConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEffectGivingVolume
// (Actor)

class UClass* AValEffectGivingVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEffectGivingVolume");

	return Clss;
}


// ValEffectGivingVolume Valhalla.Default__ValEffectGivingVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValEffectGivingVolume* AValEffectGivingVolume::GetDefaultObj()
{
	static class AValEffectGivingVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValEffectGivingVolume*>(AValEffectGivingVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValEffectGivingVolume.OnActorLeftVolume
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEffectGivingVolume::OnActorLeftVolume(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEffectGivingVolume", "OnActorLeftVolume");

	Params::AValEffectGivingVolume_OnActorLeftVolume_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValEffectGivingVolume.OnActorEnteredVolume
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEffectGivingVolume::OnActorEnteredVolume(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEffectGivingVolume", "OnActorEnteredVolume");

	Params::AValEffectGivingVolume_OnActorEnteredVolume_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValEffectVolume
// (Actor)

class UClass* AValEffectVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEffectVolume");

	return Clss;
}


// ValEffectVolume Valhalla.Default__ValEffectVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValEffectVolume* AValEffectVolume::GetDefaultObj()
{
	static class AValEffectVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValEffectVolume*>(AValEffectVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEngineerClassComponent
// (None)

class UClass* UValEngineerClassComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEngineerClassComponent");

	return Clss;
}


// ValEngineerClassComponent Valhalla.Default__ValEngineerClassComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEngineerClassComponent* UValEngineerClassComponent::GetDefaultObj()
{
	static class UValEngineerClassComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEngineerClassComponent*>(UValEngineerClassComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEnvQueryGenerator_Box
// (None)

class UClass* UValEnvQueryGenerator_Box::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEnvQueryGenerator_Box");

	return Clss;
}


// ValEnvQueryGenerator_Box Valhalla.Default__ValEnvQueryGenerator_Box
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEnvQueryGenerator_Box* UValEnvQueryGenerator_Box::GetDefaultObj()
{
	static class UValEnvQueryGenerator_Box* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEnvQueryGenerator_Box*>(UValEnvQueryGenerator_Box::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEnvQueryGenerator_Cover
// (None)

class UClass* UValEnvQueryGenerator_Cover::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEnvQueryGenerator_Cover");

	return Clss;
}


// ValEnvQueryGenerator_Cover Valhalla.Default__ValEnvQueryGenerator_Cover
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEnvQueryGenerator_Cover* UValEnvQueryGenerator_Cover::GetDefaultObj()
{
	static class UValEnvQueryGenerator_Cover* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEnvQueryGenerator_Cover*>(UValEnvQueryGenerator_Cover::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEnvQueryTest_3ptTrace
// (None)

class UClass* UValEnvQueryTest_3ptTrace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEnvQueryTest_3ptTrace");

	return Clss;
}


// ValEnvQueryTest_3ptTrace Valhalla.Default__ValEnvQueryTest_3ptTrace
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEnvQueryTest_3ptTrace* UValEnvQueryTest_3ptTrace::GetDefaultObj()
{
	static class UValEnvQueryTest_3ptTrace* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEnvQueryTest_3ptTrace*>(UValEnvQueryTest_3ptTrace::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValExperienceManager
// (Actor)

class UClass* AValExperienceManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceManager");

	return Clss;
}


// ValExperienceManager Valhalla.Default__ValExperienceManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValExperienceManager* AValExperienceManager::GetDefaultObj()
{
	static class AValExperienceManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValExperienceManager*>(AValExperienceManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceManager.ServerQueryPlayerXpInfo
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ExperienceType                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExperienceManager::ServerQueryPlayerXpInfo(const struct GameplayTags_GameplayTag& ExperienceType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "ServerQueryPlayerXpInfo");

	Params::AValExperienceManager_ServerQueryPlayerXpInfo_Params Parms{};

	Parms.ExperienceType = ExperienceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnRep_ExperienceInstances
// (Native, Protected)
// Parameters:

void AValExperienceManager::OnRep_ExperienceInstances()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnRep_ExperienceInstances");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnPlayerInfoReady
// (Native, Protected)
// Parameters:
// class URHS_PlayerInfo*             PlayerInfo                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExperienceManager::OnPlayerInfoReady(class URHS_PlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnPlayerInfoReady");

	Params::AValExperienceManager_OnPlayerInfoReady_Params Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnInventoryUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValExperienceManager::OnInventoryUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnInventoryUpdated");

	Params::AValExperienceManager_OnInventoryUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnInventoryLoaded
// (Native, Protected)
// Parameters:

void AValExperienceManager::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnInstanceLevel
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    ExperienceType                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExperienceManager::OnInstanceLevel(const struct GameplayTags_GameplayTag& ExperienceType, int32 CurrentLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnInstanceLevel");

	Params::AValExperienceManager_OnInstanceLevel_Params Parms{};

	Parms.ExperienceType = ExperienceType;
	Parms.CurrentLevel = CurrentLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnInstanceExperience
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    ExperienceType                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentXP                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExperienceManager::OnInstanceExperience(const struct GameplayTags_GameplayTag& ExperienceType, int32 CurrentXP)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnInstanceExperience");

	Params::AValExperienceManager_OnInstanceExperience_Params Parms{};

	Parms.ExperienceType = ExperienceType;
	Parms.CurrentXP = CurrentXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.OnAssetsLoaded
// (Native, Protected)
// Parameters:

void AValExperienceManager::OnAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "OnAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceManager.GetXpTable
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValXpTable*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValXpTable* AValExperienceManager::GetXpTable(struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetXpTable");

	Params::AValExperienceManager_GetXpTable_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetRequiredItemId
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValExperienceManager::GetRequiredItemId(struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetRequiredItemId");

	Params::AValExperienceManager_GetRequiredItemId_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetReputationTierAndDivision
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValTierConfig*              Tier                                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDivisionConfig*          Division                                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Level                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExperienceManager::GetReputationTierAndDivision(struct GameplayTags_GameplayTag& LevelType, class UValTierConfig** Tier, class UValDivisionConfig** Division, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetReputationTierAndDivision");

	Params::AValExperienceManager_GetReputationTierAndDivision_Params Parms{};

	Parms.LevelType = LevelType;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Tier != nullptr)
		*Tier = Parms.Tier;

	if (Division != nullptr)
		*Division = Parms.Division;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetPlayerXP
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValExperienceManager::GetPlayerXP(struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetPlayerXP");

	Params::AValExperienceManager_GetPlayerXP_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetPlayerTierAndDivision
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValTierConfig*              Tier                                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDivisionConfig*          Division                                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExperienceManager::GetPlayerTierAndDivision(struct GameplayTags_GameplayTag& LevelType, class UValTierConfig** Tier, class UValDivisionConfig** Division)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetPlayerTierAndDivision");

	Params::AValExperienceManager_GetPlayerTierAndDivision_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Tier != nullptr)
		*Tier = Parms.Tier;

	if (Division != nullptr)
		*Division = Parms.Division;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetPlayerLevel
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValExperienceManager::GetPlayerLevel(struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetPlayerLevel");

	Params::AValExperienceManager_GetPlayerLevel_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetExperienceData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ExperienceType                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ExperienceData     OutExperienceData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExperienceManager::GetExperienceData(struct GameplayTags_GameplayTag& ExperienceType, struct Valhalla_ExperienceData* OutExperienceData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetExperienceData");

	Params::AValExperienceManager_GetExperienceData_Params Parms{};

	Parms.ExperienceType = ExperienceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutExperienceData != nullptr)
		*OutExperienceData = std::move(Parms.OutExperienceData);

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceManager.GetAgentInstanceByTag
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    AgentTag                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ExperienceData     OutAgentData                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExperienceManager::GetAgentInstanceByTag(struct GameplayTags_GameplayTag& AgentTag, struct Valhalla_ExperienceData* OutAgentData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceManager", "GetAgentInstanceByTag");

	Params::AValExperienceManager_GetAgentInstanceByTag_Params Parms{};

	Parms.AgentTag = AgentTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutAgentData != nullptr)
		*OutAgentData = std::move(Parms.OutAgentData);

	return Parms.ReturnValue;

}


// Class Valhalla.ValExperienceTrackAsset
// (None)

class UClass* UValExperienceTrackAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTrackAsset");

	return Clss;
}


// ValExperienceTrackAsset Valhalla.Default__ValExperienceTrackAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTrackAsset* UValExperienceTrackAsset::GetDefaultObj()
{
	static class UValExperienceTrackAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTrackAsset*>(UValExperienceTrackAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTrackAsset.GetTierAndDivisionFromLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValTierConfig*              OutTier                                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDivisionConfig*          OutDivision                                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValExperienceTrackAsset::GetTierAndDivisionFromLevel(int32 Level, class UValTierConfig** OutTier, class UValDivisionConfig** OutDivision)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTrackAsset", "GetTierAndDivisionFromLevel");

	Params::UValExperienceTrackAsset_GetTierAndDivisionFromLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTier != nullptr)
		*OutTier = Parms.OutTier;

	if (OutDivision != nullptr)
		*OutDivision = Parms.OutDivision;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTrackAsset.GetRewardsAtLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ExperienceLevelRewardItem>Rewards                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValExperienceTrackAsset::GetRewardsAtLevel(int32 Level, TArray<struct Valhalla_ExperienceLevelRewardItem>* Rewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTrackAsset", "GetRewardsAtLevel");

	Params::UValExperienceTrackAsset_GetRewardsAtLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTrackAsset.GetRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_ExperienceLevelRewardItemGroup>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_ExperienceLevelRewardItemGroup> UValExperienceTrackAsset::GetRewards()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTrackAsset", "GetRewards");

	Params::UValExperienceTrackAsset_GetRewards_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValExperienceTracker
// (None)

class UClass* UValExperienceTracker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker");

	return Clss;
}


// ValExperienceTracker Valhalla.Default__ValExperienceTracker
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker* UValExperienceTracker::GetDefaultObj()
{
	static class UValExperienceTracker* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker*>(UValExperienceTracker::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker.GetPlayerState
// (Final, Native, Protected)
// Parameters:
// class AValPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerState* UValExperienceTracker::GetPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker", "GetPlayerState");

	Params::UValExperienceTracker_GetPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTracker.GetPlayerInventory
// (Final, Native, Protected)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* UValExperienceTracker::GetPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker", "GetPlayerInventory");

	Params::UValExperienceTracker_GetPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTracker.GetPlayerId
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Guid UValExperienceTracker::GetPlayerId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker", "GetPlayerId");

	Params::UValExperienceTracker_GetPlayerId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTracker.GetPlayerController
// (Final, Native, Protected)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* UValExperienceTracker::GetPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker", "GetPlayerController");

	Params::UValExperienceTracker_GetPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTracker.AddProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker::AddProgress(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker", "AddProgress");

	Params::UValExperienceTracker_AddProgress_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_EntryCost
// (None)

class UClass* UValExperienceTracker_EntryCost::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_EntryCost");

	return Clss;
}


// ValExperienceTracker_EntryCost Valhalla.Default__ValExperienceTracker_EntryCost
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_EntryCost* UValExperienceTracker_EntryCost::GetDefaultObj()
{
	static class UValExperienceTracker_EntryCost* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_EntryCost*>(UValExperienceTracker_EntryCost::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_EntryCost.OnXpTracksLoaded
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_EntryCost::OnXpTracksLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_EntryCost", "OnXpTracksLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_EntryCost.OnPlayerLevelChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_EntryCost::OnPlayerLevelChanged(const struct GameplayTags_GameplayTag& LevelType, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_EntryCost", "OnPlayerLevelChanged");

	Params::UValExperienceTracker_EntryCost_OnPlayerLevelChanged_Params Parms{};

	Parms.LevelType = LevelType;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_EntryCost.OnEntryCostUpdated
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_EntryCost::OnEntryCostUpdated(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_EntryCost", "OnEntryCostUpdated");

	Params::UValExperienceTracker_EntryCost_OnEntryCostUpdated_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_Extraction
// (None)

class UClass* UValExperienceTracker_Extraction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_Extraction");

	return Clss;
}


// ValExperienceTracker_Extraction Valhalla.Default__ValExperienceTracker_Extraction
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_Extraction* UValExperienceTracker_Extraction::GetDefaultObj()
{
	static class UValExperienceTracker_Extraction* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_Extraction*>(UValExperienceTracker_Extraction::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_Extraction.OnPlayerExtracted
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Extraction::OnPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Extraction", "OnPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_Extraction_Bonus
// (None)

class UClass* UValExperienceTracker_Extraction_Bonus::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_Extraction_Bonus");

	return Clss;
}


// ValExperienceTracker_Extraction_Bonus Valhalla.Default__ValExperienceTracker_Extraction_Bonus
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_Extraction_Bonus* UValExperienceTracker_Extraction_Bonus::GetDefaultObj()
{
	static class UValExperienceTracker_Extraction_Bonus* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_Extraction_Bonus*>(UValExperienceTracker_Extraction_Bonus::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_Extraction_Bonus.OnPlayerExtracted
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Extraction_Bonus::OnPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Extraction_Bonus", "OnPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_Extraction_Bonus.OnInventoryLoaded
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Extraction_Bonus::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Extraction_Bonus", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_Extraction_Bonus.GetBonuses
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UValExperienceTracker_Extraction_Bonus::GetBonuses()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Extraction_Bonus", "GetBonuses");

	Params::UValExperienceTracker_Extraction_Bonus_GetBonuses_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValExperienceTracker_ItemFound
// (None)

class UClass* UValExperienceTracker_ItemFound::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_ItemFound");

	return Clss;
}


// ValExperienceTracker_ItemFound Valhalla.Default__ValExperienceTracker_ItemFound
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_ItemFound* UValExperienceTracker_ItemFound::GetDefaultObj()
{
	static class UValExperienceTracker_ItemFound* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_ItemFound*>(UValExperienceTracker_ItemFound::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_ItemFound.OnItemFound
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValExperienceTracker_ItemFound::OnItemFound(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_ItemFound", "OnItemFound");

	Params::UValExperienceTracker_ItemFound_OnItemFound_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_ItemFound.OnDogTagFound
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                               bIsFriendly                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Split                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EPlayerLevelType        LevelType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_ItemFound::OnDogTagFound(bool bIsFriendly, int32 Split, struct Valhalla_InventoryItem& InventoryItem, enum class EPlayerLevelType LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_ItemFound", "OnDogTagFound");

	Params::UValExperienceTracker_ItemFound_OnDogTagFound_Params Parms{};

	Parms.bIsFriendly = bIsFriendly;
	Parms.Split = Split;
	Parms.InventoryItem = InventoryItem;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_Placement
// (None)

class UClass* UValExperienceTracker_Placement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_Placement");

	return Clss;
}


// ValExperienceTracker_Placement Valhalla.Default__ValExperienceTracker_Placement
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_Placement* UValExperienceTracker_Placement::GetDefaultObj()
{
	static class UValExperienceTracker_Placement* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_Placement*>(UValExperienceTracker_Placement::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_Placement.OnPlayerPlace
// (Final, Native, Protected)
// Parameters:
// int32                              Place                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_Placement::OnPlayerPlace(int32 Place)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Placement", "OnPlayerPlace");

	Params::UValExperienceTracker_Placement_OnPlayerPlace_Params Parms{};

	Parms.Place = Place;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_Reputation_Bonus
// (None)

class UClass* UValExperienceTracker_Reputation_Bonus::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_Reputation_Bonus");

	return Clss;
}


// ValExperienceTracker_Reputation_Bonus Valhalla.Default__ValExperienceTracker_Reputation_Bonus
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_Reputation_Bonus* UValExperienceTracker_Reputation_Bonus::GetDefaultObj()
{
	static class UValExperienceTracker_Reputation_Bonus* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_Reputation_Bonus*>(UValExperienceTracker_Reputation_Bonus::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_Reputation_Bonus.OnPlayerUpdateDead
// (Final, Native, Protected)
// Parameters:
// bool                               bIsDead                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_Reputation_Bonus::OnPlayerUpdateDead(bool bIsDead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Reputation_Bonus", "OnPlayerUpdateDead");

	Params::UValExperienceTracker_Reputation_Bonus_OnPlayerUpdateDead_Params Parms{};

	Parms.bIsDead = bIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_Reputation_Bonus.OnPlayerExtracted
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Reputation_Bonus::OnPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Reputation_Bonus", "OnPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_Reputation_Bonus.OnInventoryLoaded
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Reputation_Bonus::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Reputation_Bonus", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_Reputation_Bonus.GetServerWorldTime
// (Final, Native, Protected)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValExperienceTracker_Reputation_Bonus::GetServerWorldTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Reputation_Bonus", "GetServerWorldTime");

	Params::UValExperienceTracker_Reputation_Bonus_GetServerWorldTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExperienceTracker_Reputation_Bonus.CalculateBonusReputation
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_Reputation_Bonus::CalculateBonusReputation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_Reputation_Bonus", "CalculateBonusReputation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValExperienceTracker_Stat
// (None)

class UClass* UValExperienceTracker_Stat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_Stat");

	return Clss;
}


// ValExperienceTracker_Stat Valhalla.Default__ValExperienceTracker_Stat
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_Stat* UValExperienceTracker_Stat::GetDefaultObj()
{
	static class UValExperienceTracker_Stat* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_Stat*>(UValExperienceTracker_Stat::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValExperienceTracker_TimeAlive
// (None)

class UClass* UValExperienceTracker_TimeAlive::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExperienceTracker_TimeAlive");

	return Clss;
}


// ValExperienceTracker_TimeAlive Valhalla.Default__ValExperienceTracker_TimeAlive
// (Public, ClassDefaultObject, ArchetypeObject)

class UValExperienceTracker_TimeAlive* UValExperienceTracker_TimeAlive::GetDefaultObj()
{
	static class UValExperienceTracker_TimeAlive* Default = nullptr;

	if (!Default)
		Default = static_cast<UValExperienceTracker_TimeAlive*>(UValExperienceTracker_TimeAlive::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExperienceTracker_TimeAlive.OnPlayerUpdateDead
// (Final, Native, Protected)
// Parameters:
// bool                               bIsDead                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValExperienceTracker_TimeAlive::OnPlayerUpdateDead(bool bIsDead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_TimeAlive", "OnPlayerUpdateDead");

	Params::UValExperienceTracker_TimeAlive_OnPlayerUpdateDead_Params Parms{};

	Parms.bIsDead = bIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_TimeAlive.OnPlayerExtracted
// (Final, Native, Protected)
// Parameters:

void UValExperienceTracker_TimeAlive::OnPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_TimeAlive", "OnPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExperienceTracker_TimeAlive.GetServerWorldTime
// (Final, Native, Protected)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValExperienceTracker_TimeAlive::GetServerWorldTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExperienceTracker_TimeAlive", "GetServerWorldTime");

	Params::UValExperienceTracker_TimeAlive_GetServerWorldTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValExplosiveBarrel
// (Actor)

class UClass* AValExplosiveBarrel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExplosiveBarrel");

	return Clss;
}


// ValExplosiveBarrel Valhalla.Default__ValExplosiveBarrel
// (Public, ClassDefaultObject, ArchetypeObject)

class AValExplosiveBarrel* AValExplosiveBarrel::GetDefaultObj()
{
	static class AValExplosiveBarrel* Default = nullptr;

	if (!Default)
		Default = static_cast<AValExplosiveBarrel*>(AValExplosiveBarrel::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValExplosiveBarrel.SetPhysicsSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Simulated                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::SetPhysicsSimulation(bool Simulated)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "SetPhysicsSimulation");

	Params::AValExplosiveBarrel_SetPhysicsSimulation_Params Parms{};

	Parms.Simulated = Simulated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExplosiveBarrel.OnRep_HoldingCharacter
// (Final, Native, Public)
// Parameters:

void AValExplosiveBarrel::OnRep_HoldingCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "OnRep_HoldingCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExplosiveBarrel.Multicast_ThrowBarrel
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          ThrowVector                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::Multicast_ThrowBarrel(const struct CoreUObject_Vector& ThrowVector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "Multicast_ThrowBarrel");

	Params::AValExplosiveBarrel_Multicast_ThrowBarrel_Params Parms{};

	Parms.ThrowVector = ThrowVector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExplosiveBarrel.IsHeld
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExplosiveBarrel::IsHeld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "IsHeld");

	Params::AValExplosiveBarrel_IsHeld_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "Interact");

	Params::AValExplosiveBarrel_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValExplosiveBarrel.GetInteractTextType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValInteractText        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValInteractText AValExplosiveBarrel::GetInteractTextType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "GetInteractTextType");

	Params::AValExplosiveBarrel_GetInteractTextType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValExplosiveBarrel::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "GetInteractTextOverride");

	Params::AValExplosiveBarrel_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValExplosiveBarrel::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "GetInteractText");

	Params::AValExplosiveBarrel_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValExplosiveBarrel::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "GetInteractComponent");

	Params::AValExplosiveBarrel_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.GetGrabbableComponent
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValExplosiveBarrel::GetGrabbableComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "GetGrabbableComponent");

	Params::AValExplosiveBarrel_GetGrabbableComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExplosiveBarrel::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "CanInteract");

	Params::AValExplosiveBarrel_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.BP_ThrowBarrel
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          ThrowVector                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::BP_ThrowBarrel(const struct CoreUObject_Vector& ThrowVector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "BP_ThrowBarrel");

	Params::AValExplosiveBarrel_BP_ThrowBarrel_Params Parms{};

	Parms.ThrowVector = ThrowVector;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValExplosiveBarrel.BP_OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::BP_OnInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "BP_OnInteract");

	Params::AValExplosiveBarrel_BP_OnInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValExplosiveBarrel.BP_OnHoldingCharacterUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValExplosiveBarrel::BP_OnHoldingCharacterUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "BP_OnHoldingCharacterUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValExplosiveBarrel.BP_OnDetachFromHolder
// (Event, Public, BlueprintEvent)
// Parameters:

void AValExplosiveBarrel::BP_OnDetachFromHolder()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "BP_OnDetachFromHolder");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValExplosiveBarrel.BP_CanInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValExplosiveBarrel::BP_CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "BP_CanInteract");

	Params::AValExplosiveBarrel_BP_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValExplosiveBarrel.ApplyHealthBonusByLevel
// (Final, Native, Protected)
// Parameters:
// class UValSecurityLevel*           CurrentSecurityLevel                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValExplosiveBarrel::ApplyHealthBonusByLevel(class UValSecurityLevel* CurrentSecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValExplosiveBarrel", "ApplyHealthBonusByLevel");

	Params::AValExplosiveBarrel_ApplyHealthBonusByLevel_Params Parms{};

	Parms.CurrentSecurityLevel = CurrentSecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValBaseCrate
// (Actor)

class UClass* AValBaseCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBaseCrate");

	return Clss;
}


// ValBaseCrate Valhalla.Default__ValBaseCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class AValBaseCrate* AValBaseCrate::GetDefaultObj()
{
	static class AValBaseCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<AValBaseCrate*>(AValBaseCrate::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValBaseCrate.UpdateInteractableCharacters
// (Event, Public, BlueprintEvent)
// Parameters:

void AValBaseCrate::UpdateInteractableCharacters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "UpdateInteractableCharacters");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValBaseCrate.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBaseCrate::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "SetCachedChanneler");

	Params::AValBaseCrate_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnRep_ShouldGenerateOverlapEvents
// (Native, Protected)
// Parameters:

void AValBaseCrate::OnRep_ShouldGenerateOverlapEvents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnRep_ShouldGenerateOverlapEvents");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnRep_Inventory
// (Final, Native, Protected)
// Parameters:

void AValBaseCrate::OnRep_Inventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnRep_Inventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnRep_Initiator
// (Final, Native, Protected)
// Parameters:

void AValBaseCrate::OnRep_Initiator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnRep_Initiator");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnRep_CrateState
// (Native, Protected)
// Parameters:

void AValBaseCrate::OnRep_CrateState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnRep_CrateState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnRep_Channeler
// (Final, Native, Protected)
// Parameters:

void AValBaseCrate::OnRep_Channeler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnRep_Channeler");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValBaseCrate.OnPlayerStoppedUsing
// (Event, Public, BlueprintEvent)
// Parameters:

void AValBaseCrate::OnPlayerStoppedUsing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnPlayerStoppedUsing");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValBaseCrate.OnPlayerStartedUsing
// (Event, Public, BlueprintEvent)
// Parameters:

void AValBaseCrate::OnPlayerStartedUsing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnPlayerStartedUsing");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValBaseCrate.OnFirstOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValPlayerController*        ValPC                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValBaseCrate::OnFirstOpen(class AValPlayerController* ValPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "OnFirstOpen");

	Params::AValBaseCrate_OnFirstOpen_Params Parms{};

	Parms.ValPC = ValPC;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValBaseCrate.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValBaseCrate::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetMesh");

	Params::AValBaseCrate_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValBaseCrate::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetInteractComponent");

	Params::AValBaseCrate_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ECrateState             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ECrateState AValBaseCrate::GetCurrentState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetCurrentState");

	Params::AValBaseCrate_GetCurrentState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBoxComponent* AValBaseCrate::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetCollisionComp");

	Params::AValBaseCrate_GetCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValBaseCrate::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetChannelTime");

	Params::AValBaseCrate_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValBaseCrate::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetCachedChanneler");

	Params::AValBaseCrate_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValBaseCrate::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "GetBlockInteractReason");

	Params::AValBaseCrate_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.DetermineInteractEligibility
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValBaseCrate::DetermineInteractEligibility(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "DetermineInteractEligibility");

	Params::AValBaseCrate_DetermineInteractEligibility_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValBaseCrate.BPOnClientStartInteract
// (Event, Public, BlueprintEvent)
// Parameters:

void AValBaseCrate::BPOnClientStartInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "BPOnClientStartInteract");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValBaseCrate.BPOnClientEndInteract
// (Event, Public, BlueprintEvent)
// Parameters:

void AValBaseCrate::BPOnClientEndInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValBaseCrate", "BPOnClientEndInteract");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValExtractionCrate
// (Actor)

class UClass* AValExtractionCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValExtractionCrate");

	return Clss;
}


// ValExtractionCrate Valhalla.Default__ValExtractionCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class AValExtractionCrate* AValExtractionCrate::GetDefaultObj()
{
	static class AValExtractionCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<AValExtractionCrate*>(AValExtractionCrate::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValFlashlightActor
// (Actor)

class UClass* AValFlashlightActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValFlashlightActor");

	return Clss;
}


// ValFlashlightActor Valhalla.Default__ValFlashlightActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValFlashlightActor* AValFlashlightActor::GetDefaultObj()
{
	static class AValFlashlightActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValFlashlightActor*>(AValFlashlightActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValFlashlightActor.OnSetEnabledUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValFlashlightActor::OnSetEnabledUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "OnSetEnabledUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValFlashlightActor.OnOwnerDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValFlashlightActor::OnOwnerDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "OnOwnerDied");

	Params::AValFlashlightActor_OnOwnerDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.OnLocalPCUpdatedViewTarget
// (Native, Protected)
// Parameters:
// class AActor*                      NewViewTarget                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValFlashlightActor::OnLocalPCUpdatedViewTarget(class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "OnLocalPCUpdatedViewTarget");

	Params::AValFlashlightActor_OnLocalPCUpdatedViewTarget_Params Parms{};

	Parms.NewViewTarget = NewViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.BP_OnUpdateOwner
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValFlashlightActor::BP_OnUpdateOwner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "BP_OnUpdateOwner");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.BP_OnUpdateFlashlightLevel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                              Level                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValFlashlightActor::BP_OnUpdateFlashlightLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "BP_OnUpdateFlashlightLevel");

	Params::AValFlashlightActor_BP_OnUpdateFlashlightLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.BP_OnRemoveDirectFlashlightFromTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>              Targets                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValFlashlightActor::BP_OnRemoveDirectFlashlightFromTargets(TArray<class AActor*>& Targets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "BP_OnRemoveDirectFlashlightFromTargets");

	Params::AValFlashlightActor_BP_OnRemoveDirectFlashlightFromTargets_Params Parms{};

	Parms.Targets = Targets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.BP_OnDisable
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValFlashlightActor::BP_OnDisable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "BP_OnDisable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValFlashlightActor.BP_OnApplyDirectFlashlightToTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>              Targets                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValFlashlightActor::BP_OnApplyDirectFlashlightToTargets(TArray<class AActor*>& Targets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFlashlightActor", "BP_OnApplyDirectFlashlightToTargets");

	Params::AValFlashlightActor_BP_OnApplyDirectFlashlightToTargets_Params Parms{};

	Parms.Targets = Targets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValFogDamageExecutionCalc
// (None)

class UClass* UValFogDamageExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValFogDamageExecutionCalc");

	return Clss;
}


// ValFogDamageExecutionCalc Valhalla.Default__ValFogDamageExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValFogDamageExecutionCalc* UValFogDamageExecutionCalc::GetDefaultObj()
{
	static class UValFogDamageExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValFogDamageExecutionCalc*>(UValFogDamageExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValFogInteraction
// (None)

class UClass* IValFogInteraction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValFogInteraction");

	return Clss;
}


// ValFogInteraction Valhalla.Default__ValFogInteraction
// (Public, ClassDefaultObject, ArchetypeObject)

class IValFogInteraction* IValFogInteraction::GetDefaultObj()
{
	static class IValFogInteraction* Default = nullptr;

	if (!Default)
		Default = static_cast<IValFogInteraction*>(IValFogInteraction::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterFootprintOverlayComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UValCharacterFootprintOverlayComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterFootprintOverlayComponent");

	return Clss;
}


// ValCharacterFootprintOverlayComponent Valhalla.Default__ValCharacterFootprintOverlayComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterFootprintOverlayComponent* UValCharacterFootprintOverlayComponent::GetDefaultObj()
{
	static class UValCharacterFootprintOverlayComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterFootprintOverlayComponent*>(UValCharacterFootprintOverlayComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterFootprintOverlay
// (None)

class UClass* UValCharacterFootprintOverlay::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterFootprintOverlay");

	return Clss;
}


// ValCharacterFootprintOverlay Valhalla.Default__ValCharacterFootprintOverlay
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterFootprintOverlay* UValCharacterFootprintOverlay::GetDefaultObj()
{
	static class UValCharacterFootprintOverlay* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterFootprintOverlay*>(UValCharacterFootprintOverlay::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterFootprintOverlay.OnUpdateVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bShow                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterFootprintOverlay::OnUpdateVisibility(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterFootprintOverlay", "OnUpdateVisibility");

	Params::UValCharacterFootprintOverlay_OnUpdateVisibility_Params Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValFootprint
// (Actor)

class UClass* AValFootprint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValFootprint");

	return Clss;
}


// ValFootprint Valhalla.Default__ValFootprint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValFootprint* AValFootprint::GetDefaultObj()
{
	static class AValFootprint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValFootprint*>(AValFootprint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValFootprint.BPUpdateFootprint
// (Event, Public, BlueprintEvent)
// Parameters:

void AValFootprint::BPUpdateFootprint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValFootprint", "BPUpdateFootprint");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValGameEngine
// (None)

class UClass* UValGameEngine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameEngine");

	return Clss;
}


// ValGameEngine Valhalla.Default__ValGameEngine
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameEngine* UValGameEngine::GetDefaultObj()
{
	static class UValGameEngine* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameEngine*>(UValGameEngine::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameInstanceBase
// (None)

class UClass* UValGameInstanceBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameInstanceBase");

	return Clss;
}


// ValGameInstanceBase Valhalla.Default__ValGameInstanceBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameInstanceBase* UValGameInstanceBase::GetDefaultObj()
{
	static class UValGameInstanceBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameInstanceBase*>(UValGameInstanceBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameInstanceBase.GetBackendServiceInterfaceIndex
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ControllerId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBackendService*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBackendService* UValGameInstanceBase::GetBackendServiceInterfaceIndex(int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstanceBase", "GetBackendServiceInterfaceIndex");

	Params::UValGameInstanceBase_GetBackendServiceInterfaceIndex_Params Parms{};

	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstanceBase.GetBackendServiceInterface
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBackendService*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBackendService* UValGameInstanceBase::GetBackendServiceInterface()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstanceBase", "GetBackendServiceInterface");

	Params::UValGameInstanceBase_GetBackendServiceInterface_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameInstance
// (None)

class UClass* UValGameInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameInstance");

	return Clss;
}


// ValGameInstance Valhalla.Default__ValGameInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameInstance* UValGameInstance::GetDefaultObj()
{
	static class UValGameInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameInstance*>(UValGameInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameInstance.WwiseStopAudio
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                              AudioID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TransitionDuration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EAkCurveInterpolation   FadeCurve                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::WwiseStopAudio(int32 AudioID, int32 TransitionDuration, enum class EAkCurveInterpolation FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "WwiseStopAudio");

	Params::UValGameInstance_WwiseStopAudio_Params Parms{};

	Parms.AudioID = AudioID;
	Parms.TransitionDuration = TransitionDuration;
	Parms.FadeCurve = FadeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.UpdateInitialCachedActivities
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::UpdateInitialCachedActivities()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "UpdateInitialCachedActivities");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.UpdateActivityProgress
// (Final, Native, Public)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::UpdateActivityProgress(int64 ActivityId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "UpdateActivityProgress");

	Params::UValGameInstance_UpdateActivityProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.TravelPendingURL
// (Final, Native, Protected)
// Parameters:

void UValGameInstance::TravelPendingURL()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "TravelPendingURL");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.SortActivities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValActivityPlayerInstance*>Activities                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UValActivityPlayerInstance*>SortedActivities                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameInstance::SortActivities(TArray<class UValActivityPlayerInstance*>& Activities, TArray<class UValActivityPlayerInstance*>* SortedActivities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SortActivities");

	Params::UValGameInstance_SortActivities_Params Parms{};

	Parms.Activities = Activities;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortedActivities != nullptr)
		*SortedActivities = std::move(Parms.SortedActivities);

}


// Function Valhalla.ValGameInstance.SetMatchSummaryData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_MatchSummaryData   NewMatchSummaryData                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UValGameInstance::SetMatchSummaryData(struct Valhalla_MatchSummaryData* NewMatchSummaryData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SetMatchSummaryData");

	Params::UValGameInstance_SetMatchSummaryData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NewMatchSummaryData != nullptr)
		*NewMatchSummaryData = std::move(Parms.NewMatchSummaryData);

}


// Function Valhalla.ValGameInstance.SetKickErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                        ErrorCode                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameInstance::SetKickErrorCode(class FText& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SetKickErrorCode");

	Params::UValGameInstance_SetKickErrorCode_Params Parms{};

	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.SetJoiningRemoteLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bJoining                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::SetJoiningRemoteLobby(bool bJoining)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SetJoiningRemoteLobby");

	Params::UValGameInstance_SetJoiningRemoteLobby_Params Parms{};

	Parms.bJoining = bJoining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.SetDisconnectErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                        ErrorCode                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameInstance::SetDisconnectErrorCode(class FText& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SetDisconnectErrorCode");

	Params::UValGameInstance_SetDisconnectErrorCode_Params Parms{};

	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.SetCurrentXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StartingXp                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GainedXP                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentXP                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::SetCurrentXP(const struct GameplayTags_GameplayTag& LevelType, int32 StartingXp, int32 GainedXP, int32 CurrentXP)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "SetCurrentXP");

	Params::UValGameInstance_SetCurrentXP_Params Parms{};

	Parms.LevelType = LevelType;
	Parms.StartingXp = StartingXp;
	Parms.GainedXP = GainedXP;
	Parms.CurrentXP = CurrentXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ProcessMotionDetected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Instagator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::ProcessMotionDetected(class AActor* Instagator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ProcessMotionDetected");

	Params::UValGameInstance_ProcessMotionDetected_Params Parms{};

	Parms.Instagator = Instagator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ProcessGunShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Instagator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::ProcessGunShot(class AActor* Instagator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ProcessGunShot");

	Params::UValGameInstance_ProcessGunShot_Params Parms{};

	Parms.Instagator = Instagator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.PostWorldAudioEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ReferenceTag                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::PostWorldAudioEvent(class AActor* Owner, const struct CoreUObject_Vector& Location, const struct GameplayTags_GameplayTag& ReferenceTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "PostWorldAudioEvent");

	Params::UValGameInstance_PostWorldAudioEvent_Params Parms{};

	Parms.Owner = Owner;
	Parms.Location = Location;
	Parms.ReferenceTag = ReferenceTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.PostEventWithCleanup
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*               AkEvent                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                  Metasound                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*             AudioComponent                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStopWhenAttachedToDestroyed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameInstance::PostEventWithCleanup(class UAkAudioEvent* AkEvent, class USoundBase* Metasound, class UAudioComponent** AudioComponent, class AActor* Actor, bool bStopWhenAttachedToDestroyed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "PostEventWithCleanup");

	Params::UValGameInstance_PostEventWithCleanup_Params Parms{};

	Parms.AkEvent = AkEvent;
	Parms.Metasound = Metasound;
	Parms.Actor = Actor;
	Parms.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.OpenPendingQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValPendingQueue*            PendingQueue                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::OpenPendingQueue(class UValPendingQueue* PendingQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OpenPendingQueue");

	Params::UValGameInstance_OpenPendingQueue_Params Parms{};

	Parms.PendingQueue = PendingQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.OpenOfflineQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValOfflineQueueData*        OfflineQueue                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::OpenOfflineQueue(class UValOfflineQueueData* OfflineQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OpenOfflineQueue");

	Params::UValGameInstance_OpenOfflineQueue_Params Parms{};

	Parms.OfflineQueue = OfflineQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.OpenMapName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        MapName                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::OpenMapName(class FName MapName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OpenMapName");

	Params::UValGameInstance_OpenMapName_Params Parms{};

	Parms.MapName = MapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.OpenLevelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ELevelType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::OpenLevelType(enum class ELevelType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OpenLevelType");

	Params::UValGameInstance_OpenLevelType_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.OnTravelURLReady
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct Engine_URL                  TravelURL                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameInstance::OnTravelURLReady(struct Engine_URL& TravelURL)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OnTravelURLReady");

	Params::UValGameInstance_OnTravelURLReady_Params Parms{};

	Parms.TravelURL = TravelURL;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.OnAudioFinishedPlaying
// (Final, Native, Private)
// Parameters:
// enum class EAkCallbackType         CallbackType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*             CallbackInfo                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::OnAudioFinishedPlaying(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "OnAudioFinishedPlaying");

	Params::UValGameInstance_OnAudioFinishedPlaying_Params Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.NetworkFailureEvent
// (Final, Native, Protected)
// Parameters:
// class UWorld*                      InWorld                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetDriver*                  InNetDriver                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ENetworkFailure         InFailureType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InErrorDescription                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::NetworkFailureEvent(class UWorld* InWorld, class UNetDriver* InNetDriver, enum class ENetworkFailure InFailureType, const class FString& InErrorDescription)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "NetworkFailureEvent");

	Params::UValGameInstance_NetworkFailureEvent_Params Parms{};

	Parms.InWorld = InWorld;
	Parms.InNetDriver = InNetDriver;
	Parms.InFailureType = InFailureType;
	Parms.InErrorDescription = InErrorDescription;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.LoadingScreenVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::LoadingScreenVisibilityChanged(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "LoadingScreenVisibilityChanged");

	Params::UValGameInstance_LoadingScreenVisibilityChanged_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.HandleLoginStatusChanged
// (Native, Protected)
// Parameters:
// enum class EBSLoginStatus          OldStatus                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EBSLoginStatus          NewStatus                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::HandleLoginStatusChanged(enum class EBSLoginStatus OldStatus, enum class EBSLoginStatus NewStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "HandleLoginStatusChanged");

	Params::UValGameInstance_HandleLoginStatusChanged_Params Parms{};

	Parms.OldStatus = OldStatus;
	Parms.NewStatus = NewStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.GetUnlockedPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                      OutUnlockedPerks                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameInstance::GetUnlockedPerks(TArray<int32>* OutUnlockedPerks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetUnlockedPerks");

	Params::UValGameInstance_GetUnlockedPerks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUnlockedPerks != nullptr)
		*OutUnlockedPerks = std::move(Parms.OutUnlockedPerks);

}


// Function Valhalla.ValGameInstance.GetPlayerXP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PlayerXPInfo       PlayerXPInfo                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetPlayerXP(const struct GameplayTags_GameplayTag& LevelType, struct Valhalla_PlayerXPInfo* PlayerXPInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetPlayerXP");

	Params::UValGameInstance_GetPlayerXP_Params Parms{};

	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerXPInfo != nullptr)
		*PlayerXPInfo = std::move(Parms.PlayerXPInfo);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetNetworkFailureSessionIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FString> UValGameInstance::GetNetworkFailureSessionIds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetNetworkFailureSessionIds");

	Params::UValGameInstance_GetNetworkFailureSessionIds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetKickErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        OutKickError                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetKickErrorCode(class FText* OutKickError)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetKickErrorCode");

	Params::UValGameInstance_GetKickErrorCode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutKickError != nullptr)
		*OutKickError = Parms.OutKickError;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetDisconnectErrorCode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        OutDisconnectError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetDisconnectErrorCode(class FText* OutDisconnectError)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetDisconnectErrorCode");

	Params::UValGameInstance_GetDisconnectErrorCode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDisconnectError != nullptr)
		*OutDisconnectError = Parms.OutDisconnectError;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetDataTableManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDataTableManager*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDataTableManager* UValGameInstance::GetDataTableManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetDataTableManager");

	Params::UValGameInstance_GetDataTableManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetActivityStartingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValActivityAsset*           Activity                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutStartingProgress                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetActivityStartingProgress(class UValActivityAsset* Activity, int32* OutStartingProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityStartingProgress");

	Params::UValGameInstance_GetActivityStartingProgress_Params Parms{};

	Parms.Activity = Activity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutStartingProgress != nullptr)
		*OutStartingProgress = Parms.OutStartingProgress;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetActivityRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>OutActivityRewards                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameInstance::GetActivityRewards(TArray<struct Valhalla_InventoryItem>* OutActivityRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityRewards");

	Params::UValGameInstance_GetActivityRewards_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActivityRewards != nullptr)
		*OutActivityRewards = std::move(Parms.OutActivityRewards);

}


// Function Valhalla.ValGameInstance.GetActivityRewardItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>OutActivityRewards                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameInstance::GetActivityRewardItems(TArray<struct Valhalla_InventoryItem>* OutActivityRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityRewardItems");

	Params::UValGameInstance_GetActivityRewardItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActivityRewards != nullptr)
		*OutActivityRewards = std::move(Parms.OutActivityRewards);

}


// Function Valhalla.ValGameInstance.GetActivityInstanceStartingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValActivityPlayerInstance*  PlayerActivity                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutStartingProgress                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetActivityInstanceStartingProgress(class UValActivityPlayerInstance* PlayerActivity, int32* OutStartingProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityInstanceStartingProgress");

	Params::UValGameInstance_GetActivityInstanceStartingProgress_Params Parms{};

	Parms.PlayerActivity = PlayerActivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutStartingProgress != nullptr)
		*OutStartingProgress = Parms.OutStartingProgress;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetActivityInstanceEndingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValActivityPlayerInstance*  PlayerActivity                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutEndingProgress                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetActivityInstanceEndingProgress(class UValActivityPlayerInstance* PlayerActivity, int32* OutEndingProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityInstanceEndingProgress");

	Params::UValGameInstance_GetActivityInstanceEndingProgress_Params Parms{};

	Parms.PlayerActivity = PlayerActivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutEndingProgress != nullptr)
		*OutEndingProgress = Parms.OutEndingProgress;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetActivityEndingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValActivityAsset*           Activity                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutEndingProgress                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameInstance::GetActivityEndingProgress(class UValActivityAsset* Activity, int32* OutEndingProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivityEndingProgress");

	Params::UValGameInstance_GetActivityEndingProgress_Params Parms{};

	Parms.Activity = Activity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutEndingProgress != nullptr)
		*OutEndingProgress = Parms.OutEndingProgress;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.GetActivitiesStartingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int64, int32>                 StartingActivityProgress                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void UValGameInstance::GetActivitiesStartingProgress(TMap<int64, int32>* StartingActivityProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivitiesStartingProgress");

	Params::UValGameInstance_GetActivitiesStartingProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StartingActivityProgress != nullptr)
		*StartingActivityProgress = Parms.StartingActivityProgress;

}


// Function Valhalla.ValGameInstance.GetActivitiesEndingProgress
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int64, int32>                 EndingActivityProgress                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UValGameInstance::GetActivitiesEndingProgress(TMap<int64, int32>* EndingActivityProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "GetActivitiesEndingProgress");

	Params::UValGameInstance_GetActivitiesEndingProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EndingActivityProgress != nullptr)
		*EndingActivityProgress = Parms.EndingActivityProgress;

}


// Function Valhalla.ValGameInstance.FlushMergedMeshCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::FlushMergedMeshCache()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "FlushMergedMeshCache");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ClearUnlockedPerks
// (Final, Native, Public)
// Parameters:

void UValGameInstance::ClearUnlockedPerks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ClearUnlockedPerks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ClearMatchSummaryState
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::ClearMatchSummaryState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ClearMatchSummaryState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ClearKickErrorCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::ClearKickErrorCode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ClearKickErrorCode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ClearDisconnectErrorCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::ClearDisconnectErrorCode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ClearDisconnectErrorCode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.ClearActivityRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameInstance::ClearActivityRewards()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "ClearActivityRewards");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.CalculateTotalProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValActivityPlayerInstance*  Activity                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameInstance::CalculateTotalProgress(class UValActivityPlayerInstance* Activity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "CalculateTotalProgress");

	Params::UValGameInstance_CalculateTotalProgress_Params Parms{};

	Parms.Activity = Activity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameInstance.CacheStartingPlayerActivities
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class UValActivityPlayerInstance*>PlayerActivities                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameInstance::CacheStartingPlayerActivities(TArray<class UValActivityPlayerInstance*>* PlayerActivities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "CacheStartingPlayerActivities");

	Params::UValGameInstance_CacheStartingPlayerActivities_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerActivities != nullptr)
		*PlayerActivities = std::move(Parms.PlayerActivities);

}


// Function Valhalla.ValGameInstance.CachePlayerXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::CachePlayerXP(int32 Value, const struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "CachePlayerXP");

	Params::UValGameInstance_CachePlayerXP_Params Parms{};

	Parms.Value = Value;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.BroadcastPendingQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValPendingQueue*            PendingQueue                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::BroadcastPendingQueue(class UValPendingQueue* PendingQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "BroadcastPendingQueue");

	Params::UValGameInstance_BroadcastPendingQueue_Params Parms{};

	Parms.PendingQueue = PendingQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.AddUnlockedPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                      NewUnlockedPerks                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameInstance::AddUnlockedPerks(TArray<int32>& NewUnlockedPerks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "AddUnlockedPerks");

	Params::UValGameInstance_AddUnlockedPerks_Params Parms{};

	Parms.NewUnlockedPerks = NewUnlockedPerks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.AddPlayerXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerExperienceSource XPSource                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameInstance::AddPlayerXP(int32 Value, const struct GameplayTags_GameplayTag& LevelType, enum class EPlayerExperienceSource XPSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "AddPlayerXP");

	Params::UValGameInstance_AddPlayerXP_Params Parms{};

	Parms.Value = Value;
	Parms.LevelType = LevelType;
	Parms.XPSource = XPSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameInstance.AddActivityRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>NewActivityRewards                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameInstance::AddActivityRewards(TArray<struct Valhalla_InventoryItem>& NewActivityRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameInstance", "AddActivityRewards");

	Params::UValGameInstance_AddActivityRewards_Params Parms{};

	Parms.NewActivityRewards = NewActivityRewards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameModeBase
// (Actor)

class UClass* AValGameModeBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameModeBase");

	return Clss;
}


// ValGameModeBase Valhalla.Default__ValGameModeBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameModeBase* AValGameModeBase::GetDefaultObj()
{
	static class AValGameModeBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameModeBase*>(AValGameModeBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameModeBase.OnAppSettingsFetched
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class URH_ConfigSubsystem*         ConfigSubsystem                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameModeBase::OnAppSettingsFetched(class URH_ConfigSubsystem* ConfigSubsystem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "OnAppSettingsFetched");

	Params::AValGameModeBase_OnAppSettingsFetched_Params Parms{};

	Parms.ConfigSubsystem = ConfigSubsystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameModeBase.GetUnrankedDogTagValue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameModeBase::GetUnrankedDogTagValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetUnrankedDogTagValue");

	Params::AValGameModeBase_GetUnrankedDogTagValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetReputationPool
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameModeBase::GetReputationPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetReputationPool");

	Params::AValGameModeBase_GetReputationPool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetPctOfPlayerAccountlevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameModeBase::GetPctOfPlayerAccountlevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetPctOfPlayerAccountlevel");

	Params::AValGameModeBase_GetPctOfPlayerAccountlevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetPctOfMMRVariance
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameModeBase::GetPctOfMMRVariance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetPctOfMMRVariance");

	Params::AValGameModeBase_GetPctOfMMRVariance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetPctOfEntryCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameModeBase::GetPctOfEntryCost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetPctOfEntryCost");

	Params::AValGameModeBase_GetPctOfEntryCost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetPctOfDogTagReputation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameModeBase::GetPctOfDogTagReputation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetPctOfDogTagReputation");

	Params::AValGameModeBase_GetPctOfDogTagReputation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetEntyCostFloor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameModeBase::GetEntyCostFloor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetEntyCostFloor");

	Params::AValGameModeBase_GetEntyCostFloor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameModeBase.GetCurrentSecurityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValSecurityLevel*           ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSecurityLevel* AValGameModeBase::GetCurrentSecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameModeBase", "GetCurrentSecurityLevel");

	Params::AValGameModeBase_GetCurrentSecurityLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameMode
// (Actor)

class UClass* AValGameMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode");

	return Clss;
}


// ValGameMode Valhalla.Default__ValGameMode
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode* AValGameMode::GetDefaultObj()
{
	static class AValGameMode* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode*>(AValGameMode::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode.TickTimer
// (Final, Native, Protected, HasOutParams)
// Parameters:
// float                              Value                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode::TickTimer(float* Value, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "TickTimer");

	Params::AValGameMode_TickTimer_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.ProcessPlayerEntryRequirements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValPlayerController*        ValPlayerController                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode::ProcessPlayerEntryRequirements(class AValPlayerController* ValPlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "ProcessPlayerEntryRequirements");

	Params::AValGameMode_ProcessPlayerEntryRequirements_Params Parms{};

	Parms.ValPlayerController = ValPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.OnSubLevelsReady
// (Final, Native, Protected)
// Parameters:

void AValGameMode::OnSubLevelsReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "OnSubLevelsReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.OnBotLoadoutsLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameMode::OnBotLoadoutsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "OnBotLoadoutsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.OnBotDataReady
// (Native, Protected)
// Parameters:

void AValGameMode::OnBotDataReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "OnBotDataReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.OnBotConfigLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameMode::OnBotConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "OnBotConfigLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.OnBotClassesLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameMode::OnBotClassesLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "OnBotClassesLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.IsBotDataReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode::IsBotDataReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "IsBotDataReady");

	Params::AValGameMode_IsBotDataReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetStatsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValStatsManager*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValStatsManager* AValGameMode::GetStatsManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetStatsManager");

	Params::AValGameMode_GetStatsManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetExpectedPlayerCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameMode::GetExpectedPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetExpectedPlayerCount");

	Params::AValGameMode_GetExpectedPlayerCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetEntryRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_EntryRequirement>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_EntryRequirement> AValGameMode::GetEntryRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetEntryRequirements");

	Params::AValGameMode_GetEntryRequirements_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetDefaultPlayerClass
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValGameMode::GetDefaultPlayerClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetDefaultPlayerClass");

	Params::AValGameMode_GetDefaultPlayerClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetBotWaveConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EBuildingType           BuildingType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode::GetBotWaveConfig(enum class EBuildingType BuildingType, struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetBotWaveConfig");

	Params::AValGameMode_GetBotWaveConfig_Params Parms{};

	Parms.BuildingType = BuildingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetAlarmWaveConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EBuildingType           BuildingType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode::GetAlarmWaveConfig(enum class EBuildingType BuildingType, struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetAlarmWaveConfig");

	Params::AValGameMode_GetAlarmWaveConfig_Params Parms{};

	Parms.BuildingType = BuildingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetAlarmBotSetConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    BotType                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode::GetAlarmBotSetConfig(struct GameplayTags_GameplayTag& BotType, struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetAlarmBotSetConfig");

	Params::AValGameMode_GetAlarmBotSetConfig_Params Parms{};

	Parms.BotType = BotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode.GetActiveTeams
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValTeamState*>       ActiveTeams                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameMode::GetActiveTeams(TArray<class AValTeamState*>* ActiveTeams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "GetActiveTeams");

	Params::AValGameMode_GetActiveTeams_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ActiveTeams != nullptr)
		*ActiveTeams = std::move(Parms.ActiveTeams);

}


// Function Valhalla.ValGameMode.EliminateTeam
// (Native, Protected, BlueprintCallable)
// Parameters:
// int32                              TeamNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode::EliminateTeam(int32 TeamNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "EliminateTeam");

	Params::AValGameMode_EliminateTeam_Params Parms{};

	Parms.TeamNumber = TeamNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.DeductEntryRequirements
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValGameMode::DeductEntryRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "DeductEntryRequirements");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.CachePlayersXP
// (Native, Public, BlueprintCallable)
// Parameters:

void AValGameMode::CachePlayersXP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "CachePlayersXP");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.AwardPlayerXP
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode::AwardPlayerXP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "AwardPlayerXP");

	Params::AValGameMode_AwardPlayerXP_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode.AwardCurrency
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValPlayerState*             PPlayerState                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EAwardType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ValueOverride                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode::AwardCurrency(class AValPlayerState* PPlayerState, enum class EAwardType Type, int32 ValueOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode", "AwardCurrency");

	Params::AValGameMode_AwardCurrency_Params Parms{};

	Parms.PPlayerState = PPlayerState;
	Parms.Type = Type;
	Parms.ValueOverride = ValueOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_City
// (Actor)

class UClass* AValGameMode_City::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_City");

	return Clss;
}


// ValGameMode_City Valhalla.Default__ValGameMode_City
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_City* AValGameMode_City::GetDefaultObj()
{
	static class AValGameMode_City* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_City*>(AValGameMode_City::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameMode_Frontier
// (Actor)

class UClass* AValGameMode_Frontier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Frontier");

	return Clss;
}


// ValGameMode_Frontier Valhalla.Default__ValGameMode_Frontier
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Frontier* AValGameMode_Frontier::GetDefaultObj()
{
	static class AValGameMode_Frontier* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Frontier*>(AValGameMode_Frontier::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_Frontier.UpdatePlayerTotalScore
// (Native, Protected)
// Parameters:
// class AValPlayerState_Frontier*    FrontierPlayer                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Frontier::UpdatePlayerTotalScore(class AValPlayerState_Frontier* FrontierPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "UpdatePlayerTotalScore");

	Params::AValGameMode_Frontier_UpdatePlayerTotalScore_Params Parms{};

	Parms.FrontierPlayer = FrontierPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.UpdatePlayerCredits
// (Native, Protected)
// Parameters:
// class AValPlayerState_Frontier*    FrontierPlayer                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Frontier::UpdatePlayerCredits(class AValPlayerState_Frontier* FrontierPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "UpdatePlayerCredits");

	Params::AValGameMode_Frontier_UpdatePlayerCredits_Params Parms{};

	Parms.FrontierPlayer = FrontierPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.StartFogPhase
// (Native, Protected)
// Parameters:

void AValGameMode_Frontier::StartFogPhase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "StartFogPhase");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.OnPortalEntered
// (Native, Protected)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Frontier::OnPortalEntered(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "OnPortalEntered");

	Params::AValGameMode_Frontier_OnPortalEntered_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.OnPortalCaptured
// (Native, Protected)
// Parameters:

void AValGameMode_Frontier::OnPortalCaptured()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "OnPortalCaptured");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.OnLootState
// (Native, Protected)
// Parameters:
// enum class ELootState              State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Frontier::OnLootState(enum class ELootState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "OnLootState");

	Params::AValGameMode_Frontier_OnLootState_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.OnFogPhaseEnd
// (Native, Protected)
// Parameters:

void AValGameMode_Frontier::OnFogPhaseEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "OnFogPhaseEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.GetRoyaleFog
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValRoyaleFogVolume*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValRoyaleFogVolume* AValGameMode_Frontier::GetRoyaleFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "GetRoyaleFog");

	Params::AValGameMode_Frontier_GetRoyaleFog_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_Frontier.EndOfMatchScoring
// (Native, Protected)
// Parameters:
// class AValPlayerState_Frontier*    FrontierPlayer                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Frontier::EndOfMatchScoring(class AValPlayerState_Frontier* FrontierPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "EndOfMatchScoring");

	Params::AValGameMode_Frontier_EndOfMatchScoring_Params Parms{};

	Parms.FrontierPlayer = FrontierPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Frontier.DeductPlayerRaidCost
// (Native, Protected)
// Parameters:

void AValGameMode_Frontier::DeductPlayerRaidCost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Frontier", "DeductPlayerRaidCost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_Deposits
// (Actor)

class UClass* AValGameMode_Deposits::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Deposits");

	return Clss;
}


// ValGameMode_Deposits Valhalla.Default__ValGameMode_Deposits
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Deposits* AValGameMode_Deposits::GetDefaultObj()
{
	static class AValGameMode_Deposits* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Deposits*>(AValGameMode_Deposits::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_Deposits.OnLootDepositStateChanged
// (Native, Public)
// Parameters:
// struct Valhalla_LootDepositPodData PodData                                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameMode_Deposits::OnLootDepositStateChanged(const struct Valhalla_LootDepositPodData& PodData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits", "OnLootDepositStateChanged");

	Params::AValGameMode_Deposits_OnLootDepositStateChanged_Params Parms{};

	Parms.PodData = PodData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits.BeginExtractionPhase
// (Native, Public)
// Parameters:

void AValGameMode_Deposits::BeginExtractionPhase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits", "BeginExtractionPhase");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_Deposits_Training
// (Actor)

class UClass* AValGameMode_Deposits_Training::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Deposits_Training");

	return Clss;
}


// ValGameMode_Deposits_Training Valhalla.Default__ValGameMode_Deposits_Training
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Deposits_Training* AValGameMode_Deposits_Training::GetDefaultObj()
{
	static class AValGameMode_Deposits_Training* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Deposits_Training*>(AValGameMode_Deposits_Training::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_Deposits_Training.SetState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// enum class ETrainingState          Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Deposits_Training::SetState(enum class ETrainingState Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "SetState");

	Params::AValGameMode_Deposits_Training_SetState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnTeammateRespawned
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnTeammateRespawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnTeammateRespawned");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnSkyDiveLanding
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnSkyDiveLanding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnSkyDiveLanding");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnSearchForLegendaryArtifact
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnSearchForLegendaryArtifact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnSearchForLegendaryArtifact");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnSearchForFinalArtifact
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnSearchForFinalArtifact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnSearchForFinalArtifact");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnSearchForDeposit
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnSearchForDeposit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnSearchForDeposit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnSearchForBoost
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnSearchForBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnSearchForBoost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnReviveTeammate
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnReviveTeammate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnReviveTeammate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnPreMatch
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnPreMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnPreMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnPOIBotKilled
// (Final, Native, Protected)
// Parameters:
// class AValBotSpawnVolume*          BotSpawnVolume                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Deposits_Training::OnPOIBotKilled(class AValBotSpawnVolume* BotSpawnVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnPOIBotKilled");

	Params::AValGameMode_Deposits_Training_OnPOIBotKilled_Params Parms{};

	Parms.BotSpawnVolume = BotSpawnVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnPlayerInventoryChanged
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnPlayerInventoryChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnPlayerInventoryChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnPlayerEquippedBoost
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnPlayerEquippedBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnPlayerEquippedBoost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnPlayerBoughtBoost
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnPlayerBoughtBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnPlayerBoughtBoost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnLanded
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnLanded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnLanded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnInShip
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnInShip()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnInShip");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnEvacuation
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnEvacuation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnEvacuation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnDropshipDoorsOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValGameMode_Deposits_Training::OnDropshipDoorsOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnDropshipDoorsOpened");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.OnBattleCybrids
// (Final, Native, Protected)
// Parameters:

void AValGameMode_Deposits_Training::OnBattleCybrids()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "OnBattleCybrids");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_Deposits_Training.BindBotSpawnVolumes
// (Final, Native, Protected)
// Parameters:
// bool                               bShouldAdd                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_Deposits_Training::BindBotSpawnVolumes(bool bShouldAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Deposits_Training", "BindBotSpawnVolumes");

	Params::AValGameMode_Deposits_Training_BindBotSpawnVolumes_Params Parms{};

	Parms.bShouldAdd = bShouldAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_PointCapture
// (Actor)

class UClass* AValGameMode_PointCapture::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_PointCapture");

	return Clss;
}


// ValGameMode_PointCapture Valhalla.Default__ValGameMode_PointCapture
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_PointCapture* AValGameMode_PointCapture::GetDefaultObj()
{
	static class AValGameMode_PointCapture* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_PointCapture*>(AValGameMode_PointCapture::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_PointCapture.OnMissionComplete
// (Native, Public)
// Parameters:
// class AValMission*                 Mission                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameMode_PointCapture::OnMissionComplete(class AValMission* Mission)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_PointCapture", "OnMissionComplete");

	Params::AValGameMode_PointCapture_OnMissionComplete_Params Parms{};

	Parms.Mission = Mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_PointCapture.GetRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameMode_PointCapture::GetRespawnTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_PointCapture", "GetRespawnTime");

	Params::AValGameMode_PointCapture_GetRespawnTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_PointCapture.GetMissionStart
// (Final, Native, Public)
// Parameters:
// class AController*                 Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValMissionStart*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionStart* AValGameMode_PointCapture::GetMissionStart(class AController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_PointCapture", "GetMissionStart");

	Params::AValGameMode_PointCapture_GetMissionStart_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_PointCapture.GetMissionEndDeferTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameMode_PointCapture::GetMissionEndDeferTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_PointCapture", "GetMissionEndDeferTime");

	Params::AValGameMode_PointCapture_GetMissionEndDeferTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_PointCapture.GetMissionCoordinator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValMissionCoordinator*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionCoordinator* AValGameMode_PointCapture::GetMissionCoordinator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_PointCapture", "GetMissionCoordinator");

	Params::AValGameMode_PointCapture_GetMissionCoordinator_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameMode_Royale
// (Actor)

class UClass* AValGameMode_Royale::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Royale");

	return Clss;
}


// ValGameMode_Royale Valhalla.Default__ValGameMode_Royale
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Royale* AValGameMode_Royale::GetDefaultObj()
{
	static class AValGameMode_Royale* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Royale*>(AValGameMode_Royale::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameMode_SpaceDungeon
// (Actor)

class UClass* AValGameMode_SpaceDungeon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_SpaceDungeon");

	return Clss;
}


// ValGameMode_SpaceDungeon Valhalla.Default__ValGameMode_SpaceDungeon
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_SpaceDungeon* AValGameMode_SpaceDungeon::GetDefaultObj()
{
	static class AValGameMode_SpaceDungeon* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_SpaceDungeon*>(AValGameMode_SpaceDungeon::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_SpaceDungeon.RevealActivePortal
// (Final, Native, Public)
// Parameters:
// class AValCharacter*               ValChar                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TeamReveal                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_SpaceDungeon::RevealActivePortal(class AValCharacter* ValChar, bool TeamReveal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "RevealActivePortal");

	Params::AValGameMode_SpaceDungeon_RevealActivePortal_Params Parms{};

	Parms.ValChar = ValChar;
	Parms.TeamReveal = TeamReveal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.RegisterLootCrates
// (Final, Native, Protected)
// Parameters:

void AValGameMode_SpaceDungeon::RegisterLootCrates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "RegisterLootCrates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.PickDungeonSeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValGameMode_SpaceDungeon::PickDungeonSeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "PickDungeonSeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.OnLootCrateOpened
// (Final, Native, Protected)
// Parameters:
// class AValLootCrate*               LootCrate                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_SpaceDungeon::OnLootCrateOpened(class AValLootCrate* LootCrate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "OnLootCrateOpened");

	Params::AValGameMode_SpaceDungeon_OnLootCrateOpened_Params Parms{};

	Parms.LootCrate = LootCrate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.OnDungeonPortalEntered
// (Final, Native, Public)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValDungeonPortal*           DungeonPortal                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_SpaceDungeon::OnDungeonPortalEntered(class AValCharacter* Character, class AValDungeonPortal* DungeonPortal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "OnDungeonPortalEntered");

	Params::AValGameMode_SpaceDungeon_OnDungeonPortalEntered_Params Parms{};

	Parms.Character = Character;
	Parms.DungeonPortal = DungeonPortal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.OnDungeonPortalDestroyed
// (Final, Native, Public)
// Parameters:
// class AValDungeonPortal*           DungeonPortal                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_SpaceDungeon::OnDungeonPortalDestroyed(class AValDungeonPortal* DungeonPortal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "OnDungeonPortalDestroyed");

	Params::AValGameMode_SpaceDungeon_OnDungeonPortalDestroyed_Params Parms{};

	Parms.DungeonPortal = DungeonPortal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.OnBossPortalEntered
// (Final, Native, Public)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValDungeonPortal*           DungeonPortal                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameMode_SpaceDungeon::OnBossPortalEntered(class AValCharacter* Character, class AValDungeonPortal* DungeonPortal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "OnBossPortalEntered");

	Params::AValGameMode_SpaceDungeon_OnBossPortalEntered_Params Parms{};

	Parms.Character = Character;
	Parms.DungeonPortal = DungeonPortal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.OnAllRoomsLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameMode_SpaceDungeon::OnAllRoomsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "OnAllRoomsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.MovePlayersToGeneratedStarts
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValGameMode_SpaceDungeon::MovePlayersToGeneratedStarts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "MovePlayersToGeneratedStarts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetShouldBreakEquipment
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameMode_SpaceDungeon::GetShouldBreakEquipment()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetShouldBreakEquipment");

	Params::AValGameMode_SpaceDungeon_GetShouldBreakEquipment_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetSecurityLevelMinDefensivePower
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameMode_SpaceDungeon::GetSecurityLevelMinDefensivePower()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetSecurityLevelMinDefensivePower");

	Params::AValGameMode_SpaceDungeon_GetSecurityLevelMinDefensivePower_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetMaxZToApplyFogDamage
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameMode_SpaceDungeon::GetMaxZToApplyFogDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetMaxZToApplyFogDamage");

	Params::AValGameMode_SpaceDungeon_GetMaxZToApplyFogDamage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetMaxEquipmentQuality
// (Final, Native, Public, Const)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValGameMode_SpaceDungeon::GetMaxEquipmentQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetMaxEquipmentQuality");

	Params::AValGameMode_SpaceDungeon_GetMaxEquipmentQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetEquipmentBreakChance
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameMode_SpaceDungeon::GetEquipmentBreakChance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetEquipmentBreakChance");

	Params::AValGameMode_SpaceDungeon_GetEquipmentBreakChance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.GetAndUpdateReputationPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameMode_SpaceDungeon::GetAndUpdateReputationPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "GetAndUpdateReputationPool");

	Params::AValGameMode_SpaceDungeon_GetAndUpdateReputationPool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameMode_SpaceDungeon.ExtractRemainingPlayers
// (Native, Public)
// Parameters:

void AValGameMode_SpaceDungeon::ExtractRemainingPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "ExtractRemainingPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.DetermineCloseProximityPlayers
// (Final, Native, Protected)
// Parameters:

void AValGameMode_SpaceDungeon::DetermineCloseProximityPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "DetermineCloseProximityPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameMode_SpaceDungeon.AbortMatchFromTimeout
// (Final, Native, Public)
// Parameters:

void AValGameMode_SpaceDungeon::AbortMatchFromTimeout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_SpaceDungeon", "AbortMatchFromTimeout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_ShootingRange
// (Actor)

class UClass* AValGameMode_ShootingRange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_ShootingRange");

	return Clss;
}


// ValGameMode_ShootingRange Valhalla.Default__ValGameMode_ShootingRange
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_ShootingRange* AValGameMode_ShootingRange::GetDefaultObj()
{
	static class AValGameMode_ShootingRange* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_ShootingRange*>(AValGameMode_ShootingRange::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameMode_Test
// (Actor)

class UClass* AValGameMode_Test::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Test");

	return Clss;
}


// ValGameMode_Test Valhalla.Default__ValGameMode_Test
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Test* AValGameMode_Test::GetDefaultObj()
{
	static class AValGameMode_Test* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Test*>(AValGameMode_Test::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameMode_Vikings
// (Actor)

class UClass* AValGameMode_Vikings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Vikings");

	return Clss;
}


// ValGameMode_Vikings Valhalla.Default__ValGameMode_Vikings
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Vikings* AValGameMode_Vikings::GetDefaultObj()
{
	static class AValGameMode_Vikings* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Vikings*>(AValGameMode_Vikings::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameplayCueNotify_Actor
// (Actor)

class UClass* AValGameplayCueNotify_Actor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameplayCueNotify_Actor");

	return Clss;
}


// ValGameplayCueNotify_Actor Valhalla.Default__ValGameplayCueNotify_Actor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameplayCueNotify_Actor* AValGameplayCueNotify_Actor::GetDefaultObj()
{
	static class AValGameplayCueNotify_Actor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameplayCueNotify_Actor*>(AValGameplayCueNotify_Actor::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameplayCueNotify_Static
// (None)

class UClass* UValGameplayCueNotify_Static::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameplayCueNotify_Static");

	return Clss;
}


// ValGameplayCueNotify_Static Valhalla.Default__ValGameplayCueNotify_Static
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameplayCueNotify_Static* UValGameplayCueNotify_Static::GetDefaultObj()
{
	static class UValGameplayCueNotify_Static* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameplayCueNotify_Static*>(UValGameplayCueNotify_Static::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameSession
// (Actor)

class UClass* AValGameSession::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameSession");

	return Clss;
}


// ValGameSession Valhalla.Default__ValGameSession
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameSession* AValGameSession::GetDefaultObj()
{
	static class AValGameSession* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameSession*>(AValGameSession::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameStateBase
// (Actor)

class UClass* AValGameStateBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameStateBase");

	return Clss;
}


// ValGameStateBase Valhalla.Default__ValGameStateBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameStateBase* AValGameStateBase::GetDefaultObj()
{
	static class AValGameStateBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameStateBase*>(AValGameStateBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameStateBase.SetQueueData
// (Final, Native, Public)
// Parameters:
// class UValQueueData*               QueueData                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameStateBase::SetQueueData(class UValQueueData* QueueData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "SetQueueData");

	Params::AValGameStateBase_SetQueueData_Params Parms{};

	Parms.QueueData = QueueData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameStateBase.SetPostedPlayerCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewPostedPlayerCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameStateBase::SetPostedPlayerCount(int32 NewPostedPlayerCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "SetPostedPlayerCount");

	Params::AValGameStateBase_SetPostedPlayerCount_Params Parms{};

	Parms.NewPostedPlayerCount = NewPostedPlayerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameStateBase.SetPhaseTimeRemaining
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameStateBase::SetPhaseTimeRemaining(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "SetPhaseTimeRemaining");

	Params::AValGameStateBase_SetPhaseTimeRemaining_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameStateBase.SetGameplayPhaseInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    NewGameplayPhase                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewPhaseDuration                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewPhaseTimeRemaining                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameStateBase::SetGameplayPhaseInfo(const struct GameplayTags_GameplayTag& NewGameplayPhase, float NewPhaseDuration, float NewPhaseTimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "SetGameplayPhaseInfo");

	Params::AValGameStateBase_SetGameplayPhaseInfo_Params Parms{};

	Parms.NewGameplayPhase = NewGameplayPhase;
	Parms.NewPhaseDuration = NewPhaseDuration;
	Parms.NewPhaseTimeRemaining = NewPhaseTimeRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameStateBase.OnRep_QueueData
// (Native, Protected)
// Parameters:

void AValGameStateBase::OnRep_QueueData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "OnRep_QueueData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameStateBase.OnRep_GameplayPhaseInfo
// (Native, Protected, HasOutParams)
// Parameters:
// struct Valhalla_GameplayPhaseInfo  OldInfo                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameStateBase::OnRep_GameplayPhaseInfo(struct Valhalla_GameplayPhaseInfo& OldInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "OnRep_GameplayPhaseInfo");

	Params::AValGameStateBase_OnRep_GameplayPhaseInfo_Params Parms{};

	Parms.OldInfo = OldInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction Valhalla.ValGameStateBase.OnQueueDataSet__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TSoftObjectPtr<class UValQueueData>QueueData                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameStateBase::OnQueueDataSet__DelegateSignature(TSoftObjectPtr<class UValQueueData> QueueData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "OnQueueDataSet__DelegateSignature");

	Params::AValGameStateBase_OnQueueDataSet__DelegateSignature_Params Parms{};

	Parms.QueueData = QueueData;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction Valhalla.ValGameStateBase.OnGameplayPhaseSet__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct Valhalla_GameplayPhaseInfo  GameplayPhaseInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameStateBase::OnGameplayPhaseSet__DelegateSignature(const struct Valhalla_GameplayPhaseInfo& GameplayPhaseInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "OnGameplayPhaseSet__DelegateSignature");

	Params::AValGameStateBase_OnGameplayPhaseSet__DelegateSignature_Params Parms{};

	Parms.GameplayPhaseInfo = GameplayPhaseInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameStateBase.GetQueueData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValQueueData*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValQueueData* AValGameStateBase::GetQueueData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "GetQueueData");

	Params::AValGameStateBase_GetQueueData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameStateBase.GetPostedPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameStateBase::GetPostedPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "GetPostedPlayerCount");

	Params::AValGameStateBase_GetPostedPlayerCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameStateBase.GetPhaseRemainingTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameStateBase::GetPhaseRemainingTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "GetPhaseRemainingTimer");

	Params::AValGameStateBase_GetPhaseRemainingTimer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameStateBase.GetGameplayPhaseInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_GameplayPhaseInfo  ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_GameplayPhaseInfo AValGameStateBase::GetGameplayPhaseInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameStateBase", "GetGameplayPhaseInfo");

	Params::AValGameStateBase_GetGameplayPhaseInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameState
// (Actor)

class UClass* AValGameState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameState");

	return Clss;
}


// ValGameState Valhalla.Default__ValGameState
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameState* AValGameState::GetDefaultObj()
{
	static class AValGameState* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameState*>(AValGameState::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameState.SublevelsReady
// (Final, Native, Public)
// Parameters:

void AValGameState::SublevelsReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SublevelsReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.SetTeamScore
// (Final, Native, Public)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState::SetTeamScore(int32 TeamId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SetTeamScore");

	Params::AValGameState_SetTeamScore_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.SetSelectedSublevels
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct Valhalla_RandomSublevel     Sublevels                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValGameState::SetSelectedSublevels(struct Valhalla_RandomSublevel& Sublevels)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SetSelectedSublevels");

	Params::AValGameState_SetSelectedSublevels_Params Parms{};

	Parms.Sublevels = Sublevels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.SetSecurityLevel
// (Final, Native, Public)
// Parameters:
// enum class ESecurityLevel          Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState::SetSecurityLevel(enum class ESecurityLevel Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SetSecurityLevel");

	Params::AValGameState_SetSecurityLevel_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.SetScoreToWin
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState::SetScoreToWin(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SetScoreToWin");

	Params::AValGameState_SetScoreToWin_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.SetPlayerStartingLives
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState::SetPlayerStartingLives(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "SetPlayerStartingLives");

	Params::AValGameState_SetPlayerStartingLives_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_TimeRemaining
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_TimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_TimeRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_ServerStatus
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnRep_ServerStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_ServerStatus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_SelectedSublevels
// (Final, Native, Public)
// Parameters:

void AValGameState::OnRep_SelectedSublevels()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_SelectedSublevels");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_SecurityLevel
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_SecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_SecurityLevel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_ScoreToWin
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_ScoreToWin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_ScoreToWin");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_RespawnTime
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_RespawnTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_RespawnTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_MatchStartTime
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_MatchStartTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_MatchStartTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_MatchLength
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_MatchLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_MatchLength");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_DropPodsUseLauncher
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_DropPodsUseLauncher()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_DropPodsUseLauncher");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_CurrentTeamScores
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_CurrentTeamScores()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_CurrentTeamScores");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_BotsToCache
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnRep_BotsToCache()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_BotsToCache");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_AgentConfigs
// (Native, Protected)
// Parameters:

void AValGameState::OnRep_AgentConfigs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_AgentConfigs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_ActivityConfig
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnRep_ActivityConfig()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_ActivityConfig");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRep_ActivatedSwarmSpawners
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnRep_ActivatedSwarmSpawners()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRep_ActivatedSwarmSpawners");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnRecipeConfigReady
// (Native, Protected)
// Parameters:

void AValGameState::OnRecipeConfigReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnRecipeConfigReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnLoadoutConfigReady
// (Native, Protected)
// Parameters:

void AValGameState::OnLoadoutConfigReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnLoadoutConfigReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnBotDataReady
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnBotDataReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnBotDataReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnBotDataLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnBotDataLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnBotDataLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnBotClassesLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnBotClassesLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnBotClassesLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnAgentsInstanceLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnAgentsInstanceLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnAgentsInstanceLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.OnAgentsDataLoaded
// (Final, Native, Protected)
// Parameters:

void AValGameState::OnAgentsDataLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "OnAgentsDataLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.IsPreMatch
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::IsPreMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "IsPreMatch");

	Params::AValGameState_IsPreMatch_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.IsMatchOver
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::IsMatchOver()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "IsMatchOver");

	Params::AValGameState_IsMatchOver_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.IsGameplayPhaseOrLater
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayPhase                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::IsGameplayPhaseOrLater(struct GameplayTags_GameplayTag& GameplayPhase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "IsGameplayPhaseOrLater");

	Params::AValGameState_IsGameplayPhaseOrLater_Params Parms{};

	Parms.GameplayPhase = GameplayPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.IncrementTeamScore
// (Final, Native, Public)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::IncrementTeamScore(int32 TeamId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "IncrementTeamScore");

	Params::AValGameState_IncrementTeamScore_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetTimeRemaining");

	Params::AValGameState_GetTimeRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetTimeInMatchState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameState::GetTimeInMatchState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetTimeInMatchState");

	Params::AValGameState_GetTimeInMatchState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetSightManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValSightManager*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValSightManager* AValGameState::GetSightManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetSightManager");

	Params::AValGameState_GetSightManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetSecurityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESecurityLevel          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESecurityLevel AValGameState::GetSecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetSecurityLevel");

	Params::AValGameState_GetSecurityLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetSecondsUntilMatchEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              TimeRemaining                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::GetSecondsUntilMatchEnd(float* TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetSecondsUntilMatchEnd");

	Params::AValGameState_GetSecondsUntilMatchEnd_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TimeRemaining != nullptr)
		*TimeRemaining = Parms.TimeRemaining;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetSecondsSinceMatchStart
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              TimePassed                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::GetSecondsSinceMatchStart(float* TimePassed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetSecondsSinceMatchStart");

	Params::AValGameState_GetSecondsSinceMatchStart_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TimePassed != nullptr)
		*TimePassed = Parms.TimePassed;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetScoreToWin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetScoreToWin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetScoreToWin");

	Params::AValGameState_GetScoreToWin_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetRespawnTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetRespawnTime");

	Params::AValGameState_GetRespawnTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetRecipeConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValRecipeConfig*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValRecipeConfig* AValGameState::GetRecipeConfig()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetRecipeConfig");

	Params::AValGameState_GetRecipeConfig_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetPlayerStateByPRhlayerUuid
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerState* AValGameState::GetPlayerStateByPRhlayerUuid(struct CoreUObject_Guid& PlayerUuid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetPlayerStateByPRhlayerUuid");

	Params::AValGameState_GetPlayerStateByPRhlayerUuid_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetPlayerStateById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              PlayerId                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerState* AValGameState::GetPlayerStateById(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetPlayerStateById");

	Params::AValGameState_GetPlayerStateById_Params Parms{};

	Parms.PlayerId = PlayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetPlayerStartingLives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetPlayerStartingLives()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetPlayerStartingLives");

	Params::AValGameState_GetPlayerStartingLives_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetMinimapManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValMinimapManager*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMinimapManager* AValGameState::GetMinimapManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetMinimapManager");

	Params::AValGameState_GetMinimapManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetMaxTeamSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetMaxTeamSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetMaxTeamSize");

	Params::AValGameState_GetMaxTeamSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetMatchStartTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              StartTime                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::GetMatchStartTime(float* StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetMatchStartTime");

	Params::AValGameState_GetMatchStartTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StartTime != nullptr)
		*StartTime = Parms.StartTime;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetMatchLength
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              Length                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::GetMatchLength(float* Length)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetMatchLength");

	Params::AValGameState_GetMatchLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Length != nullptr)
		*Length = Parms.Length;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetLoadoutConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValLoadoutConfig*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValLoadoutConfig* AValGameState::GetLoadoutConfig()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetLoadoutConfig");

	Params::AValGameState_GetLoadoutConfig_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetLeadingTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_TeamScore>  OutWinningTeams                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState::GetLeadingTeam(TArray<struct Valhalla_TeamScore>* OutWinningTeams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetLeadingTeam");

	Params::AValGameState_GetLeadingTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutWinningTeams != nullptr)
		*OutWinningTeams = std::move(Parms.OutWinningTeams);

}


// Function Valhalla.ValGameState.GetDropPodsUseLauncher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState::GetDropPodsUseLauncher()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetDropPodsUseLauncher");

	Params::AValGameState_GetDropPodsUseLauncher_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetDecalPool
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDecalPoolComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDecalPoolComponent* AValGameState::GetDecalPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetDecalPool");

	Params::AValGameState_GetDecalPool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetCurrentTeamScores
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_TeamScore>  OutTeamScores                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState::GetCurrentTeamScores(TArray<struct Valhalla_TeamScore>* OutTeamScores)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetCurrentTeamScores");

	Params::AValGameState_GetCurrentTeamScores_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTeamScores != nullptr)
		*OutTeamScores = std::move(Parms.OutTeamScores);

}


// Function Valhalla.ValGameState.GetClientsReady
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState::GetClientsReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetClientsReady");

	Params::AValGameState_GetClientsReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState.GetBotSpawners
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValBotSpawner*>      OutSpawners                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState::GetBotSpawners(TArray<class AValBotSpawner*>* OutSpawners)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetBotSpawners");

	Params::AValGameState_GetBotSpawners_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSpawners != nullptr)
		*OutSpawners = std::move(Parms.OutSpawners);

}


// Function Valhalla.ValGameState.GetAgentConfigs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UValAgentConfig>>OutAgentConfig                                                   (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AValGameState::GetAgentConfigs(TArray<TSoftObjectPtr<class UValAgentConfig>>* OutAgentConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetAgentConfigs");

	Params::AValGameState_GetAgentConfigs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutAgentConfig != nullptr)
		*OutAgentConfig = std::move(Parms.OutAgentConfig);

}


// Function Valhalla.ValGameState.GetActivityConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_ActivityConfig     OutActivityConfig                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void AValGameState::GetActivityConfig(struct Valhalla_ActivityConfig* OutActivityConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "GetActivityConfig");

	Params::AValGameState_GetActivityConfig_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActivityConfig != nullptr)
		*OutActivityConfig = std::move(Parms.OutActivityConfig);

}


// Function Valhalla.ValGameState.CachePlayerIdsAndNames
// (Final, Native, Public)
// Parameters:

void AValGameState::CachePlayerIdsAndNames()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "CachePlayerIdsAndNames");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.AsyncLoadSublevels
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValGameState::AsyncLoadSublevels()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "AsyncLoadSublevels");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState.ActivateSwarmSpawner
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector2D        SpawnerLocation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState::ActivateSwarmSpawner(const struct CoreUObject_Vector2D& SpawnerLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState", "ActivateSwarmSpawner");

	Params::AValGameState_ActivateSwarmSpawner_Params Parms{};

	Parms.SpawnerLocation = SpawnerLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameState_Mission
// (Actor)

class UClass* AValGameState_Mission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameState_Mission");

	return Clss;
}


// ValGameState_Mission Valhalla.Default__ValGameState_Mission
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameState_Mission* AValGameState_Mission::GetDefaultObj()
{
	static class AValGameState_Mission* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameState_Mission*>(AValGameState_Mission::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameState_Mission.UnregisterMissionState
// (Final, Native, Public)
// Parameters:
// class AValMissionState*            MissionState                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Mission::UnregisterMissionState(class AValMissionState* MissionState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "UnregisterMissionState");

	Params::AValGameState_Mission_UnregisterMissionState_Params Parms{};

	Parms.MissionState = MissionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.SetMissionScores
// (Native, Public, HasOutParams)
// Parameters:
// TArray<struct Valhalla_MissionScore>Scores                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValGameState_Mission::SetMissionScores(TArray<struct Valhalla_MissionScore>& Scores)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "SetMissionScores");

	Params::AValGameState_Mission_SetMissionScores_Params Parms{};

	Parms.Scores = Scores;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.RegisterMissionState
// (Final, Native, Public)
// Parameters:
// class AValMissionState*            MissionState                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Mission::RegisterMissionState(class AValMissionState* MissionState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "RegisterMissionState");

	Params::AValGameState_Mission_RegisterMissionState_Params Parms{};

	Parms.MissionState = MissionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.OnRep_MissionStates
// (Final, Native, Protected)
// Parameters:

void AValGameState_Mission::OnRep_MissionStates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "OnRep_MissionStates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.OnRep_MissionScores
// (Final, Native, Protected)
// Parameters:

void AValGameState_Mission::OnRep_MissionScores()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "OnRep_MissionScores");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.OnRep_FinaleTime
// (Final, Native, Protected)
// Parameters:

void AValGameState_Mission::OnRep_FinaleTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "OnRep_FinaleTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.OnRep_FinaleMissionsRequired
// (Final, Native, Protected)
// Parameters:

void AValGameState_Mission::OnRep_FinaleMissionsRequired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "OnRep_FinaleMissionsRequired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Mission.GetXPForLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Mission::GetXPForLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetXPForLevel");

	Params::AValGameState_Mission_GetXPForLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Mission.GetMissionStates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValMissionState*>    MissionStates                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Mission::GetMissionStates(TArray<class AValMissionState*>* MissionStates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetMissionStates");

	Params::AValGameState_Mission_GetMissionStates_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MissionStates != nullptr)
		*MissionStates = std::move(Parms.MissionStates);

}


// Function Valhalla.ValGameState_Mission.GetMissionScore
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Score                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Mission::GetMissionScore(int32 TeamNum, int32* Score)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetMissionScore");

	Params::AValGameState_Mission_GetMissionScore_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Score != nullptr)
		*Score = Parms.Score;

}


// Function Valhalla.ValGameState_Mission.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Mission::GetMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetMaxLevel");

	Params::AValGameState_Mission_GetMaxLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Mission.GetLevelFromXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              XPTotal                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Mission::GetLevelFromXP(int32 XPTotal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetLevelFromXP");

	Params::AValGameState_Mission_GetLevelFromXP_Params Parms{};

	Parms.XPTotal = XPTotal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Mission.GetFinaleTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Mission::GetFinaleTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetFinaleTime");

	Params::AValGameState_Mission_GetFinaleTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Mission.GetFinaleMissionsRequired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Mission::GetFinaleMissionsRequired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Mission", "GetFinaleMissionsRequired");

	Params::AValGameState_Mission_GetFinaleMissionsRequired_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGATA_Trace
// (Actor)

class UClass* AValGATA_Trace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGATA_Trace");

	return Clss;
}


// ValGATA_Trace Valhalla.Default__ValGATA_Trace
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGATA_Trace* AValGATA_Trace::GetDefaultObj()
{
	static class AValGATA_Trace* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGATA_Trace*>(AValGATA_Trace::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGATA_Trace.SetStartLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetingLocationInfoInStartLocation                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValGATA_Trace::SetStartLocation(struct GameplayAbilities_GameplayAbilityTargetingLocationInfo& InStartLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "SetStartLocation");

	Params::AValGATA_Trace_SetStartLocation_Params Parms{};

	Parms.InStartLocation = InStartLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.SetSpreadRecovery
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_Trace::SetSpreadRecovery(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "SetSpreadRecovery");

	Params::AValGATA_Trace_SetSpreadRecovery_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.SetShouldProduceTargetDataOnServer
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bInShouldProduceTargetDataOnServer                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_Trace::SetShouldProduceTargetDataOnServer(bool bInShouldProduceTargetDataOnServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "SetShouldProduceTargetDataOnServer");

	Params::AValGATA_Trace_SetShouldProduceTargetDataOnServer_Params Parms{};

	Parms.bInShouldProduceTargetDataOnServer = bInShouldProduceTargetDataOnServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.SetDestroyOnConfirmation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bInDestroyOnConfirmation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_Trace::SetDestroyOnConfirmation(bool bInDestroyOnConfirmation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "SetDestroyOnConfirmation");

	Params::AValGATA_Trace_SetDestroyOnConfirmation_Params Parms{};

	Parms.bInDestroyOnConfirmation = bInDestroyOnConfirmation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.ResetSpread
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bInstantRecovery                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_Trace::ResetSpread(bool bInstantRecovery)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "ResetSpread");

	Params::AValGATA_Trace_ResetSpread_Params Parms{};

	Parms.bInstantRecovery = bInstantRecovery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.NotifySpreadModified
// (Native, Public, BlueprintCallable)
// Parameters:

void AValGATA_Trace::NotifySpreadModified()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "NotifySpreadModified");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGATA_Trace.IncrementID
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGATA_Trace::IncrementID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "IncrementID");

	Params::AValGATA_Trace_IncrementID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGATA_Trace.GetCurrentSpread
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGATA_Trace::GetCurrentSpread()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "GetCurrentSpread");

	Params::AValGATA_Trace_GetCurrentSpread_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGATA_Trace.GetCurrentID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGATA_Trace::GetCurrentID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_Trace", "GetCurrentID");

	Params::AValGATA_Trace_GetCurrentID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGATA_LineTrace
// (Actor)

class UClass* AValGATA_LineTrace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGATA_LineTrace");

	return Clss;
}


// ValGATA_LineTrace Valhalla.Default__ValGATA_LineTrace
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGATA_LineTrace* AValGATA_LineTrace::GetDefaultObj()
{
	static class AValGATA_LineTrace* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGATA_LineTrace*>(AValGATA_LineTrace::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGATA_LineTrace.Configure
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetingLocationInfoInStartLocation                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    InAimingTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    InAimingRemovalTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_CollisionProfileName InTraceProfile                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayTargetDataFilterHandleInFilter                                                         (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AGameplayAbilityWorldReticle>InReticleClass                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_WorldReticleParametersInReticleParams                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bInIgnoreBlockingHits                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInIgnoreFriendly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInShouldProduceTargetDataOnServer                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInUsePersistentHitResults                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInDebug                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInTraceAffectsAimPitch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInTraceFromPlayerViewPoint                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInUseAimingSpreadMod                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InMaxRange                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseSpread                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InTargetingSpreadIncrement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InTargetingSpreadMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InSpreadRecovery                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InSpreadSeed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValSpreadPattern*           InSpreadPattern                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InSpreadFalloffPower                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InMaxHitResultsPerTrace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InNumberOfTraces                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_LineTrace::Configure(struct GameplayAbilities_GameplayAbilityTargetingLocationInfo& InStartLocation, const struct GameplayTags_GameplayTag& InAimingTag, const struct GameplayTags_GameplayTag& InAimingRemovalTag, const struct Engine_CollisionProfileName& InTraceProfile, const struct GameplayAbilities_GameplayTargetDataFilterHandle& InFilter, TSubclassOf<class AGameplayAbilityWorldReticle> InReticleClass, const struct GameplayAbilities_WorldReticleParameters& InReticleParams, bool bInIgnoreBlockingHits, bool bInIgnoreFriendly, bool bInShouldProduceTargetDataOnServer, bool bInUsePersistentHitResults, bool bInDebug, bool bInTraceAffectsAimPitch, bool bInTraceFromPlayerViewPoint, bool bInUseAimingSpreadMod, float InMaxRange, float InBaseSpread, float InTargetingSpreadIncrement, float InTargetingSpreadMax, float InSpreadRecovery, int32 InSpreadSeed, class UValSpreadPattern* InSpreadPattern, float InSpreadFalloffPower, int32 InMaxHitResultsPerTrace, int32 InNumberOfTraces)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_LineTrace", "Configure");

	Params::AValGATA_LineTrace_Configure_Params Parms{};

	Parms.InStartLocation = InStartLocation;
	Parms.InAimingTag = InAimingTag;
	Parms.InAimingRemovalTag = InAimingRemovalTag;
	Parms.InTraceProfile = InTraceProfile;
	Parms.InFilter = InFilter;
	Parms.InReticleClass = InReticleClass;
	Parms.InReticleParams = InReticleParams;
	Parms.bInIgnoreBlockingHits = bInIgnoreBlockingHits;
	Parms.bInIgnoreFriendly = bInIgnoreFriendly;
	Parms.bInShouldProduceTargetDataOnServer = bInShouldProduceTargetDataOnServer;
	Parms.bInUsePersistentHitResults = bInUsePersistentHitResults;
	Parms.bInDebug = bInDebug;
	Parms.bInTraceAffectsAimPitch = bInTraceAffectsAimPitch;
	Parms.bInTraceFromPlayerViewPoint = bInTraceFromPlayerViewPoint;
	Parms.bInUseAimingSpreadMod = bInUseAimingSpreadMod;
	Parms.InMaxRange = InMaxRange;
	Parms.InBaseSpread = InBaseSpread;
	Parms.InTargetingSpreadIncrement = InTargetingSpreadIncrement;
	Parms.InTargetingSpreadMax = InTargetingSpreadMax;
	Parms.InSpreadRecovery = InSpreadRecovery;
	Parms.InSpreadSeed = InSpreadSeed;
	Parms.InSpreadPattern = InSpreadPattern;
	Parms.InSpreadFalloffPower = InSpreadFalloffPower;
	Parms.InMaxHitResultsPerTrace = InMaxHitResultsPerTrace;
	Parms.InNumberOfTraces = InNumberOfTraces;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGATA_ShapeTrace
// (Actor)

class UClass* AValGATA_ShapeTrace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGATA_ShapeTrace");

	return Clss;
}


// ValGATA_ShapeTrace Valhalla.Default__ValGATA_ShapeTrace
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGATA_ShapeTrace* AValGATA_ShapeTrace::GetDefaultObj()
{
	static class AValGATA_ShapeTrace* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGATA_ShapeTrace*>(AValGATA_ShapeTrace::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGATA_ShapeTrace.Configure
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilityTargetingLocationInfoInStartLocation                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    InAimingTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    InAimingRemovalTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_CollisionProfileName InTraceProfile                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayTargetDataFilterHandleInFilter                                                         (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AGameplayAbilityWorldReticle>InReticleClass                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_WorldReticleParametersInReticleParams                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// enum class EValShapeTraceType      InShapeTraceType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInIgnoreBlockingHits                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInIgnoreFriendly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInShouldProduceTargetDataOnServer                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInUsePersistentHitResults                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInIgnoreDuplicateActors                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInDebug                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInTraceAffectsAimPitch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInTraceFromPlayerViewPoint                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInUseAimingSpreadMod                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InMaxRange                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InTraceSphereRadius                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          InHalfBoxExtent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseSpread                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InTargetingSpreadIncrement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InTargetingSpreadMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InSpreadRecovery                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InSpreadSeed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValSpreadPattern*           InSpreadPattern                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InMaxHitResultsPerTrace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InNumberOfTraces                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGATA_ShapeTrace::Configure(struct GameplayAbilities_GameplayAbilityTargetingLocationInfo& InStartLocation, const struct GameplayTags_GameplayTag& InAimingTag, const struct GameplayTags_GameplayTag& InAimingRemovalTag, const struct Engine_CollisionProfileName& InTraceProfile, const struct GameplayAbilities_GameplayTargetDataFilterHandle& InFilter, TSubclassOf<class AGameplayAbilityWorldReticle> InReticleClass, const struct GameplayAbilities_WorldReticleParameters& InReticleParams, enum class EValShapeTraceType InShapeTraceType, bool bInIgnoreBlockingHits, bool bInIgnoreFriendly, bool bInShouldProduceTargetDataOnServer, bool bInUsePersistentHitResults, bool bInIgnoreDuplicateActors, bool bInDebug, bool bInTraceAffectsAimPitch, bool bInTraceFromPlayerViewPoint, bool bInUseAimingSpreadMod, float InMaxRange, float InTraceSphereRadius, const struct CoreUObject_Vector& InHalfBoxExtent, float InBaseSpread, float InTargetingSpreadIncrement, float InTargetingSpreadMax, float InSpreadRecovery, int32 InSpreadSeed, class UValSpreadPattern* InSpreadPattern, int32 InMaxHitResultsPerTrace, int32 InNumberOfTraces)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGATA_ShapeTrace", "Configure");

	Params::AValGATA_ShapeTrace_Configure_Params Parms{};

	Parms.InStartLocation = InStartLocation;
	Parms.InAimingTag = InAimingTag;
	Parms.InAimingRemovalTag = InAimingRemovalTag;
	Parms.InTraceProfile = InTraceProfile;
	Parms.InFilter = InFilter;
	Parms.InReticleClass = InReticleClass;
	Parms.InReticleParams = InReticleParams;
	Parms.InShapeTraceType = InShapeTraceType;
	Parms.bInIgnoreBlockingHits = bInIgnoreBlockingHits;
	Parms.bInIgnoreFriendly = bInIgnoreFriendly;
	Parms.bInShouldProduceTargetDataOnServer = bInShouldProduceTargetDataOnServer;
	Parms.bInUsePersistentHitResults = bInUsePersistentHitResults;
	Parms.bInIgnoreDuplicateActors = bInIgnoreDuplicateActors;
	Parms.bInDebug = bInDebug;
	Parms.bInTraceAffectsAimPitch = bInTraceAffectsAimPitch;
	Parms.bInTraceFromPlayerViewPoint = bInTraceFromPlayerViewPoint;
	Parms.bInUseAimingSpreadMod = bInUseAimingSpreadMod;
	Parms.InMaxRange = InMaxRange;
	Parms.InTraceSphereRadius = InTraceSphereRadius;
	Parms.InHalfBoxExtent = InHalfBoxExtent;
	Parms.InBaseSpread = InBaseSpread;
	Parms.InTargetingSpreadIncrement = InTargetingSpreadIncrement;
	Parms.InTargetingSpreadMax = InTargetingSpreadMax;
	Parms.InSpreadRecovery = InSpreadRecovery;
	Parms.InSpreadSeed = InSpreadSeed;
	Parms.InSpreadPattern = InSpreadPattern;
	Parms.InMaxHitResultsPerTrace = InMaxHitResultsPerTrace;
	Parms.InNumberOfTraces = InNumberOfTraces;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGA_Crouch
// (None)

class UClass* UValGA_Crouch::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGA_Crouch");

	return Clss;
}


// ValGA_Crouch Valhalla.Default__ValGA_Crouch
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGA_Crouch* UValGA_Crouch::GetDefaultObj()
{
	static class UValGA_Crouch* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGA_Crouch*>(UValGA_Crouch::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGA_Crouch.OnSettingsChanged
// (Final, Native, Protected)
// Parameters:

void UValGA_Crouch::OnSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGA_Crouch", "OnSettingsChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGA_CrouchToggle
// (None)

class UClass* UValGA_CrouchToggle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGA_CrouchToggle");

	return Clss;
}


// ValGA_CrouchToggle Valhalla.Default__ValGA_CrouchToggle
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGA_CrouchToggle* UValGA_CrouchToggle::GetDefaultObj()
{
	static class UValGA_CrouchToggle* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGA_CrouchToggle*>(UValGA_CrouchToggle::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGA_CrouchToggle.OnActionThatCancelsCrouch
// (Final, Native, Protected)
// Parameters:

void UValGA_CrouchToggle::OnActionThatCancelsCrouch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGA_CrouchToggle", "OnActionThatCancelsCrouch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGA_Jump
// (None)

class UClass* UValGA_Jump::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGA_Jump");

	return Clss;
}


// ValGA_Jump Valhalla.Default__ValGA_Jump
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGA_Jump* UValGA_Jump::GetDefaultObj()
{
	static class UValGA_Jump* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGA_Jump*>(UValGA_Jump::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGC_BulletImpact
// (None)

class UClass* UValGC_BulletImpact::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGC_BulletImpact");

	return Clss;
}


// ValGC_BulletImpact Valhalla.Default__ValGC_BulletImpact
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGC_BulletImpact* UValGC_BulletImpact::GetDefaultObj()
{
	static class UValGC_BulletImpact* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGC_BulletImpact*>(UValGC_BulletImpact::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGC_BulletImpact.PlayFX
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ExplosionRadius                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          HitLocation                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          HitNormal                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDeviceAudioVisual*       DeviceAV                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        SurfaceType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGC_BulletImpact::PlayFX(float ExplosionRadius, struct CoreUObject_Vector& HitLocation, struct CoreUObject_Vector& HitNormal, class UValDeviceAudioVisual* DeviceAV, class APawn* Instigator, class AValCharacter* Target, enum class EPhysicalSurface SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGC_BulletImpact", "PlayFX");

	Params::UValGC_BulletImpact_PlayFX_Params Parms{};

	Parms.ExplosionRadius = ExplosionRadius;
	Parms.HitLocation = HitLocation;
	Parms.HitNormal = HitNormal;
	Parms.DeviceAV = DeviceAV;
	Parms.Instigator = Instigator;
	Parms.Target = Target;
	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGC_BulletImpact.PhysicalSurfaceToString
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// enum class EPhysicalSurface        Surface                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValGC_BulletImpact::PhysicalSurfaceToString(enum class EPhysicalSurface Surface)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGC_BulletImpact", "PhysicalSurfaceToString");

	Params::UValGC_BulletImpact_PhysicalSurfaceToString_Params Parms{};

	Parms.Surface = Surface;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class Valhalla.ValGC_GunTrace
// (None)

class UClass* UValGC_GunTrace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGC_GunTrace");

	return Clss;
}


// ValGC_GunTrace Valhalla.Default__ValGC_GunTrace
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGC_GunTrace* UValGC_GunTrace::GetDefaultObj()
{
	static class UValGC_GunTrace* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGC_GunTrace*>(UValGC_GunTrace::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGC_Skiing
// (Actor)

class UClass* AValGC_Skiing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGC_Skiing");

	return Clss;
}


// ValGC_Skiing Valhalla.Default__ValGC_Skiing
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGC_Skiing* AValGC_Skiing::GetDefaultObj()
{
	static class AValGC_Skiing* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGC_Skiing*>(AValGC_Skiing::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGC_Skiing.GetFXConfigByClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ClassTag                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_SkiFXConfig        OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGC_Skiing::GetFXConfigByClass(const struct GameplayTags_GameplayTag& ClassTag, struct Valhalla_SkiFXConfig* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGC_Skiing", "GetFXConfigByClass");

	Params::AValGC_Skiing_GetFXConfigByClass_Params Parms{};

	Parms.ClassTag = ClassTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGC_Skiing.GetFeetTrailBySurface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ClassTag                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        PhysicalSurface                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraSystem* AValGC_Skiing::GetFeetTrailBySurface(const struct GameplayTags_GameplayTag& ClassTag, enum class EPhysicalSurface PhysicalSurface)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGC_Skiing", "GetFeetTrailBySurface");

	Params::AValGC_Skiing_GetFeetTrailBySurface_Params Parms{};

	Parms.ClassTag = ClassTag;
	Parms.PhysicalSurface = PhysicalSurface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGPTActor
// (Actor)

class UClass* AValGPTActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGPTActor");

	return Clss;
}


// ValGPTActor Valhalla.Default__ValGPTActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGPTActor* AValGPTActor::GetDefaultObj()
{
	static class AValGPTActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGPTActor*>(AValGPTActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGPTActor.OnResponse
// (Event, Public, BlueprintEvent)
// Parameters:

void AValGPTActor::OnResponse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGPTActor", "OnResponse");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValGrenadeAudioVisual
// (None)

class UClass* UValGrenadeAudioVisual::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGrenadeAudioVisual");

	return Clss;
}


// ValGrenadeAudioVisual Valhalla.Default__ValGrenadeAudioVisual
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGrenadeAudioVisual* UValGrenadeAudioVisual::GetDefaultObj()
{
	static class UValGrenadeAudioVisual* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGrenadeAudioVisual*>(UValGrenadeAudioVisual::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGrenadeIndicatorActor
// (Actor)

class UClass* AValGrenadeIndicatorActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGrenadeIndicatorActor");

	return Clss;
}


// ValGrenadeIndicatorActor Valhalla.Default__ValGrenadeIndicatorActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGrenadeIndicatorActor* AValGrenadeIndicatorActor::GetDefaultObj()
{
	static class AValGrenadeIndicatorActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGrenadeIndicatorActor*>(AValGrenadeIndicatorActor::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGunAnimInstance
// (None)

class UClass* UValGunAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGunAnimInstance");

	return Clss;
}


// ValGunAnimInstance Valhalla.Default__ValGunAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGunAnimInstance* UValGunAnimInstance::GetDefaultObj()
{
	static class UValGunAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGunAnimInstance*>(UValGunAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGunAnimInstance.PlaySettle
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::PlaySettle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlaySettle");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.PlayRecoil
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::PlayRecoil()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlayRecoil");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.PlayMeleeMontage
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                              AnimTime                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::PlayMeleeMontage(float AnimTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlayMeleeMontage");

	Params::UValGunAnimInstance_PlayMeleeMontage_Params Parms{};

	Parms.AnimTime = AnimTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.PlayMeleeDeflectAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::PlayMeleeDeflectAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlayMeleeDeflectAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.PlayHitReact
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::PlayHitReact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlayHitReact");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.PlayFlourish
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::PlayFlourish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "PlayFlourish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnStartedHighSpeedFalling
// (Native, Public)
// Parameters:

void UValGunAnimInstance::OnStartedHighSpeedFalling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnStartedHighSpeedFalling");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnStartedCrouch
// (Native, Protected)
// Parameters:

void UValGunAnimInstance::OnStartedCrouch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnStartedCrouch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnSkiStateStopped
// (Native, Public)
// Parameters:

void UValGunAnimInstance::OnSkiStateStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnSkiStateStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnSkiStateStarted
// (Native, Public)
// Parameters:

void UValGunAnimInstance::OnSkiStateStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnSkiStateStarted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnSkiCameraHitTheGround
// (Native, Public, BlueprintCallable)
// Parameters:

void UValGunAnimInstance::OnSkiCameraHitTheGround()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnSkiCameraHitTheGround");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnReload
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::OnReload(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnReload");

	Params::UValGunAnimInstance_OnReload_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnMontageBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnMontageBlendingOut");

	Params::UValGunAnimInstance_OnMontageBlendingOut_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnLanded
// (Native, Protected, HasOutParams)
// Parameters:
// struct Engine_HitResult            Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValGunAnimInstance::OnLanded(struct Engine_HitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnLanded");

	Params::UValGunAnimInstance_OnLanded_Params Parms{};

	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnJumped
// (Native, Protected)
// Parameters:

void UValGunAnimInstance::OnJumped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnJumped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnJetpackStarted
// (Native, Public)
// Parameters:
// bool                               bStartedFromMidAir                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::OnJetpackStarted(bool bStartedFromMidAir)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnJetpackStarted");

	Params::UValGunAnimInstance_OnJetpackStarted_Params Parms{};

	Parms.bStartedFromMidAir = bStartedFromMidAir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnEndedCrouch
// (Native, Protected)
// Parameters:

void UValGunAnimInstance::OnEndedCrouch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnEndedCrouch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnClipDataChanged
// (Native, Public)
// Parameters:
// float                              OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::OnClipDataChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnClipDataChanged");

	Params::UValGunAnimInstance_OnClipDataChanged_Params Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.OnAimingStateUpdated
// (Native, Public)
// Parameters:

void UValGunAnimInstance::OnAimingStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "OnAimingStateUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.MovementModeChanged
// (Native, Protected)
// Parameters:
// class ACharacter*                  Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EMovementMode           PrevMovementMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              PreviousCustomMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGunAnimInstance::MovementModeChanged(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "MovementModeChanged");

	Params::UValGunAnimInstance_MovementModeChanged_Params Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGunAnimInstance.IsWeaponLockedOut
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGunAnimInstance::IsWeaponLockedOut()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "IsWeaponLockedOut");

	Params::UValGunAnimInstance_IsWeaponLockedOut_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGunAnimInstance.IsMoving
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGunAnimInstance::IsMoving()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "IsMoving");

	Params::UValGunAnimInstance_IsMoving_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGunAnimInstance.EventStopReload
// (Event, Public, BlueprintEvent)
// Parameters:

void UValGunAnimInstance::EventStopReload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "EventStopReload");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValGunAnimInstance.EventPreFire
// (Event, Public, BlueprintEvent)
// Parameters:

void UValGunAnimInstance::EventPreFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "EventPreFire");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValGunAnimInstance.EventPlayReload
// (Event, Public, BlueprintEvent)
// Parameters:

void UValGunAnimInstance::EventPlayReload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "EventPlayReload");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValGunAnimInstance.EventPlayRecoil
// (Event, Public, BlueprintEvent)
// Parameters:

void UValGunAnimInstance::EventPlayRecoil()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGunAnimInstance", "EventPlayRecoil");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValHackablePanel
// (Actor)

class UClass* AValHackablePanel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValHackablePanel");

	return Clss;
}


// ValHackablePanel Valhalla.Default__ValHackablePanel
// (Public, ClassDefaultObject, ArchetypeObject)

class AValHackablePanel* AValHackablePanel::GetDefaultObj()
{
	static class AValHackablePanel* Default = nullptr;

	if (!Default)
		Default = static_cast<AValHackablePanel*>(AValHackablePanel::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValHackablePanel.ToggleLock
// (Final, Native, Protected)
// Parameters:
// bool                               bLock                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::ToggleLock(bool bLock)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "ToggleLock");

	Params::AValHackablePanel_ToggleLock_Params Parms{};

	Parms.bLock = bLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.StartChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "StartChanneledInteract");

	Params::AValHackablePanel_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.SetIsCancelledChanneling
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsCancelled                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::SetIsCancelledChanneling(bool bIsCancelled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "SetIsCancelledChanneling");

	Params::AValHackablePanel_SetIsCancelledChanneling_Params Parms{};

	Parms.bIsCancelled = bIsCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "SetCachedChanneler");

	Params::AValHackablePanel_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.OnRep_ShouldGenerateOverlapEvents
// (Native, Public)
// Parameters:

void AValHackablePanel::OnRep_ShouldGenerateOverlapEvents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "OnRep_ShouldGenerateOverlapEvents");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.OnRep_CurrentUser
// (Final, Native, Public)
// Parameters:

void AValHackablePanel::OnRep_CurrentUser()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "OnRep_CurrentUser");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.Multicast_OnChannelingStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::Multicast_OnChannelingStart(class AValCharacter* Initiator, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "Multicast_OnChannelingStart");

	Params::AValHackablePanel_Multicast_OnChannelingStart_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.Multicast_OnChannelingEnd
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::Multicast_OnChannelingEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "Multicast_OnChannelingEnd");

	Params::AValHackablePanel_Multicast_OnChannelingEnd_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "Interact");

	Params::AValHackablePanel_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.GetIsCancelledChanneling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValHackablePanel::GetIsCancelledChanneling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetIsCancelledChanneling");

	Params::AValHackablePanel_GetIsCancelledChanneling_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.GetInteractTextType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValInteractText        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValInteractText AValHackablePanel::GetInteractTextType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetInteractTextType");

	Params::AValHackablePanel_GetInteractTextType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValHackablePanel::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetInteractTextOverride");

	Params::AValHackablePanel_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValHackablePanel::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetInteractText");

	Params::AValHackablePanel_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValHackablePanel::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetChannelTime");

	Params::AValHackablePanel_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValHackablePanel::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "GetCachedChanneler");

	Params::AValHackablePanel_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.EndChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "EndChanneledInteract");

	Params::AValHackablePanel_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.ClearCurrentUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValHackablePanel::ClearCurrentUser()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "ClearCurrentUser");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValHackablePanel.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValHackablePanel::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "CanInteract");

	Params::AValHackablePanel_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValHackablePanel.BP_ServerSetCurrentUser
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValHackablePanel::BP_ServerSetCurrentUser()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "BP_ServerSetCurrentUser");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValHackablePanel.BP_ClientOpenPanel
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValHackablePanel::BP_ClientOpenPanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "BP_ClientOpenPanel");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValHackablePanel.BP_ClientOnChannelingStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::BP_ClientOnChannelingStart(class AValCharacter* Initiator, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "BP_ClientOnChannelingStart");

	Params::AValHackablePanel_BP_ClientOnChannelingStart_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValHackablePanel.BP_ClientOnChannelingEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValHackablePanel::BP_ClientOnChannelingEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "BP_ClientOnChannelingEnd");

	Params::AValHackablePanel_BP_ClientOnChannelingEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValHackablePanel.BP_ClientClosePanel
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValHackablePanel::BP_ClientClosePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValHackablePanel", "BP_ClientClosePanel");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValHealthRegenExecutionCalc
// (None)

class UClass* UValHealthRegenExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValHealthRegenExecutionCalc");

	return Clss;
}


// ValHealthRegenExecutionCalc Valhalla.Default__ValHealthRegenExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValHealthRegenExecutionCalc* UValHealthRegenExecutionCalc::GetDefaultObj()
{
	static class UValHealthRegenExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValHealthRegenExecutionCalc*>(UValHealthRegenExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValIndicator
// (Actor)

class UClass* AValIndicator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValIndicator");

	return Clss;
}


// ValIndicator Valhalla.Default__ValIndicator
// (Public, ClassDefaultObject, ArchetypeObject)

class AValIndicator* AValIndicator::GetDefaultObj()
{
	static class AValIndicator* Default = nullptr;

	if (!Default)
		Default = static_cast<AValIndicator*>(AValIndicator::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValIndicator.OnCueInteract
// (Event, Public, BlueprintEvent)
// Parameters:

void AValIndicator::OnCueInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "OnCueInteract");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValIndicator.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValIndicator::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "Interact");

	Params::AValIndicator_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValIndicator.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValIndicator::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "GetInteractText");

	Params::AValIndicator_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValIndicator.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValIndicator::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "GetInteractComponent");

	Params::AValIndicator_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValIndicator.GetInteractCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USphereComponent*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USphereComponent* AValIndicator::GetInteractCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "GetInteractCollisionComp");

	Params::AValIndicator_GetInteractCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValIndicator.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValIndicator::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValIndicator", "CanInteract");

	Params::AValIndicator_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValInteractable
// (None)

class UClass* IValInteractable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInteractable");

	return Clss;
}


// ValInteractable Valhalla.Default__ValInteractable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValInteractable* IValInteractable::GetDefaultObj()
{
	static class IValInteractable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValInteractable*>(IValInteractable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInteractable.StartChanneledInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "StartChanneledInteract");

	Params::IValInteractable_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.SetIsCancelledChanneling
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsCancelled                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::SetIsCancelledChanneling(bool bIsCancelled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "SetIsCancelledChanneling");

	Params::IValInteractable_SetIsCancelledChanneling_Params Parms{};

	Parms.bIsCancelled = bIsCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "SetCachedChanneler");

	Params::IValInteractable_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.PredictInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::PredictInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "PredictInteract");

	Params::IValInteractable_PredictInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.OnEndBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::OnEndBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "OnEndBestInteractable");

	Params::IValInteractable_OnEndBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.OnBecomeBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::OnBecomeBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "OnBecomeBestInteractable");

	Params::IValInteractable_OnBecomeBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "Interact");

	Params::IValInteractable_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.GetIsCancelledChanneling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValInteractable::GetIsCancelledChanneling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetIsCancelledChanneling");

	Params::IValInteractable_GetIsCancelledChanneling_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EInteractType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractType IValInteractable::GetInteractType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractType");

	Params::IValInteractable_GetInteractType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractTextType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValInteractText        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValInteractText IValInteractable::GetInteractTextType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractTextType");

	Params::IValInteractable_GetInteractTextType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IValInteractable::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractTextOverride");

	Params::IValInteractable_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IValInteractable::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractText");

	Params::IValInteractable_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IValInteractable::GetInteractPriority()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractPriority");

	Params::IValInteractable_GetInteractPriority_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* IValInteractable::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetInteractComponent");

	Params::IValInteractable_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValInteractable::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetChannelTime");

	Params::IValInteractable_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* IValInteractable::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetCachedChanneler");

	Params::IValInteractable_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType IValInteractable::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "GetBlockInteractReason");

	Params::IValInteractable_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractable.EndInteraction
// (Native, Public, BlueprintCallable)
// Parameters:

void IValInteractable::EndInteraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "EndInteraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.EndChanneledInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValInteractable::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "EndChanneledInteract");

	Params::IValInteractable_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractable.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValInteractable::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractable", "CanInteract");

	Params::IValInteractable_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValInteractableActor
// (Actor)

class UClass* AValInteractableActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInteractableActor");

	return Clss;
}


// ValInteractableActor Valhalla.Default__ValInteractableActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValInteractableActor* AValInteractableActor::GetDefaultObj()
{
	static class AValInteractableActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValInteractableActor*>(AValInteractableActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInteractableActor.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "SetCachedChanneler");

	Params::AValInteractableActor_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.PredictInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::PredictInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "PredictInteract");

	Params::AValInteractableActor_PredictInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.OnRep_InteractableParent
// (Final, Native, Protected)
// Parameters:

void AValInteractableActor::OnRep_InteractableParent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "OnRep_InteractableParent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "OnEndOverlap");

	Params::AValInteractableActor_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.OnEndBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::OnEndBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "OnEndBestInteractable");

	Params::AValInteractableActor_OnEndBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.OnBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValInteractableActor::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "OnBeginOverlap");

	Params::AValInteractableActor_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.OnBecomeBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::OnBecomeBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "OnBecomeBestInteractable");

	Params::AValInteractableActor_OnBecomeBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableActor::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "Interact");

	Params::AValInteractableActor_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableActor.GetInteractTextType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValInteractText        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValInteractText AValInteractableActor::GetInteractTextType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetInteractTextType");

	Params::AValInteractableActor_GetInteractTextType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValInteractableActor::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetInteractTextOverride");

	Params::AValInteractableActor_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValInteractableActor::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetInteractText");

	Params::AValInteractableActor_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValInteractableActor::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetInteractComponent");

	Params::AValInteractableActor_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInteractableActor::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetChannelTime");

	Params::AValInteractableActor_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValInteractableActor::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "GetCachedChanneler");

	Params::AValInteractableActor_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableActor.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractableActor::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableActor", "CanInteract");

	Params::AValInteractableActor_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValInteractablePanel
// (Actor)

class UClass* AValInteractablePanel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInteractablePanel");

	return Clss;
}


// ValInteractablePanel Valhalla.Default__ValInteractablePanel
// (Public, ClassDefaultObject, ArchetypeObject)

class AValInteractablePanel* AValInteractablePanel::GetDefaultObj()
{
	static class AValInteractablePanel* Default = nullptr;

	if (!Default)
		Default = static_cast<AValInteractablePanel*>(AValInteractablePanel::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInteractablePanel.StartChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "StartChanneledInteract");

	Params::AValInteractablePanel_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.SetIsCancelledChanneling
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsCancelled                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::SetIsCancelledChanneling(bool bIsCancelled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "SetIsCancelledChanneling");

	Params::AValInteractablePanel_SetIsCancelledChanneling_Params Parms{};

	Parms.bIsCancelled = bIsCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "SetCachedChanneler");

	Params::AValInteractablePanel_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.OnRep_ShouldGenerateOverlapEvents
// (Native, Protected)
// Parameters:

void AValInteractablePanel::OnRep_ShouldGenerateOverlapEvents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "OnRep_ShouldGenerateOverlapEvents");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.OnParentBestInteractionTextUpdated
// (Final, Native, Protected)
// Parameters:
// class FText                        NewText                                                          (Parm, NativeAccessSpecifierPublic)

void AValInteractablePanel::OnParentBestInteractionTextUpdated(class FText NewText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "OnParentBestInteractionTextUpdated");

	Params::AValInteractablePanel_OnParentBestInteractionTextUpdated_Params Parms{};

	Parms.NewText = NewText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.Multicast_OnInteract
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::Multicast_OnInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "Multicast_OnInteract");

	Params::AValInteractablePanel_Multicast_OnInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.Multicast_OnChannelingStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::Multicast_OnChannelingStart(class AValCharacter* Initiator, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "Multicast_OnChannelingStart");

	Params::AValInteractablePanel_Multicast_OnChannelingStart_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.Multicast_OnChannelingEnd
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::Multicast_OnChannelingEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "Multicast_OnChannelingEnd");

	Params::AValInteractablePanel_Multicast_OnChannelingEnd_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.K2_CanInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractablePanel::K2_CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "K2_CanInteract");

	Params::AValInteractablePanel_K2_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.Interact
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "Interact");

	Params::AValInteractablePanel_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.GetIsCancelledChanneling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractablePanel::GetIsCancelledChanneling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetIsCancelledChanneling");

	Params::AValInteractablePanel_GetIsCancelledChanneling_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.GetInteractTextType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValInteractText        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EValInteractText AValInteractablePanel::GetInteractTextType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetInteractTextType");

	Params::AValInteractablePanel_GetInteractTextType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.GetInteractTextOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValInteractablePanel::GetInteractTextOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetInteractTextOverride");

	Params::AValInteractablePanel_GetInteractTextOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValInteractablePanel::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetInteractText");

	Params::AValInteractablePanel_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInteractablePanel::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetChannelTime");

	Params::AValInteractablePanel_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValInteractablePanel::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "GetCachedChanneler");

	Params::AValInteractablePanel_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.EndChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "EndChanneledInteract");

	Params::AValInteractablePanel_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.ClearCurrentUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValInteractablePanel::ClearCurrentUser()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "ClearCurrentUser");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractablePanel::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "CanInteract");

	Params::AValInteractablePanel_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractablePanel.CacheParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      NewParent                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::CacheParent(class AActor* NewParent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "CacheParent");

	Params::AValInteractablePanel_CacheParent_Params Parms{};

	Parms.NewParent = NewParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractablePanel.BP_OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::BP_OnInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "BP_OnInteract");

	Params::AValInteractablePanel_BP_OnInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValInteractablePanel.BP_OnChannelingStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::BP_OnChannelingStart(class AValCharacter* Initiator, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "BP_OnChannelingStart");

	Params::AValInteractablePanel_BP_OnChannelingStart_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValInteractablePanel.BP_OnChannelingEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractablePanel::BP_OnChannelingEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractablePanel", "BP_OnChannelingEnd");

	Params::AValInteractablePanel_BP_OnChannelingEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValInventoryManager
// (Actor)

class UClass* AValInventoryManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInventoryManager");

	return Clss;
}


// ValInventoryManager Valhalla.Default__ValInventoryManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValInventoryManager* AValInventoryManager::GetDefaultObj()
{
	static class AValInventoryManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValInventoryManager*>(AValInventoryManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInventoryManager.UseSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::UseSlot(struct Valhalla_InventorySlot& RequestedSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "UseSlot");

	Params::AValInventoryManager_UseSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.UpdatePlayerModifierValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValInventoryManager::UpdatePlayerModifierValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "UpdatePlayerModifierValues");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.UpdatePlayerAttributeValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValInventoryManager::UpdatePlayerAttributeValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "UpdatePlayerAttributeValues");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.StoreSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::StoreSlot(struct Valhalla_InventorySlot& RequestedSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "StoreSlot");

	Params::AValInventoryManager_StoreSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.SetActiveStashTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::SetActiveStashTab(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "SetActiveStashTab");

	Params::AValInventoryManager_SetActiveStashTab_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerUseSlot
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerUseSlot(struct Valhalla_InventorySlot& RequestedSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerUseSlot");

	Params::AValInventoryManager_ServerUseSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerStoreSlot
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerStoreSlot(struct Valhalla_InventorySlot& RequestedSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerStoreSlot");

	Params::AValInventoryManager_ServerStoreSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerMoveToSecureSlot
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerMoveToSecureSlot(struct Valhalla_InventorySlot& RequestedSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerMoveToSecureSlot");

	Params::AValInventoryManager_ServerMoveToSecureSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerExtractInteractableInventorySlots
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:

void AValInventoryManager::ServerExtractInteractableInventorySlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerExtractInteractableInventorySlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerEquipLoadout
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class FString                      LoadoutId                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerEquipLoadout(const class FString& LoadoutId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerEquipLoadout");

	Params::AValInventoryManager_ServerEquipLoadout_Params Parms{};

	Parms.LoadoutId = LoadoutId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerEquipClassSlotItem
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForceEquip                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerEquipClassSlotItem(struct GameplayTags_GameplayTag& CharacterClass, int32 SlotId, int32 ItemId, bool ForceEquip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerEquipClassSlotItem");

	Params::AValInventoryManager_ServerEquipClassSlotItem_Params Parms{};

	Parms.CharacterClass = CharacterClass;
	Parms.SlotId = SlotId;
	Parms.ItemId = ItemId;
	Parms.ForceEquip = ForceEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerDragSlot
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_InventorySlot      RequestedStart                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      RequestedEnd                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerDragSlot(struct Valhalla_InventorySlot& RequestedStart, struct Valhalla_InventorySlot& RequestedEnd, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerDragSlot");

	Params::AValInventoryManager_ServerDragSlot_Params Parms{};

	Parms.RequestedStart = RequestedStart;
	Parms.RequestedEnd = RequestedEnd;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ServerAssignQuickSlotItem
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    QuickSlot                                                        (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::ServerAssignQuickSlotItem(struct GameplayTags_GameplayTag& QuickSlot, int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ServerAssignQuickSlotItem");

	Params::AValInventoryManager_ServerAssignQuickSlotItem_Params Parms{};

	Parms.QuickSlot = QuickSlot;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.SaveLoadouts
// (Native, Public, BlueprintCallable)
// Parameters:

void AValInventoryManager::SaveLoadouts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "SaveLoadouts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.RemoveSellRequest
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            ClientRefId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::RemoveSellRequest(struct CoreUObject_Guid& ClientRefId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveSellRequest");

	Params::AValInventoryManager_RemoveSellRequest_Params Parms{};

	Parms.ClientRefId = ClientRefId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.RemoveMissionSlotsType
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::RemoveMissionSlotsType(struct GameplayTags_GameplayTag& Type, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveMissionSlotsType");

	Params::AValInventoryManager_RemoveMissionSlotsType_Params Parms{};

	Parms.Type = Type;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.RemoveItemIdFromMissionSlots
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::RemoveItemIdFromMissionSlots(int32 ItemId, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveItemIdFromMissionSlots");

	Params::AValInventoryManager_RemoveItemIdFromMissionSlots_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.RemoveEquipSlotQuantity
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::RemoveEquipSlotQuantity(struct GameplayTags_GameplayTag& EquipSlot, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveEquipSlotQuantity");

	Params::AValInventoryManager_RemoveEquipSlotQuantity_Params Parms{};

	Parms.EquipSlot = EquipSlot;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.RemoveBackpackType
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::RemoveBackpackType(struct GameplayTags_GameplayTag& Type, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveBackpackType");

	Params::AValInventoryManager_RemoveBackpackType_Params Parms{};

	Parms.Type = Type;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.RemoveArsenalType
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::RemoveArsenalType(struct GameplayTags_GameplayTag& Type, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "RemoveArsenalType");

	Params::AValInventoryManager_RemoveArsenalType_Params Parms{};

	Parms.Type = Type;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.OnWeaponCosmeticConfigLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnWeaponCosmeticConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnWeaponCosmeticConfigLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnStashAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnStashAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnStashAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnSettingsUpdated
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnSettingsUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnSettingsUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnSettingsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnSettingsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnSettingsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_UnlockedPassiveSlotIds
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_UnlockedPassiveSlotIds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_UnlockedPassiveSlotIds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_UnlockedPassiveIds
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_UnlockedPassiveIds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_UnlockedPassiveIds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_UnlockedAbilityIds
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_UnlockedAbilityIds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_UnlockedAbilityIds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_StashSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_StashSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_StashSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_StashSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_StashSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_StashSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_StashLoadoutId
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_StashLoadoutId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_StashLoadoutId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_SecureSlotsSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_SecureSlotsSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_SecureSlotsSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_PlayerPropertyValues
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_PlayerPropertyValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_PlayerPropertyValues");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_PlayerLoadoutId
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_PlayerLoadoutId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_PlayerLoadoutId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_OverflowSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_OverflowSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_OverflowSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_MissionSlotsSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_MissionSlotsSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_MissionSlotsSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_MissionSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_MissionSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_MissionSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_LockedPassiveSlotAssets
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_LockedPassiveSlotAssets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_LockedPassiveSlotAssets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_LockedPassiveAssets
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_LockedPassiveAssets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_LockedPassiveAssets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_LockedAbilityAssets
// (Final, Native, Public)
// Parameters:

void AValInventoryManager::OnRep_LockedAbilityAssets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_LockedAbilityAssets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_Loadouts
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_Loadouts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_Loadouts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_EquippedSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_EquippedSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_EquippedSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_CosmeticSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_CosmeticSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_CosmeticSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_CosmeticLoadoutId
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_CosmeticLoadoutId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_CosmeticLoadoutId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_CharacterClass
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_CharacterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_CharacterClass");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_BackpackSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_BackpackSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_BackpackSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_BackpackSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_BackpackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_BackpackSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_ArsenalSlots
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_ArsenalSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_ArsenalSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_ArsenalSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_ArsenalSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_ArsenalSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnRep_ActiveStashSize
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnRep_ActiveStashSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnRep_ActiveStashSize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnPlayerLoggedOut
// (Native, Protected)
// Parameters:
// class AGameModeBase*               InGameMode                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::OnPlayerLoggedOut(class AGameModeBase* InGameMode, class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnPlayerLoggedOut");

	Params::AValInventoryManager_OnPlayerLoggedOut_Params Parms{};

	Parms.InGameMode = InGameMode;
	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnPlayerInfoReady
// (Native, Protected)
// Parameters:
// class UValPlayerInfo*              PlayerInfo                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::OnPlayerInfoReady(class UValPlayerInfo* PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnPlayerInfoReady");

	Params::AValInventoryManager_OnPlayerInfoReady_Params Parms{};

	Parms.PlayerInfo = PlayerInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnPlayerAttributeConfigSet
// (Native, Protected)
// Parameters:
// class UPlayerAttributeConfig*      PlayerAttributeConfig                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::OnPlayerAttributeConfigSet(class UPlayerAttributeConfig* PlayerAttributeConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnPlayerAttributeConfigSet");

	Params::AValInventoryManager_OnPlayerAttributeConfigSet_Params Parms{};

	Parms.PlayerAttributeConfig = PlayerAttributeConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnPassiveSlotAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnPassiveSlotAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnPassiveSlotAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnPassiveAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnPassiveAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnPassiveAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnOverflowAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnOverflowAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnOverflowAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnMissionSlotsAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnMissionSlotsAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnMissionSlotsAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnLoadoutsVerified
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnLoadoutsVerified()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnLoadoutsVerified");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnLoadoutConfigReady
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnLoadoutConfigReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnLoadoutConfigReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnInventoryUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::OnInventoryUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnInventoryUpdated");

	Params::AValInventoryManager_OnInventoryUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnInventoryOrderResults
// (Native, Protected, HasDefaults)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Guid            OrderReferenceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::OnInventoryOrderResults(bool Success, const struct CoreUObject_Guid& OrderReferenceId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnInventoryOrderResults");

	Params::AValInventoryManager_OnInventoryOrderResults_Params Parms{};

	Parms.Success = Success;
	Parms.OrderReferenceId = OrderReferenceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnInventoryLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnGetLoadoutSettingsResponse
// (Native, Protected, HasOutParams)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct RallyHereIntegration_RH_PlayerSettingsDataWrapperResponse                                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void AValInventoryManager::OnGetLoadoutSettingsResponse(bool Success, struct RallyHereIntegration_RH_PlayerSettingsDataWrapper* Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnGetLoadoutSettingsResponse");

	Params::AValInventoryManager_OnGetLoadoutSettingsResponse_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Response != nullptr)
		*Response = std::move(Parms.Response);

}


// Function Valhalla.ValInventoryManager.OnGameStateSet
// (Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::OnGameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnGameStateSet");

	Params::AValInventoryManager_OnGameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnEquippedAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnEquippedAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnEquippedAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnCosmeticAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnCosmeticAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnCosmeticAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnBackpackAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnBackpackAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnBackpackAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnArsenalAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnArsenalAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnArsenalAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.OnAbilityAssetsLoaded
// (Native, Protected)
// Parameters:

void AValInventoryManager::OnAbilityAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "OnAbilityAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.MoveToSecureSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedStart                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::MoveToSecureSlot(struct Valhalla_InventorySlot& RequestedStart)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "MoveToSecureSlot");

	Params::AValInventoryManager_MoveToSecureSlot_Params Parms{};

	Parms.RequestedStart = RequestedStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.IsStashFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsStashFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsStashFull");

	Params::AValInventoryManager_IsStashFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsMissionSlotsFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsMissionSlotsFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsMissionSlotsFull");

	Params::AValInventoryManager_IsMissionSlotsFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdStashBlacklisted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdStashBlacklisted(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdStashBlacklisted");

	Params::AValInventoryManager_IsItemIdStashBlacklisted_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdSecureSlotBlackListed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdSecureSlotBlackListed(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdSecureSlotBlackListed");

	Params::AValInventoryManager_IsItemIdSecureSlotBlackListed_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdInInventoryMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdInInventoryMap(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdInInventoryMap");

	Params::AValInventoryManager_IsItemIdInInventoryMap_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdEquipped
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdEquipped(int32 ItemId, int32* SlotId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdEquipped");

	Params::AValInventoryManager_IsItemIdEquipped_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SlotId != nullptr)
		*SlotId = Parms.SlotId;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdBackpackBlacklisted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdBackpackBlacklisted(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdBackpackBlacklisted");

	Params::AValInventoryManager_IsItemIdBackpackBlacklisted_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemIdArsenalBlacklisted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemIdArsenalBlacklisted(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemIdArsenalBlacklisted");

	Params::AValInventoryManager_IsItemIdArsenalBlacklisted_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsItemClassCompatible
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsItemClassCompatible(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsItemClassCompatible");

	Params::AValInventoryManager_IsItemClassCompatible_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsInventoryIdEquipped
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            InventoryId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsInventoryIdEquipped(struct CoreUObject_Guid& InventoryId, int32* SlotId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsInventoryIdEquipped");

	Params::AValInventoryManager_IsInventoryIdEquipped_Params Parms{};

	Parms.InventoryId = InventoryId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SlotId != nullptr)
		*SlotId = Parms.SlotId;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsBackpackFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsBackpackFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsBackpackFull");

	Params::AValInventoryManager_IsBackpackFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.IsArsenalFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::IsArsenalFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "IsArsenalFull");

	Params::AValInventoryManager_IsArsenalFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.InitializePlayer
// (Native, Protected)
// Parameters:

void AValInventoryManager::InitializePlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "InitializePlayer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.GetUpgradeLevelForItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              UpgradeLevel                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetUpgradeLevelForItemId(int32 ItemId, int32* UpgradeLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetUpgradeLevelForItemId");

	Params::AValInventoryManager_GetUpgradeLevelForItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (UpgradeLevel != nullptr)
		*UpgradeLevel = Parms.UpgradeLevel;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetUnlockedPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                      OutUnlockedPerks                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetUnlockedPerks(TArray<int32>* OutUnlockedPerks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetUnlockedPerks");

	Params::AValInventoryManager_GetUnlockedPerks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUnlockedPerks != nullptr)
		*OutUnlockedPerks = std::move(Parms.OutUnlockedPerks);

}


// Function Valhalla.ValInventoryManager.GetUnlockedAbilities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                      OutUnlockedAbilities                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetUnlockedAbilities(TArray<int32>* OutUnlockedAbilities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetUnlockedAbilities");

	Params::AValInventoryManager_GetUnlockedAbilities_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUnlockedAbilities != nullptr)
		*OutUnlockedAbilities = std::move(Parms.OutUnlockedAbilities);

}


// Function Valhalla.ValInventoryManager.GetTransientItemLocking
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetTransientItemLocking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetTransientItemLocking");

	Params::AValInventoryManager_GetTransientItemLocking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetStashSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>StashSlots                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetStashSlots(TArray<struct Valhalla_InventorySlot>* StashSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetStashSlots");

	Params::AValInventoryManager_GetStashSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StashSlots != nullptr)
		*StashSlots = std::move(Parms.StashSlots);

}


// Function Valhalla.ValInventoryManager.GetStashSlotAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      StashSlot                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetStashSlotAt(int32 SlotId, struct Valhalla_InventorySlot* StashSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetStashSlotAt");

	Params::AValInventoryManager_GetStashSlotAt_Params Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StashSlot != nullptr)
		*StashSlot = std::move(Parms.StashSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetStashSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetStashSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetStashSize");

	Params::AValInventoryManager_GetStashSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetStashLoadoutId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AValInventoryManager::GetStashLoadoutId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetStashLoadoutId");

	Params::AValInventoryManager_GetStashLoadoutId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetSlotIdByEquipSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutType                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetSlotIdByEquipSlot(struct GameplayTags_GameplayTag& EquipSlot, int32* SlotId, int32 LoadoutType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetSlotIdByEquipSlot");

	Params::AValInventoryManager_GetSlotIdByEquipSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;
	Parms.LoadoutType = LoadoutType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SlotId != nullptr)
		*SlotId = Parms.SlotId;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetSettingsSubsystem
// (Final, Native, Public)
// Parameters:
// class UValSettingsSubsystem*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSettingsSubsystem* AValInventoryManager::GetSettingsSubsystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetSettingsSubsystem");

	Params::AValInventoryManager_GetSettingsSubsystem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetSecureSlotsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetSecureSlotsSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetSecureSlotsSize");

	Params::AValInventoryManager_GetSecureSlotsSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetQuickSlotInventory
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    QuickSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>Inventory                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetQuickSlotInventory(struct GameplayTags_GameplayTag& QuickSlot, TArray<struct Valhalla_InventoryItem>* Inventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetQuickSlotInventory");

	Params::AValInventoryManager_GetQuickSlotInventory_Params Parms{};

	Parms.QuickSlot = QuickSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetPlayerPropertyLevels
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_PlayerPropertyData>OutData                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetPlayerPropertyLevels(TArray<struct Valhalla_PlayerPropertyData>* OutData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetPlayerPropertyLevels");

	Params::AValInventoryManager_GetPlayerPropertyLevels_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

}


// Function Valhalla.ValInventoryManager.GetPlayerPropertyLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EPlayerProperty         PropertyToCheck                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetPlayerPropertyLevel(enum class EPlayerProperty PropertyToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetPlayerPropertyLevel");

	Params::AValInventoryManager_GetPlayerPropertyLevel_Params Parms{};

	Parms.PropertyToCheck = PropertyToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetPlayerLoadoutId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AValInventoryManager::GetPlayerLoadoutId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetPlayerLoadoutId");

	Params::AValInventoryManager_GetPlayerLoadoutId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetPlayerInventory
// (Final, Native, Public)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* AValInventoryManager::GetPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetPlayerInventory");

	Params::AValInventoryManager_GetPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetPlayerAttributeValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<enum class EPlayerAttributeType, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<enum class EPlayerAttributeType, float> AValInventoryManager::GetPlayerAttributeValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetPlayerAttributeValues");

	Params::AValInventoryManager_GetPlayerAttributeValues_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetNumOpenMissionSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetNumOpenMissionSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetNumOpenMissionSlots");

	Params::AValInventoryManager_GetNumOpenMissionSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetNumOpenBackpackSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetNumOpenBackpackSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetNumOpenBackpackSlots");

	Params::AValInventoryManager_GetNumOpenBackpackSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetMissionSlotsSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetMissionSlotsSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetMissionSlotsSize");

	Params::AValInventoryManager_GetMissionSlotsSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetMissionSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>MissionSlots                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetMissionSlots(TArray<struct Valhalla_InventorySlot>* MissionSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetMissionSlots");

	Params::AValInventoryManager_GetMissionSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MissionSlots != nullptr)
		*MissionSlots = std::move(Parms.MissionSlots);

}


// Function Valhalla.ValInventoryManager.GetMissionSlotAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      MissionSlot                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetMissionSlotAt(int32 SlotId, struct Valhalla_InventorySlot* MissionSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetMissionSlotAt");

	Params::AValInventoryManager_GetMissionSlotAt_Params Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MissionSlot != nullptr)
		*MissionSlot = std::move(Parms.MissionSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetMaximumWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInventoryManager::GetMaximumWeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetMaximumWeight");

	Params::AValInventoryManager_GetMaximumWeight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetMaxEquipmentRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValInventoryManager::GetMaxEquipmentRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetMaxEquipmentRarity");

	Params::AValInventoryManager_GetMaxEquipmentRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetLockedPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UValItemAsset>>OutLockedPerks                                                   (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AValInventoryManager::GetLockedPerks(TArray<TSoftObjectPtr<class UValItemAsset>>* OutLockedPerks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetLockedPerks");

	Params::AValInventoryManager_GetLockedPerks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLockedPerks != nullptr)
		*OutLockedPerks = std::move(Parms.OutLockedPerks);

}


// Function Valhalla.ValInventoryManager.GetLockedAbilities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSoftObjectPtr<class UValItemAsset>>OutLockedAbilities                                               (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AValInventoryManager::GetLockedAbilities(TArray<TSoftObjectPtr<class UValItemAsset>>* OutLockedAbilities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetLockedAbilities");

	Params::AValInventoryManager_GetLockedAbilities_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLockedAbilities != nullptr)
		*OutLockedAbilities = std::move(Parms.OutLockedAbilities);

}


// Function Valhalla.ValInventoryManager.GetLoadouts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_PlatformLoadout>Loadouts                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetLoadouts(TArray<struct Valhalla_PlatformLoadout>* Loadouts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetLoadouts");

	Params::AValInventoryManager_GetLoadouts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Loadouts != nullptr)
		*Loadouts = std::move(Parms.Loadouts);

}


// Function Valhalla.ValInventoryManager.GetLoadoutConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               LogError                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValLoadoutConfig*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValLoadoutConfig* AValInventoryManager::GetLoadoutConfig(bool LogError)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetLoadoutConfig");

	Params::AValInventoryManager_GetLoadoutConfig_Params Parms{};

	Parms.LogError = LogError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetItemModAssetById
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemModAsset*            ItemModAsset                                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetItemModAssetById(int32 ItemId, class UValItemModAsset** ItemModAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetItemModAssetById");

	Params::AValInventoryManager_GetItemModAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemModAsset != nullptr)
		*ItemModAsset = Parms.ItemModAsset;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetItemIdForEquipSlot
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                              ItemId                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    DesiredSlot                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetItemIdForEquipSlot(int32* ItemId, struct GameplayTags_GameplayTag& DesiredSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetItemIdForEquipSlot");

	Params::AValInventoryManager_GetItemIdForEquipSlot_Params Parms{};

	Parms.DesiredSlot = DesiredSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemId != nullptr)
		*ItemId = Parms.ItemId;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetItemAssetById
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               ItemAsset                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetItemAssetById(int32 ItemId, class UValItemAsset** ItemAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetItemAssetById");

	Params::AValInventoryManager_GetItemAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemAsset != nullptr)
		*ItemAsset = Parms.ItemAsset;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetInventoryItemsByItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>OutInventoryItems                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetInventoryItemsByItemId(int32 ItemId, TArray<struct Valhalla_InventoryItem>* OutInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetInventoryItemsByItemId");

	Params::AValInventoryManager_GetInventoryItemsByItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutInventoryItems != nullptr)
		*OutInventoryItems = std::move(Parms.OutInventoryItems);

}


// Function Valhalla.ValInventoryManager.GetInventoryItemByInventoryId
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            InventoryId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      OutInventoryItem                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetInventoryItemByInventoryId(struct CoreUObject_Guid& InventoryId, struct Valhalla_InventoryItem* OutInventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetInventoryItemByInventoryId");

	Params::AValInventoryManager_GetInventoryItemByInventoryId_Params Parms{};

	Parms.InventoryId = InventoryId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutInventoryItem != nullptr)
		*OutInventoryItem = std::move(Parms.OutInventoryItem);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetInventoryIdsFromItemId
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_Guid>    OutInventoryIds                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetInventoryIdsFromItemId(int32 ItemId, TArray<struct CoreUObject_Guid>* OutInventoryIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetInventoryIdsFromItemId");

	Params::AValInventoryManager_GetInventoryIdsFromItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutInventoryIds != nullptr)
		*OutInventoryIds = std::move(Parms.OutInventoryIds);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetInventoryForItemType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ItemType                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>OutInventory                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetInventoryForItemType(struct GameplayTags_GameplayTag& ItemType, TArray<struct Valhalla_InventoryItem>* OutInventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetInventoryForItemType");

	Params::AValInventoryManager_GetInventoryForItemType_Params Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutInventory != nullptr)
		*OutInventory = std::move(Parms.OutInventory);

}


// Function Valhalla.ValInventoryManager.GetGlobalProtection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInventoryManager::GetGlobalProtection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetGlobalProtection");

	Params::AValInventoryManager_GetGlobalProtection_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquipSlotForRequestedSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquipSlotForRequestedSlot(struct Valhalla_InventorySlot& RequestedSlot, struct GameplayTags_GameplayTag* EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquipSlotForRequestedSlot");

	Params::AValInventoryManager_GetEquipSlotForRequestedSlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquipSlot != nullptr)
		*EquipSlot = std::move(Parms.EquipSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquipSlotBySlotId
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutType                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquipSlotBySlotId(int32 SlotId, struct GameplayTags_GameplayTag* EquipSlot, int32 LoadoutType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquipSlotBySlotId");

	Params::AValInventoryManager_GetEquipSlotBySlotId_Params Parms{};

	Parms.SlotId = SlotId;
	Parms.LoadoutType = LoadoutType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquipSlot != nullptr)
		*EquipSlot = std::move(Parms.EquipSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquippedSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>EquippedSlots                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetEquippedSlots(TArray<struct Valhalla_InventorySlot>* EquippedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquippedSlots");

	Params::AValInventoryManager_GetEquippedSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquippedSlots != nullptr)
		*EquippedSlots = std::move(Parms.EquippedSlots);

}


// Function Valhalla.ValInventoryManager.GetEquippedSlotAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      EquippedSlot                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                              LoadoutTypeId                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquippedSlotAt(int32 SlotId, struct Valhalla_InventorySlot* EquippedSlot, int32 LoadoutTypeId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquippedSlotAt");

	Params::AValInventoryManager_GetEquippedSlotAt_Params Parms{};

	Parms.SlotId = SlotId;
	Parms.LoadoutTypeId = LoadoutTypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquippedSlot != nullptr)
		*EquippedSlot = std::move(Parms.EquippedSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquippedCosmeticItemsAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquippedCosmeticItemsAt(struct GameplayTags_GameplayTag& EquipSlot, struct Valhalla_InventoryItem* InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquippedCosmeticItemsAt");

	Params::AValInventoryManager_GetEquippedCosmeticItemsAt_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InventoryItem != nullptr)
		*InventoryItem = std::move(Parms.InventoryItem);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquippedCosmeticForItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquippedCosmeticForItemId(int32 ItemId, struct Valhalla_InventoryItem* InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquippedCosmeticForItemId");

	Params::AValInventoryManager_GetEquippedCosmeticForItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InventoryItem != nullptr)
		*InventoryItem = std::move(Parms.InventoryItem);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetEquippedClassSlotItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               ItemAsset                                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetEquippedClassSlotItem(struct GameplayTags_GameplayTag& CharacterClass, int32 SlotId, class UValItemAsset** ItemAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetEquippedClassSlotItem");

	Params::AValInventoryManager_GetEquippedClassSlotItem_Params Parms{};

	Parms.CharacterClass = CharacterClass;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemAsset != nullptr)
		*ItemAsset = Parms.ItemAsset;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetCurrentWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInventoryManager::GetCurrentWeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCurrentWeight");

	Params::AValInventoryManager_GetCurrentWeight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetCosmeticSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>CosmeticSlots                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetCosmeticSlots(TArray<struct Valhalla_InventorySlot>* CosmeticSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCosmeticSlots");

	Params::AValInventoryManager_GetCosmeticSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CosmeticSlots != nullptr)
		*CosmeticSlots = std::move(Parms.CosmeticSlots);

}


// Function Valhalla.ValInventoryManager.GetCosmeticItemsForEquipSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>InventoryItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetCosmeticItemsForEquipSlot(struct GameplayTags_GameplayTag& EquipSlot, TArray<struct Valhalla_InventoryItem>* InventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCosmeticItemsForEquipSlot");

	Params::AValInventoryManager_GetCosmeticItemsForEquipSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InventoryItems != nullptr)
		*InventoryItems = std::move(Parms.InventoryItems);

}


// Function Valhalla.ValInventoryManager.GetClassSlotOptions
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValItemAsset*>       OptionAssets                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetClassSlotOptions(struct GameplayTags_GameplayTag& CharacterClass, int32 SlotId, TArray<class UValItemAsset*>* OptionAssets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetClassSlotOptions");

	Params::AValInventoryManager_GetClassSlotOptions_Params Parms{};

	Parms.CharacterClass = CharacterClass;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OptionAssets != nullptr)
		*OptionAssets = std::move(Parms.OptionAssets);

}


// Function Valhalla.ValInventoryManager.GetClassAvailablePerks
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValItemAsset*>       OutPerkAssets                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetClassAvailablePerks(struct GameplayTags_GameplayTag& CharacterClass, TArray<class UValItemAsset*>* OutPerkAssets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetClassAvailablePerks");

	Params::AValInventoryManager_GetClassAvailablePerks_Params Parms{};

	Parms.CharacterClass = CharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutPerkAssets != nullptr)
		*OutPerkAssets = std::move(Parms.OutPerkAssets);

}


// Function Valhalla.ValInventoryManager.GetClassAttributeValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<enum class EPlayerAttributeType, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<enum class EPlayerAttributeType, float> AValInventoryManager::GetClassAttributeValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetClassAttributeValues");

	Params::AValInventoryManager_GetClassAttributeValues_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetClassAttributeMultipliers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<enum class EPlayerAttributeType, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<enum class EPlayerAttributeType, float> AValInventoryManager::GetClassAttributeMultipliers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetClassAttributeMultipliers");

	Params::AValInventoryManager_GetClassAttributeMultipliers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetCharacterClasses
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct GameplayTags_GameplayTag>CharacterClasses                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetCharacterClasses(TArray<struct GameplayTags_GameplayTag>* CharacterClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCharacterClasses");

	Params::AValInventoryManager_GetCharacterClasses_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CharacterClasses != nullptr)
		*CharacterClasses = std::move(Parms.CharacterClasses);

}


// Function Valhalla.ValInventoryManager.GetCharacterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValInventoryManager::GetCharacterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCharacterClass");

	Params::AValInventoryManager_GetCharacterClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetCharacterAbilities
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValItemAsset*>       Abilities                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetCharacterAbilities(struct GameplayTags_GameplayTag& CharacterClass, TArray<class UValItemAsset*>* Abilities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetCharacterAbilities");

	Params::AValInventoryManager_GetCharacterAbilities_Params Parms{};

	Parms.CharacterClass = CharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Abilities != nullptr)
		*Abilities = std::move(Parms.Abilities);

}


// Function Valhalla.ValInventoryManager.GetBooostAttributeValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<enum class EPlayerAttributeType, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<enum class EPlayerAttributeType, float> AValInventoryManager::GetBooostAttributeValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetBooostAttributeValues");

	Params::AValInventoryManager_GetBooostAttributeValues_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetBackpackSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>BackpackSlots                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetBackpackSlots(TArray<struct Valhalla_InventorySlot>* BackpackSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetBackpackSlots");

	Params::AValInventoryManager_GetBackpackSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BackpackSlots != nullptr)
		*BackpackSlots = std::move(Parms.BackpackSlots);

}


// Function Valhalla.ValInventoryManager.GetBackpackSlotAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      BackpackSlot                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetBackpackSlotAt(int32 SlotId, struct Valhalla_InventorySlot* BackpackSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetBackpackSlotAt");

	Params::AValInventoryManager_GetBackpackSlotAt_Params Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BackpackSlot != nullptr)
		*BackpackSlot = std::move(Parms.BackpackSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetBackpackSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetBackpackSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetBackpackSize");

	Params::AValInventoryManager_GetBackpackSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetArsenalSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>ArsenalSlots                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValInventoryManager::GetArsenalSlots(TArray<struct Valhalla_InventorySlot>* ArsenalSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetArsenalSlots");

	Params::AValInventoryManager_GetArsenalSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ArsenalSlots != nullptr)
		*ArsenalSlots = std::move(Parms.ArsenalSlots);

}


// Function Valhalla.ValInventoryManager.GetArsenalSlotAt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      ArsenalSlot                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::GetArsenalSlotAt(int32 SlotId, struct Valhalla_InventorySlot* ArsenalSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetArsenalSlotAt");

	Params::AValInventoryManager_GetArsenalSlotAt_Params Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ArsenalSlot != nullptr)
		*ArsenalSlot = std::move(Parms.ArsenalSlot);

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetArsenalSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetArsenalSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetArsenalSize");

	Params::AValInventoryManager_GetArsenalSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetAllAttributeValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<enum class EPlayerAttributeType, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<enum class EPlayerAttributeType, float> AValInventoryManager::GetAllAttributeValues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetAllAttributeValues");

	Params::AValInventoryManager_GetAllAttributeValues_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.GetActiveStashSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInventoryManager::GetActiveStashSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "GetActiveStashSize");

	Params::AValInventoryManager_GetActiveStashSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.ExtractInteractableInventorySlots
// (Native, Public, BlueprintCallable)
// Parameters:

void AValInventoryManager::ExtractInteractableInventorySlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ExtractInteractableInventorySlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.EquipLoadout
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                      LoadoutId                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::EquipLoadout(const class FString& LoadoutId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "EquipLoadout");

	Params::AValInventoryManager_EquipLoadout_Params Parms{};

	Parms.LoadoutId = LoadoutId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.EquipCosmeticItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      RequestedItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::EquipCosmeticItem(struct GameplayTags_GameplayTag& EquipSlot, struct Valhalla_InventoryItem& RequestedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "EquipCosmeticItem");

	Params::AValInventoryManager_EquipCosmeticItem_Params Parms{};

	Parms.EquipSlot = EquipSlot;
	Parms.RequestedItem = RequestedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.EquipClassSlotItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SlotId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForceEquip                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::EquipClassSlotItem(struct GameplayTags_GameplayTag& CharacterClass, int32 SlotId, int32 ItemId, bool ForceEquip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "EquipClassSlotItem");

	Params::AValInventoryManager_EquipClassSlotItem_Params Parms{};

	Parms.CharacterClass = CharacterClass;
	Parms.SlotId = SlotId;
	Parms.ItemId = ItemId;
	Parms.ForceEquip = ForceEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.EquipCharacterClass
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::EquipCharacterClass(struct GameplayTags_GameplayTag& CharacterClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "EquipCharacterClass");

	Params::AValInventoryManager_EquipCharacterClass_Params Parms{};

	Parms.CharacterClass = CharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.DragSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedStart                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      RequestedEnd                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::DragSlot(struct Valhalla_InventorySlot& RequestedStart, struct Valhalla_InventorySlot& RequestedEnd, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "DragSlot");

	Params::AValInventoryManager_DragSlot_Params Parms{};

	Parms.RequestedStart = RequestedStart;
	Parms.RequestedEnd = RequestedEnd;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.DoesMissionSlotsContainType
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::DoesMissionSlotsContainType(struct GameplayTags_GameplayTag& Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "DoesMissionSlotsContainType");

	Params::AValInventoryManager_DoesMissionSlotsContainType_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.DoesMissionSlotsContainItemId
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::DoesMissionSlotsContainItemId(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "DoesMissionSlotsContainItemId");

	Params::AValInventoryManager_DoesMissionSlotsContainItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.DoesBackpackContainType
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Type                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::DoesBackpackContainType(struct GameplayTags_GameplayTag& Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "DoesBackpackContainType");

	Params::AValInventoryManager_DoesBackpackContainType_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.DoesBackpackContainItemId
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::DoesBackpackContainItemId(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "DoesBackpackContainItemId");

	Params::AValInventoryManager_DoesBackpackContainItemId_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.ClientNotifySlotUseResult
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::ClientNotifySlotUseResult(bool Success, int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ClientNotifySlotUseResult");

	Params::AValInventoryManager_ClientNotifySlotUseResult_Params Parms{};

	Parms.Success = Success;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.ClientClearCachedPerkUnlocks
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValInventoryManager::ClientClearCachedPerkUnlocks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "ClientClearCachedPerkUnlocks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.CanSlotBeEmpty
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      InventorySlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInventoryManager::CanSlotBeEmpty(struct Valhalla_InventorySlot& InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "CanSlotBeEmpty");

	Params::AValInventoryManager_CanSlotBeEmpty_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInventoryManager.AssignQuickSlotItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    QuickSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::AssignQuickSlotItem(struct GameplayTags_GameplayTag& QuickSlot, int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "AssignQuickSlotItem");

	Params::AValInventoryManager_AssignQuickSlotItem_Params Parms{};

	Parms.QuickSlot = QuickSlot;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.AssignItemIdToLoadout
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    DesiredSlot                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInventoryManager::AssignItemIdToLoadout(int32 ItemId, struct GameplayTags_GameplayTag& DesiredSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "AssignItemIdToLoadout");

	Params::AValInventoryManager_AssignItemIdToLoadout_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.DesiredSlot = DesiredSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInventoryManager.AddSellRequest
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            ClientRefId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventorySlot      InventorySlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValInventoryManager::AddSellRequest(struct CoreUObject_Guid& ClientRefId, struct Valhalla_InventorySlot& InventorySlot, struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInventoryManager", "AddSellRequest");

	Params::AValInventoryManager_AddSellRequest_Params Parms{};

	Parms.ClientRefId = ClientRefId;
	Parms.InventorySlot = InventorySlot;
	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValItemOverlayComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UValItemOverlayComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValItemOverlayComponent");

	return Clss;
}


// ValItemOverlayComponent Valhalla.Default__ValItemOverlayComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValItemOverlayComponent* UValItemOverlayComponent::GetDefaultObj()
{
	static class UValItemOverlayComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValItemOverlayComponent*>(UValItemOverlayComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValItemOverlayComponent.UpdateVisibility
// (Native, Public, BlueprintCallable)
// Parameters:

void UValItemOverlayComponent::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlayComponent", "UpdateVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValItemOverlayComponent.GetOverlayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValItemOverlay*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemOverlay* UValItemOverlayComponent::GetOverlayWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlayComponent", "GetOverlayWidget");

	Params::UValItemOverlayComponent_GetOverlayWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValItemOverlay
// (None)

class UClass* UValItemOverlay::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValItemOverlay");

	return Clss;
}


// ValItemOverlay Valhalla.Default__ValItemOverlay
// (Public, ClassDefaultObject, ArchetypeObject)

class UValItemOverlay* UValItemOverlay::GetDefaultObj()
{
	static class UValItemOverlay* Default = nullptr;

	if (!Default)
		Default = static_cast<UValItemOverlay*>(UValItemOverlay::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValItemOverlay.UpdateInformation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void UValItemOverlay::UpdateInformation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "UpdateInformation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValItemOverlay.SetOwningItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValPickup_Upgrade*          NewOwner                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValItemOverlay::SetOwningItem(class AValPickup_Upgrade* NewOwner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "SetOwningItem");

	Params::UValItemOverlay_SetOwningItem_Params Parms{};

	Parms.NewOwner = NewOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValItemOverlay.OnUpdateVisibility
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Visible                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValItemOverlay::OnUpdateVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "OnUpdateVisibility");

	Params::UValItemOverlay_OnUpdateVisibility_Params Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValItemOverlay.OnOwningItemSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UValItemOverlay::OnOwningItemSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "OnOwningItemSet");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValItemOverlay.GetLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* UValItemOverlay::GetLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "GetLocalPlayer");

	Params::UValItemOverlay_GetLocalPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValItemOverlay.GetLocalChar
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* UValItemOverlay::GetLocalChar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemOverlay", "GetLocalChar");

	Params::UValItemOverlay_GetLocalChar_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValItemPreviewActor
// (Actor)

class UClass* AValItemPreviewActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValItemPreviewActor");

	return Clss;
}


// ValItemPreviewActor Valhalla.Default__ValItemPreviewActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValItemPreviewActor* AValItemPreviewActor::GetDefaultObj()
{
	static class AValItemPreviewActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValItemPreviewActor*>(AValItemPreviewActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValItemPreviewActor.UpdateDetailData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValItemPreviewActor::UpdateDetailData(struct GameplayTags_GameplayTag& EquipSlot, struct Valhalla_InventoryItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemPreviewActor", "UpdateDetailData");

	Params::AValItemPreviewActor_UpdateDetailData_Params Parms{};

	Parms.EquipSlot = EquipSlot;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValItemPreviewActor.UpdateData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct Valhalla_InventoryItem      Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValItemPreviewActor::UpdateData(struct Valhalla_InventoryItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemPreviewActor", "UpdateData");

	Params::AValItemPreviewActor_UpdateData_Params Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValItemPreviewActor.UpdateAssetData
// (Event, Public, BlueprintEvent)
// Parameters:
// class UValItemAsset*               Item                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValItemPreviewActor::UpdateAssetData(class UValItemAsset* Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValItemPreviewActor", "UpdateAssetData");

	Params::AValItemPreviewActor_UpdateAssetData_Params Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValJetpackAnimInstance
// (None)

class UClass* UValJetpackAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValJetpackAnimInstance");

	return Clss;
}


// ValJetpackAnimInstance Valhalla.Default__ValJetpackAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValJetpackAnimInstance* UValJetpackAnimInstance::GetDefaultObj()
{
	static class UValJetpackAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValJetpackAnimInstance*>(UValJetpackAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValKickbackComponent
// (None)

class UClass* UValKickbackComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValKickbackComponent");

	return Clss;
}


// ValKickbackComponent Valhalla.Default__ValKickbackComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValKickbackComponent* UValKickbackComponent::GetDefaultObj()
{
	static class UValKickbackComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValKickbackComponent*>(UValKickbackComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValKickbackComponent.SetKickbackCurve
// (Native, Public, BlueprintCallable)
// Parameters:
// class UCurveVector*                NewKickbackCurve                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValKickbackComponent::SetKickbackCurve(class UCurveVector* NewKickbackCurve)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValKickbackComponent", "SetKickbackCurve");

	Params::UValKickbackComponent_SetKickbackCurve_Params Parms{};

	Parms.NewKickbackCurve = NewKickbackCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValKickbackComponent.Kickback
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Intensity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValKickbackComponent::Kickback(float Duration, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValKickbackComponent", "Kickback");

	Params::UValKickbackComponent_Kickback_Params Parms{};

	Parms.Duration = Duration;
	Parms.Intensity = Intensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValKickbackComponent.GetCurrentOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector2D        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector2D UValKickbackComponent::GetCurrentOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValKickbackComponent", "GetCurrentOffset");

	Params::UValKickbackComponent_GetCurrentOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValLandscapeFunctionLibrary
// (None)

class UClass* UValLandscapeFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLandscapeFunctionLibrary");

	return Clss;
}


// ValLandscapeFunctionLibrary Valhalla.Default__ValLandscapeFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLandscapeFunctionLibrary* UValLandscapeFunctionLibrary::GetDefaultObj()
{
	static class UValLandscapeFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLandscapeFunctionLibrary*>(UValLandscapeFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLandscapeFunctionLibrary.UpdateLandscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLandscapeFunctionLibrary::UpdateLandscape(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLandscapeFunctionLibrary", "UpdateLandscape");

	Params::UValLandscapeFunctionLibrary_UpdateLandscape_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLandscapeFunctionLibrary.GenerateAISplinesFromLandscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*            SplineComponent                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxSplinePoints                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLandscapeFunctionLibrary::GenerateAISplinesFromLandscape(class UObject* WorldContextObject, class USplineComponent* SplineComponent, int32 MaxSplinePoints)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLandscapeFunctionLibrary", "GenerateAISplinesFromLandscape");

	Params::UValLandscapeFunctionLibrary_GenerateAISplinesFromLandscape_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SplineComponent = SplineComponent;
	Parms.MaxSplinePoints = MaxSplinePoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLandscapeFunctionLibrary.ForcePostEditMove
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLandscapeFunctionLibrary::ForcePostEditMove(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLandscapeFunctionLibrary", "ForcePostEditMove");

	Params::UValLandscapeFunctionLibrary_ForcePostEditMove_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValLeaderboardWriter
// (None)

class UClass* UValLeaderboardWriter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLeaderboardWriter");

	return Clss;
}


// ValLeaderboardWriter Valhalla.Default__ValLeaderboardWriter
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLeaderboardWriter* UValLeaderboardWriter::GetDefaultObj()
{
	static class UValLeaderboardWriter* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLeaderboardWriter*>(UValLeaderboardWriter::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLevelScript
// (Actor)

class UClass* AValLevelScript::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLevelScript");

	return Clss;
}


// ValLevelScript Valhalla.Default__ValLevelScript
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLevelScript* AValLevelScript::GetDefaultObj()
{
	static class AValLevelScript* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLevelScript*>(AValLevelScript::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLevelScript.GetMinimapTexture
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UTexture2D*                  Texture                                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLevelScript::GetMinimapTexture(class UTexture2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLevelScript", "GetMinimapTexture");

	Params::AValLevelScript_GetMinimapTexture_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Texture != nullptr)
		*Texture = Parms.Texture;

}


// Class Valhalla.ValLightPanel
// (Actor)

class UClass* AValLightPanel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLightPanel");

	return Clss;
}


// ValLightPanel Valhalla.Default__ValLightPanel
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLightPanel* AValLightPanel::GetDefaultObj()
{
	static class AValLightPanel* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLightPanel*>(AValLightPanel::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLightPanel.OnRep_CooldownCompleteTime
// (Final, Native, Protected)
// Parameters:

void AValLightPanel::OnRep_CooldownCompleteTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLightPanel", "OnRep_CooldownCompleteTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLightPanel.OnLightShutdown
// (Native, Protected, BlueprintCallable)
// Parameters:

void AValLightPanel::OnLightShutdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLightPanel", "OnLightShutdown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLightPanel.OnLightOvercharge
// (Native, Protected, BlueprintCallable)
// Parameters:

void AValLightPanel::OnLightOvercharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLightPanel", "OnLightOvercharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLightPanel.EventCooldownCompleteTimeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              CooldownCompleteTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLightPanel::EventCooldownCompleteTimeChanged(float CooldownCompleteTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLightPanel", "EventCooldownCompleteTimeChanged");

	Params::AValLightPanel_EventCooldownCompleteTimeChanged_Params Parms{};

	Parms.CooldownCompleteTime = CooldownCompleteTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValLoadingScreenSubsystem
// (None)

class UClass* UValLoadingScreenSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLoadingScreenSubsystem");

	return Clss;
}


// ValLoadingScreenSubsystem Valhalla.Default__ValLoadingScreenSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLoadingScreenSubsystem* UValLoadingScreenSubsystem::GetDefaultObj()
{
	static class UValLoadingScreenSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLoadingScreenSubsystem*>(UValLoadingScreenSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLoadingScreenSubsystem.SetLoadingScreenContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     NewWidgetClass                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLoadingScreenSubsystem::SetLoadingScreenContentWidget(TSubclassOf<class UUserWidget> NewWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadingScreenSubsystem", "SetLoadingScreenContentWidget");

	Params::UValLoadingScreenSubsystem_SetLoadingScreenContentWidget_Params Parms{};

	Parms.NewWidgetClass = NewWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadingScreenSubsystem.GetLoadingScreenContentWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UUserWidget>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UUserWidget> UValLoadingScreenSubsystem::GetLoadingScreenContentWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadingScreenSubsystem", "GetLoadingScreenContentWidget");

	Params::UValLoadingScreenSubsystem_GetLoadingScreenContentWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValLoadoutAsset
// (None)

class UClass* UValLoadoutAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLoadoutAsset");

	return Clss;
}


// ValLoadoutAsset Valhalla.Default__ValLoadoutAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLoadoutAsset* UValLoadoutAsset::GetDefaultObj()
{
	static class UValLoadoutAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLoadoutAsset*>(UValLoadoutAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLoadoutGroup
// (None)

class UClass* UValLoadoutGroup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLoadoutGroup");

	return Clss;
}


// ValLoadoutGroup Valhalla.Default__ValLoadoutGroup
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLoadoutGroup* UValLoadoutGroup::GetDefaultObj()
{
	static class UValLoadoutGroup* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLoadoutGroup*>(UValLoadoutGroup::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLoadoutConfig
// (None)

class UClass* UValLoadoutConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLoadoutConfig");

	return Clss;
}


// ValLoadoutConfig Valhalla.Default__ValLoadoutConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLoadoutConfig* UValLoadoutConfig::GetDefaultObj()
{
	static class UValLoadoutConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLoadoutConfig*>(UValLoadoutConfig::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLoadoutConfig.OnItemChildPathsLoaded
// (Native, Protected)
// Parameters:

void UValLoadoutConfig::OnItemChildPathsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnItemChildPathsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.OnItemChildAssetsLoaded
// (Native, Protected)
// Parameters:

void UValLoadoutConfig::OnItemChildAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnItemChildAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.OnItemAssetsLoaded
// (Native, Protected)
// Parameters:

void UValLoadoutConfig::OnItemAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnItemAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.OnGameStateSet
// (Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLoadoutConfig::OnGameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnGameStateSet");

	Params::UValLoadoutConfig_OnGameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.OnConfigLoaded
// (Native, Protected)
// Parameters:

void UValLoadoutConfig::OnConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnConfigLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.OnAssetsLoaded
// (Native, Protected)
// Parameters:

void UValLoadoutConfig::OnAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "OnAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLoadoutConfig.IsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLoadoutConfig::IsReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "IsReady");

	Params::UValLoadoutConfig_IsReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLoadoutConfig.GetLoadoutAssetsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Type                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValLoadoutAsset*>    OutLoadoutAssets                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValLoadoutConfig::GetLoadoutAssetsByType(int32 Type, TArray<class UValLoadoutAsset*>* OutLoadoutAssets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "GetLoadoutAssetsByType");

	Params::UValLoadoutConfig_GetLoadoutAssetsByType_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLoadoutAssets != nullptr)
		*OutLoadoutAssets = std::move(Parms.OutLoadoutAssets);

}


// Function Valhalla.ValLoadoutConfig.GetLoadoutAssets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValLoadoutAsset*>    OutLoadoutAssets                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValLoadoutConfig::GetLoadoutAssets(TArray<class UValLoadoutAsset*>* OutLoadoutAssets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "GetLoadoutAssets");

	Params::UValLoadoutConfig_GetLoadoutAssets_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLoadoutAssets != nullptr)
		*OutLoadoutAssets = std::move(Parms.OutLoadoutAssets);

}


// Function Valhalla.ValLoadoutConfig.GetLoadoutAssetByTypeAndClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Type                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ClassTag                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValLoadoutAsset*            OutLoadoutAsset                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLoadoutConfig::GetLoadoutAssetByTypeAndClass(int32 Type, struct GameplayTags_GameplayTag& ClassTag, class UValLoadoutAsset** OutLoadoutAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLoadoutConfig", "GetLoadoutAssetByTypeAndClass");

	Params::UValLoadoutConfig_GetLoadoutAssetByTypeAndClass_Params Parms{};

	Parms.Type = Type;
	Parms.ClassTag = ClassTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLoadoutAsset != nullptr)
		*OutLoadoutAsset = Parms.OutLoadoutAsset;

	return Parms.ReturnValue;

}


// Class Valhalla.ValLoadoutDefinition
// (None)

class UClass* UValLoadoutDefinition::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLoadoutDefinition");

	return Clss;
}


// ValLoadoutDefinition Valhalla.Default__ValLoadoutDefinition
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLoadoutDefinition* UValLoadoutDefinition::GetDefaultObj()
{
	static class UValLoadoutDefinition* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLoadoutDefinition*>(UValLoadoutDefinition::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLobbyBeaconClient
// (Actor)

class UClass* AValLobbyBeaconClient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLobbyBeaconClient");

	return Clss;
}


// ValLobbyBeaconClient Valhalla.Default__ValLobbyBeaconClient
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLobbyBeaconClient* AValLobbyBeaconClient::GetDefaultObj()
{
	static class AValLobbyBeaconClient* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLobbyBeaconClient*>(AValLobbyBeaconClient::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLobbyBeaconClient.ServerUnQueue
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValLobbyBeaconClient::ServerUnQueue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ServerUnQueue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ServerQueueUp
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValLobbyBeaconClient::ServerQueueUp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ServerQueueUp");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ServerKickIt
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValLobbyBeaconClient::ServerKickIt()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ServerKickIt");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ServerCheckLobbyCode
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FString                      LobbyCode                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLobbyBeaconClient::ServerCheckLobbyCode(const class FString& LobbyCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ServerCheckLobbyCode");

	Params::AValLobbyBeaconClient_ServerCheckLobbyCode_Params Parms{};

	Parms.LobbyCode = LobbyCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.OnRep_QueuedPlayers
// (Final, Native, Protected)
// Parameters:

void AValLobbyBeaconClient::OnRep_QueuedPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "OnRep_QueuedPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ClientQueuePopped
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bAccepted                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLobbyBeaconClient::ClientQueuePopped(bool bAccepted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ClientQueuePopped");

	Params::AValLobbyBeaconClient_ClientQueuePopped_Params Parms{};

	Parms.bAccepted = bAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ClientQueued
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bAlreadyInQueue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLobbyBeaconClient::ClientQueued(bool bAlreadyInQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ClientQueued");

	Params::AValLobbyBeaconClient_ClientQueued_Params Parms{};

	Parms.bAlreadyInQueue = bAlreadyInQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLobbyBeaconClient.ClientLobbyCodeChecked
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bCodeValid                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLobbyBeaconClient::ClientLobbyCodeChecked(bool bCodeValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLobbyBeaconClient", "ClientLobbyCodeChecked");

	Params::AValLobbyBeaconClient_ClientLobbyCodeChecked_Params Parms{};

	Parms.bCodeValid = bCodeValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValLobbyBeaconHost
// (Actor)

class UClass* AValLobbyBeaconHost::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLobbyBeaconHost");

	return Clss;
}


// ValLobbyBeaconHost Valhalla.Default__ValLobbyBeaconHost
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLobbyBeaconHost* AValLobbyBeaconHost::GetDefaultObj()
{
	static class AValLobbyBeaconHost* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLobbyBeaconHost*>(AValLobbyBeaconHost::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAudioThreatDataAsset
// (None)

class UClass* UValAudioThreatDataAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAudioThreatDataAsset");

	return Clss;
}


// ValAudioThreatDataAsset Valhalla.Default__ValAudioThreatDataAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAudioThreatDataAsset* UValAudioThreatDataAsset::GetDefaultObj()
{
	static class UValAudioThreatDataAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAudioThreatDataAsset*>(UValAudioThreatDataAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLocalAudioThreatComponent
// (SceneComponent)

class UClass* UValLocalAudioThreatComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLocalAudioThreatComponent");

	return Clss;
}


// ValLocalAudioThreatComponent Valhalla.Default__ValLocalAudioThreatComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLocalAudioThreatComponent* UValLocalAudioThreatComponent::GetDefaultObj()
{
	static class UValLocalAudioThreatComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLocalAudioThreatComponent*>(UValLocalAudioThreatComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLocalAudioThreatComponent.OnViewTargetChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                      NewTarget                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValLocalAudioThreatComponent::OnViewTargetChanged(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLocalAudioThreatComponent", "OnViewTargetChanged");

	Params::UValLocalAudioThreatComponent_OnViewTargetChanged_Params Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLocalAudioThreatComponent.OnTookDamage
// (Final, Native, Public)
// Parameters:
// struct Valhalla_DamageData         Data                                                             (Parm, NativeAccessSpecifierPublic)

void UValLocalAudioThreatComponent::OnTookDamage(const struct Valhalla_DamageData& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLocalAudioThreatComponent", "OnTookDamage");

	Params::UValLocalAudioThreatComponent_OnTookDamage_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValLocalPlayer
// (None)

class UClass* UValLocalPlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLocalPlayer");

	return Clss;
}


// ValLocalPlayer Valhalla.Default__ValLocalPlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLocalPlayer* UValLocalPlayer::GetDefaultObj()
{
	static class UValLocalPlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLocalPlayer*>(UValLocalPlayer::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLootAsset
// (None)

class UClass* UValLootAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLootAsset");

	return Clss;
}


// ValLootAsset Valhalla.Default__ValLootAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLootAsset* UValLootAsset::GetDefaultObj()
{
	static class UValLootAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLootAsset*>(UValLootAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLootAsset.GetSubLoot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct Valhalla_SubLoot>    OutSubLoot                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValLootAsset::GetSubLoot(TArray<struct Valhalla_SubLoot>* OutSubLoot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootAsset", "GetSubLoot");

	Params::UValLootAsset_GetSubLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSubLoot != nullptr)
		*OutSubLoot = std::move(Parms.OutSubLoot);

}


// Function Valhalla.ValLootAsset.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct Valhalla_LootItem>   OutItems                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValLootAsset::GetItems(TArray<struct Valhalla_LootItem>* OutItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootAsset", "GetItems");

	Params::UValLootAsset_GetItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutItems != nullptr)
		*OutItems = std::move(Parms.OutItems);

}


// Class Valhalla.ValLootDepositPod
// (Actor)

class UClass* AValLootDepositPod::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLootDepositPod");

	return Clss;
}


// ValLootDepositPod Valhalla.Default__ValLootDepositPod
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLootDepositPod* AValLootDepositPod::GetDefaultObj()
{
	static class AValLootDepositPod* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLootDepositPod*>(AValLootDepositPod::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLootDepositPod.StartExtraction
// (Final, Native, Protected)
// Parameters:
// enum class ERarity                 IncomingHighestRarity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::StartExtraction(enum class ERarity IncomingHighestRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "StartExtraction");

	Params::AValLootDepositPod_StartExtraction_Params Parms{};

	Parms.IncomingHighestRarity = IncomingHighestRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.StartChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "StartChanneledInteract");

	Params::AValLootDepositPod_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "SetCachedChanneler");

	Params::AValLootDepositPod_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.ReadyExtraction
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::ReadyExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "ReadyExtraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.PauseExtraction
// (Final, Native, Protected)
// Parameters:
// bool                               bShouldPause                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::PauseExtraction(bool bShouldPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "PauseExtraction");

	Params::AValLootDepositPod_PauseExtraction_Params Parms{};

	Parms.bShouldPause = bShouldPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnTeammateAddedToExtraction
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnTeammateAddedToExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnTeammateAddedToExtraction");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnRep_State
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_PodNumber
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_PodNumber()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_PodNumber");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_PendingDisable
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_PendingDisable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_PendingDisable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_OwningExtractionSite
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_OwningExtractionSite()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_OwningExtractionSite");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_NumDepositsInCurrentExtraction
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_NumDepositsInCurrentExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_NumDepositsInCurrentExtraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_LegendaryCount
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_LegendaryCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_LegendaryCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_InstigatingTeam
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_InstigatingTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_InstigatingTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnRep_HighestRarity
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::OnRep_HighestRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnRep_HighestRarity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.OnPodDisabled
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnPodDisabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnPodDisabled");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnPendingDisable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::OnPendingDisable(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnPendingDisable");

	Params::AValLootDepositPod_OnPendingDisable_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootDepositPod.OnHighestRaritySet
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::OnHighestRaritySet(enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnHighestRaritySet");

	Params::AValLootDepositPod_OnHighestRaritySet_Params Parms{};

	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootDepositPod.OnExtractionStarted
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnExtractionStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnExtractionStarted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnExtractionInterrupted
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnExtractionInterrupted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnExtractionInterrupted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnExtractionFinished
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnExtractionFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnExtractionFinished");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnChannelingUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::OnChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnChannelingUpdated");

	Params::AValLootDepositPod_OnChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootDepositPod.OnChannelerChanged
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnChannelerChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnChannelerChanged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.OnCanDeposit
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::OnCanDeposit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "OnCanDeposit");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.NotifyInitiatorTeam
// (Final, Native, Protected)
// Parameters:
// enum class ELootDepositPodState    State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 HighestRarity                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimerAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InstigatingTeam                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ExtractedLegendaryCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bTeammateAddedDeposit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bTeammateDepositIncreasedRarity                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::NotifyInitiatorTeam(enum class ELootDepositPodState State, enum class ERarity HighestRarity, float TimerAmount, int32 InstigatingTeam, int32 ExtractedLegendaryCount, bool bTeammateAddedDeposit, bool bTeammateDepositIncreasedRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "NotifyInitiatorTeam");

	Params::AValLootDepositPod_NotifyInitiatorTeam_Params Parms{};

	Parms.State = State;
	Parms.HighestRarity = HighestRarity;
	Parms.TimerAmount = TimerAmount;
	Parms.InstigatingTeam = InstigatingTeam;
	Parms.ExtractedLegendaryCount = ExtractedLegendaryCount;
	Parms.bTeammateAddedDeposit = bTeammateAddedDeposit;
	Parms.bTeammateDepositIncreasedRarity = bTeammateDepositIncreasedRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.MulticastChannelingUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::MulticastChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "MulticastChannelingUpdated");

	Params::AValLootDepositPod_MulticastChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.InterruptExtraction
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::InterruptExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "InterruptExtraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "Interact");

	Params::AValLootDepositPod_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.GetInteractType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EInteractType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractType AValLootDepositPod::GetInteractType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetInteractType");

	Params::AValLootDepositPod_GetInteractType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValLootDepositPod::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetInteractText");

	Params::AValLootDepositPod_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValLootDepositPod::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetInteractComponent");

	Params::AValLootDepositPod_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.GetDepositingPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValPlayerState_Frontier*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerState_Frontier* AValLootDepositPod::GetDepositingPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetDepositingPlayer");

	Params::AValLootDepositPod_GetDepositingPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValLootDepositPod::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetChannelTime");

	Params::AValLootDepositPod_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValLootDepositPod::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "GetCachedChanneler");

	Params::AValLootDepositPod_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootDepositPod.FinishExtraction
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::FinishExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "FinishExtraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.ExtractDepositedLoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValLootDepositPod::ExtractDepositedLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "ExtractDepositedLoot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.EndChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootDepositPod::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "EndChanneledInteract");

	Params::AValLootDepositPod_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.EjectDepositedItems
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootDepositPod::EjectDepositedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "EjectDepositedItems");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootDepositPod.DisablePod
// (Final, Native, Protected)
// Parameters:

void AValLootDepositPod::DisablePod()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "DisablePod");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootDepositPod.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValLootDepositPod::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootDepositPod", "CanInteract");

	Params::AValLootDepositPod_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValLootManager
// (None)

class UClass* UValLootManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLootManager");

	return Clss;
}


// ValLootManager Valhalla.Default__ValLootManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLootManager* UValLootManager::GetDefaultObj()
{
	static class UValLootManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLootManager*>(UValLootManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLootManager.GetSpecialtyModCountByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ModCount                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetSpecialtyModCountByRarity(enum class ERarity Rarity, struct GameplayTags_GameplayTag& EquipSlot, int32* ModCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetSpecialtyModCountByRarity");

	Params::UValLootManager_GetSpecialtyModCountByRarity_Params Parms{};

	Parms.Rarity = Rarity;
	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ModCount != nullptr)
		*ModCount = Parms.ModCount;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetPropertyRangeByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PowerRange         Range                                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetPropertyRangeByRarity(enum class ERarity Rarity, struct Valhalla_PowerRange* Range)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetPropertyRangeByRarity");

	Params::UValLootManager_GetPropertyRangeByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Range != nullptr)
		*Range = std::move(Parms.Range);

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetOffensivePowerRangeByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PowerRange         Range                                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetOffensivePowerRangeByRarity(enum class ERarity Rarity, struct Valhalla_PowerRange* Range)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetOffensivePowerRangeByRarity");

	Params::UValLootManager_GetOffensivePowerRangeByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Range != nullptr)
		*Range = std::move(Parms.Range);

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetOffensivePowerByRarity
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OffensivePower                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetOffensivePowerByRarity(enum class ERarity Rarity, float* OffensivePower)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetOffensivePowerByRarity");

	Params::UValLootManager_GetOffensivePowerByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OffensivePower != nullptr)
		*OffensivePower = Parms.OffensivePower;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetDefensivePowerRangeByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PowerRange         Range                                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetDefensivePowerRangeByRarity(enum class ERarity Rarity, struct Valhalla_PowerRange* Range)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetDefensivePowerRangeByRarity");

	Params::UValLootManager_GetDefensivePowerRangeByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Range != nullptr)
		*Range = std::move(Parms.Range);

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetDefensivePowerByRarity
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DefensivePower                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetDefensivePowerByRarity(enum class ERarity Rarity, float* DefensivePower)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetDefensivePowerByRarity");

	Params::UValLootManager_GetDefensivePowerByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DefensivePower != nullptr)
		*DefensivePower = Parms.DefensivePower;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetChildAssetCountByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetChildAssetCountByRarity(enum class ERarity Rarity, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetChildAssetCountByRarity");

	Params::UValLootManager_GetChildAssetCountByRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Count != nullptr)
		*Count = Parms.Count;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootManager.GetAvailableModCountByRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ModCount                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValLootManager::GetAvailableModCountByRarity(enum class ERarity Rarity, struct GameplayTags_GameplayTag& EquipSlot, int32* ModCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootManager", "GetAvailableModCountByRarity");

	Params::UValLootManager_GetAvailableModCountByRarity_Params Parms{};

	Parms.Rarity = Rarity;
	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ModCount != nullptr)
		*ModCount = Parms.ModCount;

	return Parms.ReturnValue;

}


// Class Valhalla.ValLTIAsset
// (None)

class UClass* UValLTIAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLTIAsset");

	return Clss;
}


// ValLTIAsset Valhalla.Default__ValLTIAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLTIAsset* UValLTIAsset::GetDefaultObj()
{
	static class UValLTIAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLTIAsset*>(UValLTIAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMarksmanClassComponent
// (None)

class UClass* UValMarksmanClassComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMarksmanClassComponent");

	return Clss;
}


// ValMarksmanClassComponent Valhalla.Default__ValMarksmanClassComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMarksmanClassComponent* UValMarksmanClassComponent::GetDefaultObj()
{
	static class UValMarksmanClassComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMarksmanClassComponent*>(UValMarksmanClassComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMarksmanClassComponent.RemoveBonusDamageTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValMarksmanClassComponent::RemoveBonusDamageTarget(class AValCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMarksmanClassComponent", "RemoveBonusDamageTarget");

	Params::UValMarksmanClassComponent_RemoveBonusDamageTarget_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMarksmanClassComponent.IsCharacterMarkedForBonusDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValMarksmanClassComponent::IsCharacterMarkedForBonusDamage(class AValCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMarksmanClassComponent", "IsCharacterMarkedForBonusDamage");

	Params::UValMarksmanClassComponent_IsCharacterMarkedForBonusDamage_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMarksmanClassComponent.AddBonusDamageTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValMarksmanClassComponent::AddBonusDamageTarget(class AValCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMarksmanClassComponent", "AddBonusDamageTarget");

	Params::UValMarksmanClassComponent_AddBonusDamageTarget_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMathFunctionLibrary
// (None)

class UClass* UValMathFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMathFunctionLibrary");

	return Clss;
}


// ValMathFunctionLibrary Valhalla.Default__ValMathFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMathFunctionLibrary* UValMathFunctionLibrary::GetDefaultObj()
{
	static class UValMathFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMathFunctionLibrary*>(UValMathFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMathFunctionLibrary.ShiftLocationBetweenTransforms
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       SourceTransform                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       TargetTransform                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValMathFunctionLibrary::ShiftLocationBetweenTransforms(struct CoreUObject_Vector& Location, struct CoreUObject_Transform& SourceTransform, struct CoreUObject_Transform& TargetTransform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "ShiftLocationBetweenTransforms");

	Params::UValMathFunctionLibrary_ShiftLocationBetweenTransforms_Params Parms{};

	Parms.Location = Location;
	Parms.SourceTransform = SourceTransform;
	Parms.TargetTransform = TargetTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.RotateAroundPivot
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Transform       Original                                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          PivotLocation                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         DeltaRotation                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bRetainOrientation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       New                                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValMathFunctionLibrary::RotateAroundPivot(struct CoreUObject_Transform& Original, const struct CoreUObject_Vector& PivotLocation, const struct CoreUObject_Rotator& DeltaRotation, bool bRetainOrientation, struct CoreUObject_Transform* New)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "RotateAroundPivot");

	Params::UValMathFunctionLibrary_RotateAroundPivot_Params Parms{};

	Parms.Original = Original;
	Parms.PivotLocation = PivotLocation;
	Parms.DeltaRotation = DeltaRotation;
	Parms.bRetainOrientation = bRetainOrientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (New != nullptr)
		*New = std::move(Parms.New);

}


// Function Valhalla.ValMathFunctionLibrary.IsInCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Vector          SourceLocation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          SourceForwardDir                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TargetLocation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinCosine                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OUTDegree                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValMathFunctionLibrary::IsInCone(const struct CoreUObject_Vector& SourceLocation, const struct CoreUObject_Vector& SourceForwardDir, const struct CoreUObject_Vector& TargetLocation, float MinCosine, float* OUTDegree)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "IsInCone");

	Params::UValMathFunctionLibrary_IsInCone_Params Parms{};

	Parms.SourceLocation = SourceLocation;
	Parms.SourceForwardDir = SourceForwardDir;
	Parms.TargetLocation = TargetLocation;
	Parms.MinCosine = MinCosine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OUTDegree != nullptr)
		*OUTDegree = Parms.OUTDegree;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.GetRadBetweenVectors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Vector          VectorA                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          VectorB                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValMathFunctionLibrary::GetRadBetweenVectors(struct CoreUObject_Vector& VectorA, struct CoreUObject_Vector& VectorB)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "GetRadBetweenVectors");

	Params::UValMathFunctionLibrary_GetRadBetweenVectors_Params Parms{};

	Parms.VectorA = VectorA;
	Parms.VectorB = VectorB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.GetPercentReduction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              DefenseValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValMathFunctionLibrary::GetPercentReduction(float DefenseValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "GetPercentReduction");

	Params::UValMathFunctionLibrary_GetPercentReduction_Params Parms{};

	Parms.DefenseValue = DefenseValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.GetLateralDirectionAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              Angle                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ELateralDirection       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ELateralDirection UValMathFunctionLibrary::GetLateralDirectionAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "GetLateralDirectionAngle");

	Params::UValMathFunctionLibrary_GetLateralDirectionAngle_Params Parms{};

	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.GetDegBetweenVectors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Vector          VectorA                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          VectorB                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValMathFunctionLibrary::GetDegBetweenVectors(struct CoreUObject_Vector& VectorA, struct CoreUObject_Vector& VectorB)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "GetDegBetweenVectors");

	Params::UValMathFunctionLibrary_GetDegBetweenVectors_Params Parms{};

	Parms.VectorA = VectorA;
	Parms.VectorB = VectorB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.GetDefenseValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              DesiredPercentReduction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValMathFunctionLibrary::GetDefenseValue(float DesiredPercentReduction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "GetDefenseValue");

	Params::UValMathFunctionLibrary_GetDefenseValue_Params Parms{};

	Parms.DesiredPercentReduction = DesiredPercentReduction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMathFunctionLibrary.BoxOverlapComponentsWithRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BoxPos                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Extent                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<enum class EObjectTypeQuery>ObjectTypes                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UClass*                      ComponentClassFilter                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UPrimitiveComponent*> OutComponents                                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValMathFunctionLibrary::BoxOverlapComponentsWithRotation(class UObject* WorldContextObject, const struct CoreUObject_Vector& BoxPos, const struct CoreUObject_Vector& Extent, const struct CoreUObject_Rotator& Rotation, TArray<enum class EObjectTypeQuery>& ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*>& ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMathFunctionLibrary", "BoxOverlapComponentsWithRotation");

	Params::UValMathFunctionLibrary_BoxOverlapComponentsWithRotation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BoxPos = BoxPos;
	Parms.Extent = Extent;
	Parms.Rotation = Rotation;
	Parms.ObjectTypes = ObjectTypes;
	Parms.ComponentClassFilter = ComponentClassFilter;
	Parms.ActorsToIgnore = ActorsToIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutComponents != nullptr)
		*OutComponents = std::move(Parms.OutComponents);

	return Parms.ReturnValue;

}


// Class Valhalla.ValMedicClassComponent
// (None)

class UClass* UValMedicClassComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMedicClassComponent");

	return Clss;
}


// ValMedicClassComponent Valhalla.Default__ValMedicClassComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMedicClassComponent* UValMedicClassComponent::GetDefaultObj()
{
	static class UValMedicClassComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMedicClassComponent*>(UValMedicClassComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMeleeAnimInstance
// (None)

class UClass* UValMeleeAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMeleeAnimInstance");

	return Clss;
}


// ValMeleeAnimInstance Valhalla.Default__ValMeleeAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMeleeAnimInstance* UValMeleeAnimInstance::GetDefaultObj()
{
	static class UValMeleeAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMeleeAnimInstance*>(UValMeleeAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMeleeAnimInstance.PlayStandardSwing
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValMeleeAnimInstance::PlayStandardSwing(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMeleeAnimInstance", "PlayStandardSwing");

	Params::UValMeleeAnimInstance_PlayStandardSwing_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPreviewActor
// (Actor)

class UClass* AValPreviewActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPreviewActor");

	return Clss;
}


// ValPreviewActor Valhalla.Default__ValPreviewActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPreviewActor* AValPreviewActor::GetDefaultObj()
{
	static class AValPreviewActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPreviewActor*>(AValPreviewActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPreviewActor.UpdateActor
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_SoftClassPath   ClassPath                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPreviewActor::UpdateActor(const struct CoreUObject_SoftClassPath& ClassPath)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "UpdateActor");

	Params::AValPreviewActor_UpdateActor_Params Parms{};

	Parms.ClassPath = ClassPath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewActor.UnloadActor
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPreviewActor::UnloadActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "UnloadActor");

	Params::AValPreviewActor_UnloadActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPreviewActor.SpawnActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPreviewActor::SpawnActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "SpawnActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewActor.OnClassLoaded
// (Native, Protected)
// Parameters:

void AValPreviewActor::OnClassLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "OnClassLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewActor.GetPreviewActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValPreviewActor::GetPreviewActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "GetPreviewActor");

	Params::AValPreviewActor_GetPreviewActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPreviewActor.GetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPreviewActor::GetIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "GetIndex");

	Params::AValPreviewActor_GetIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPreviewActor.GetBackgroundActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AStaticMeshActor*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AStaticMeshActor* AValPreviewActor::GetBackgroundActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewActor", "GetBackgroundActor");

	Params::AValPreviewActor_GetBackgroundActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMergedPreviewActor
// (Actor)

class UClass* AValMergedPreviewActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMergedPreviewActor");

	return Clss;
}


// ValMergedPreviewActor Valhalla.Default__ValMergedPreviewActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMergedPreviewActor* AValMergedPreviewActor::GetDefaultObj()
{
	static class AValMergedPreviewActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMergedPreviewActor*>(AValMergedPreviewActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMergedPreviewActor.UpdateMerge
// (Native, Public, BlueprintCallable)
// Parameters:

void AValMergedPreviewActor::UpdateMerge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "UpdateMerge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMergedPreviewActor.SetWeaponData
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UValGameplayAbility>AbilityClass                                                     (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMergedPreviewActor::SetWeaponData(TSubclassOf<class UValGameplayAbility> AbilityClass, class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "SetWeaponData");

	Params::AValMergedPreviewActor_SetWeaponData_Params Parms{};

	Parms.AbilityClass = AbilityClass;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMergedPreviewActor.SetJetpackData
// (Event, Public, BlueprintEvent)
// Parameters:
// class UValJetpackMeshData*         Mesh                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMergedPreviewActor::SetJetpackData(class UValJetpackMeshData* Mesh, class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "SetJetpackData");

	Params::AValMergedPreviewActor_SetJetpackData_Params Parms{};

	Parms.Mesh = Mesh;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMergedPreviewActor.OnClassesLoaded
// (Native, Protected)
// Parameters:

void AValMergedPreviewActor::OnClassesLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "OnClassesLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMergedPreviewActor.LoadMeshData
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct CoreUObject_SoftObjectPath>ObjectPaths                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValMergedPreviewActor::LoadMeshData(TArray<struct CoreUObject_SoftObjectPath>& ObjectPaths)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "LoadMeshData");

	Params::AValMergedPreviewActor_LoadMeshData_Params Parms{};

	Parms.ObjectPaths = ObjectPaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMergedPreviewActor.GetMergeableMeshes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UValMergeableMesh*>   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UValMergeableMesh*> AValMergedPreviewActor::GetMergeableMeshes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMergedPreviewActor", "GetMergeableMeshes");

	Params::AValMergedPreviewActor_GetMergeableMeshes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMergeableMesh
// (None)

class UClass* UValMergeableMesh::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMergeableMesh");

	return Clss;
}


// ValMergeableMesh Valhalla.Default__ValMergeableMesh
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMergeableMesh* UValMergeableMesh::GetDefaultObj()
{
	static class UValMergeableMesh* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMergeableMesh*>(UValMergeableMesh::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMeshMergeComponent
// (None)

class UClass* UValMeshMergeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMeshMergeComponent");

	return Clss;
}


// ValMeshMergeComponent Valhalla.Default__ValMeshMergeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMeshMergeComponent* UValMeshMergeComponent::GetDefaultObj()
{
	static class UValMeshMergeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMeshMergeComponent*>(UValMeshMergeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMeshMergeComponent.MergeMeshes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValMergeableMesh*>   MergeableMeshes                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class USkeletalMesh*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UValMeshMergeComponent::MergeMeshes(TArray<class UValMergeableMesh*>& MergeableMeshes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMeshMergeComponent", "MergeMeshes");

	Params::UValMeshMergeComponent_MergeMeshes_Params Parms{};

	Parms.MergeableMeshes = MergeableMeshes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMimicChest
// (Actor)

class UClass* AValMimicChest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMimicChest");

	return Clss;
}


// ValMimicChest Valhalla.Default__ValMimicChest
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMimicChest* AValMimicChest::GetDefaultObj()
{
	static class AValMimicChest* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMimicChest*>(AValMimicChest::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMimicChest.UpdateVisibility
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMimicChest::UpdateVisibility(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "UpdateVisibility");

	Params::AValMimicChest_UpdateVisibility_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.TryToOpen
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMimicChest::TryToOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "TryToOpen");

	Params::AValMimicChest_TryToOpen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.TriggerTrap
// (Final, Native, Protected)
// Parameters:

void AValMimicChest::TriggerTrap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "TriggerTrap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.SetTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMimicChest::SetTimer(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "SetTimer");

	Params::AValMimicChest_SetTimer_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EValMimicChestState     State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMimicChest::SetState(enum class EValMimicChestState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "SetState");

	Params::AValMimicChest_SetState_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.SetMaterialSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMimicChest::SetMaterialSelection(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "SetMaterialSelection");

	Params::AValMimicChest_SetMaterialSelection_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.OnRep_StateChanged
// (Native, Public)
// Parameters:

void AValMimicChest::OnRep_StateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "OnRep_StateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.OnRep_MaterialSelection
// (Native, Public)
// Parameters:

void AValMimicChest::OnRep_MaterialSelection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "OnRep_MaterialSelection");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.OnRep_ExplosionTimeRemaining
// (Native, Public)
// Parameters:

void AValMimicChest::OnRep_ExplosionTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "OnRep_ExplosionTimeRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMimicChest::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "Interact");

	Params::AValMimicChest_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValMimicChest::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "GetMesh");

	Params::AValMimicChest_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValMimicChest::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "GetInteractText");

	Params::AValMimicChest_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValMimicChest::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "GetInteractComponent");

	Params::AValMimicChest_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.GetCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBoxComponent* AValMimicChest::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "GetCollisionComp");

	Params::AValMimicChest_GetCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValMimicChest::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "GetChannelTime");

	Params::AValMimicChest_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMimicChest.Explode
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValMimicChest::Explode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "Explode");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValMimicChest.EnsureValidInstigator
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayEffectSpecHandleInSpec                                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValMimicChest::EnsureValidInstigator(struct GameplayAbilities_GameplayEffectSpecHandle& InSpec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "EnsureValidInstigator");

	Params::AValMimicChest_EnsureValidInstigator_Params Parms{};

	Parms.InSpec = InSpec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMimicChest.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMimicChest::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMimicChest", "CanInteract");

	Params::AValMimicChest_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMinimapManager
// (Actor)

class UClass* AValMinimapManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMinimapManager");

	return Clss;
}


// ValMinimapManager Valhalla.Default__ValMinimapManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMinimapManager* AValMinimapManager::GetDefaultObj()
{
	static class AValMinimapManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMinimapManager*>(AValMinimapManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMinimapManager.OnRep_MinimapPlayers
// (Final, Native, Protected)
// Parameters:

void AValMinimapManager::OnRep_MinimapPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMinimapManager", "OnRep_MinimapPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMission
// (Actor)

class UClass* AValMission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission");

	return Clss;
}


// ValMission Valhalla.Default__ValMission
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission* AValMission::GetDefaultObj()
{
	static class AValMission* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission*>(AValMission::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMission.OnMissionTimer
// (Native, Protected)
// Parameters:

void AValMission::OnMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "OnMissionTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission.OnCharacterParticipant
// (Native, Protected)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission::OnCharacterParticipant(class AValCharacter* Character, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "OnCharacterParticipant");

	Params::AValMission_OnCharacterParticipant_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission.GetPendingMission
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMission::GetPendingMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetPendingMission");

	Params::AValMission_GetPendingMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetParticipantScores
// (Final, Native, Public, HasOutParams)
// Parameters:
// TMap<class AValPlayerState_Frontier*, int32>Scores                                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void AValMission::GetParticipantScores(TMap<class AValPlayerState_Frontier*, int32>* Scores)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetParticipantScores");

	Params::AValMission_GetParticipantScores_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Scores != nullptr)
		*Scores = Parms.Scores;

}


// Function Valhalla.ValMission.GetMissionWinner
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionWinner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionWinner");

	Params::AValMission_GetMissionWinner_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionTotalSlots
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionTotalSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionTotalSlots");

	Params::AValMission_GetMissionTotalSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionTeam
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionTeam");

	Params::AValMission_GetMissionTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionTakenSlots
// (Final, Native, Public)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionTakenSlots(int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionTakenSlots");

	Params::AValMission_GetMissionTakenSlots_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionState*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionState* AValMission::GetMissionState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionState");

	Params::AValMission_GetMissionState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionRewardValue
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionRewardValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionRewardValue");

	Params::AValMission_GetMissionRewardValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionPrepare
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMission::GetMissionPrepare()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionPrepare");

	Params::AValMission_GetMissionPrepare_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionMinSlots
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionMinSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionMinSlots");

	Params::AValMission_GetMissionMinSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionMaxSlots
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionMaxSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionMaxSlots");

	Params::AValMission_GetMissionMaxSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionIndex
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMission::GetMissionIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionIndex");

	Params::AValMission_GetMissionIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionId
// (Final, Native, Public)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AValMission::GetMissionId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionId");

	Params::AValMission_GetMissionId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionFinale
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMission::GetMissionFinale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionFinale");

	Params::AValMission_GetMissionFinale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMission.GetMissionContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionContainer*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionContainer* AValMission::GetMissionContainer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission", "GetMissionContainer");

	Params::AValMission_GetMissionContainer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionContainer
// (Actor)

class UClass* AValMissionContainer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionContainer");

	return Clss;
}


// ValMissionContainer Valhalla.Default__ValMissionContainer
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionContainer* AValMissionContainer::GetDefaultObj()
{
	static class AValMissionContainer* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionContainer*>(AValMissionContainer::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionContainer.SetPlayerStartMax
// (Final, Native, Public)
// Parameters:
// int32                              MaxPlayers                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionContainer::SetPlayerStartMax(int32 MaxPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "SetPlayerStartMax");

	Params::AValMissionContainer_SetPlayerStartMax_Params Parms{};

	Parms.MaxPlayers = MaxPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionContainer.SetActive
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionContainer::SetActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "SetActive");

	Params::AValMissionContainer_SetActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionContainer.SetActivated
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionContainer::SetActivated(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "SetActivated");

	Params::AValMissionContainer_SetActivated_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionContainer.OnEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionContainer::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "OnEndOverlap");

	Params::AValMissionContainer_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionContainer.OnBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValMissionContainer::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "OnBeginOverlap");

	Params::AValMissionContainer_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionContainer.GetPlayerStarts
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AValPlayerStart*>     StartList                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValMissionContainer::GetPlayerStarts(TArray<class AValPlayerStart*>* StartList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetPlayerStarts");

	Params::AValMissionContainer_GetPlayerStarts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StartList != nullptr)
		*StartList = std::move(Parms.StartList);

}


// Function Valhalla.ValMissionContainer.GetObjectives
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AValMissionObjective*>ObjectiveList                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValMissionContainer::GetObjectives(TArray<class AValMissionObjective*>* ObjectiveList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetObjectives");

	Params::AValMissionContainer_GetObjectives_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ObjectiveList != nullptr)
		*ObjectiveList = std::move(Parms.ObjectiveList);

}


// Function Valhalla.ValMissionContainer.GetMissionStarts
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AValMissionStart*>    StartList                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValMissionContainer::GetMissionStarts(TArray<class AValMissionStart*>* StartList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetMissionStarts");

	Params::AValMissionContainer_GetMissionStarts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StartList != nullptr)
		*StartList = std::move(Parms.StartList);

}


// Function Valhalla.ValMissionContainer.GetMissionFinale
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionContainer::GetMissionFinale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetMissionFinale");

	Params::AValMissionContainer_GetMissionFinale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionContainer.GetAssignedTeam
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionContainer::GetAssignedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetAssignedTeam");

	Params::AValMissionContainer_GetAssignedTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionContainer.GetAssignedMission
// (Final, Native, Public)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AValMissionContainer::GetAssignedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetAssignedMission");

	Params::AValMissionContainer_GetAssignedMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionContainer.GetActive
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionContainer::GetActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetActive");

	Params::AValMissionContainer_GetActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionContainer.GetActivated
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionContainer::GetActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "GetActivated");

	Params::AValMissionContainer_GetActivated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionContainer.AddObjective
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AValMissionObjective*        Objective                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionContainer::AddObjective(class AValMissionObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionContainer", "AddObjective");

	Params::AValMissionContainer_AddObjective_Params Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMissionCoordinator
// (Actor)

class UClass* AValMissionCoordinator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionCoordinator");

	return Clss;
}


// ValMissionCoordinator Valhalla.Default__ValMissionCoordinator
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionCoordinator* AValMissionCoordinator::GetDefaultObj()
{
	static class AValMissionCoordinator* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionCoordinator*>(AValMissionCoordinator::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMissionObjective
// (Actor)

class UClass* AValMissionObjective::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionObjective");

	return Clss;
}


// ValMissionObjective Valhalla.Default__ValMissionObjective
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionObjective* AValMissionObjective::GetDefaultObj()
{
	static class AValMissionObjective* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionObjective*>(AValMissionObjective::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionObjective.UpdateActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective::UpdateActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective", "UpdateActive");

	Params::AValMissionObjective_UpdateActive_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMissionObjective.OnRep_Active
// (Native, Protected)
// Parameters:

void AValMissionObjective::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective", "OnRep_Active");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionObjective.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionObjective::IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective", "IsActive");

	Params::AValMissionObjective_IsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionObjective.GetAssignedTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionObjective::GetAssignedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective", "GetAssignedTeam");

	Params::AValMissionObjective_GetAssignedTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionObjective_CapturePoint
// (Actor)

class UClass* AValMissionObjective_CapturePoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionObjective_CapturePoint");

	return Clss;
}


// ValMissionObjective_CapturePoint Valhalla.Default__ValMissionObjective_CapturePoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionObjective_CapturePoint* AValMissionObjective_CapturePoint::GetDefaultObj()
{
	static class AValMissionObjective_CapturePoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionObjective_CapturePoint*>(AValMissionObjective_CapturePoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionObjective_CapturePoint.UpdateObjectiveState
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EObjectiveState         State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_CapturePoint::UpdateObjectiveState(enum class EObjectiveState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "UpdateObjectiveState");

	Params::AValMissionObjective_CapturePoint_UpdateObjectiveState_Params Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMissionObjective_CapturePoint.UpdateDefendingTeam
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_CapturePoint::UpdateDefendingTeam(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "UpdateDefendingTeam");

	Params::AValMissionObjective_CapturePoint_UpdateDefendingTeam_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMissionObjective_CapturePoint.UpdateCaptureProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_CapturePoint::UpdateCaptureProgress(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "UpdateCaptureProgress");

	Params::AValMissionObjective_CapturePoint_UpdateCaptureProgress_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMissionObjective_CapturePoint.OnRep_ObjectiveState
// (Native, Protected)
// Parameters:

void AValMissionObjective_CapturePoint::OnRep_ObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "OnRep_ObjectiveState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionObjective_CapturePoint.OnRep_DefendingTeam
// (Native, Protected)
// Parameters:

void AValMissionObjective_CapturePoint::OnRep_DefendingTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "OnRep_DefendingTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionObjective_CapturePoint.OnRep_CaptureProgress
// (Native, Protected)
// Parameters:

void AValMissionObjective_CapturePoint::OnRep_CaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_CapturePoint", "OnRep_CaptureProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMissionObjective_Harvest_Hopper
// (Actor)

class UClass* AValMissionObjective_Harvest_Hopper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionObjective_Harvest_Hopper");

	return Clss;
}


// ValMissionObjective_Harvest_Hopper Valhalla.Default__ValMissionObjective_Harvest_Hopper
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionObjective_Harvest_Hopper* AValMissionObjective_Harvest_Hopper::GetDefaultObj()
{
	static class AValMissionObjective_Harvest_Hopper* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionObjective_Harvest_Hopper*>(AValMissionObjective_Harvest_Hopper::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionObjective_Harvest_Hopper.OnCollectedShards
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_Harvest_Hopper::OnCollectedShards(int32 TeamNum, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_Harvest_Hopper", "OnCollectedShards");

	Params::AValMissionObjective_Harvest_Hopper_OnCollectedShards_Params Parms{};

	Parms.TeamNum = TeamNum;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValMissionObjective_Harvest_Meteor
// (Actor)

class UClass* AValMissionObjective_Harvest_Meteor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionObjective_Harvest_Meteor");

	return Clss;
}


// ValMissionObjective_Harvest_Meteor Valhalla.Default__ValMissionObjective_Harvest_Meteor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionObjective_Harvest_Meteor* AValMissionObjective_Harvest_Meteor::GetDefaultObj()
{
	static class AValMissionObjective_Harvest_Meteor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionObjective_Harvest_Meteor*>(AValMissionObjective_Harvest_Meteor::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMissionObjective_Meltdown
// (Actor)

class UClass* AValMissionObjective_Meltdown::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionObjective_Meltdown");

	return Clss;
}


// ValMissionObjective_Meltdown Valhalla.Default__ValMissionObjective_Meltdown
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionObjective_Meltdown* AValMissionObjective_Meltdown::GetDefaultObj()
{
	static class AValMissionObjective_Meltdown* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionObjective_Meltdown*>(AValMissionObjective_Meltdown::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionObjective_Meltdown.SetMissionGameState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValGameState_Mission*       GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_Meltdown::SetMissionGameState(class AValGameState_Mission* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_Meltdown", "SetMissionGameState");

	Params::AValMissionObjective_Meltdown_SetMissionGameState_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionObjective_Meltdown.OnRep_GameState
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValMissionObjective_Meltdown::OnRep_GameState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_Meltdown", "OnRep_GameState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionObjective_Meltdown.OnGameState
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValGameState_Mission*       GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionObjective_Meltdown::OnGameState(class AValGameState_Mission* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_Meltdown", "OnGameState");

	Params::AValMissionObjective_Meltdown_OnGameState_Params Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValMissionObjective_Meltdown.GetMissionGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValGameState_Mission*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValGameState_Mission* AValMissionObjective_Meltdown::GetMissionGameState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionObjective_Meltdown", "GetMissionGameState");

	Params::AValMissionObjective_Meltdown_GetMissionGameState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionStart
// (Actor)

class UClass* AValMissionStart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionStart");

	return Clss;
}


// ValMissionStart Valhalla.Default__ValMissionStart
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionStart* AValMissionStart::GetDefaultObj()
{
	static class AValMissionStart* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionStart*>(AValMissionStart::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionStart.GetSpawnType
// (Final, Native, Public)
// Parameters:
// enum class ESpawnType              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESpawnType AValMissionStart::GetSpawnType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionStart", "GetSpawnType");

	Params::AValMissionStart_GetSpawnType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionStart.GetAssignedTeam
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionStart::GetAssignedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionStart", "GetAssignedTeam");

	Params::AValMissionStart_GetAssignedTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionState
// (Actor)

class UClass* AValMissionState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState");

	return Clss;
}


// ValMissionState Valhalla.Default__ValMissionState
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState* AValMissionState::GetDefaultObj()
{
	static class AValMissionState* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState*>(AValMissionState::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionState.SetWarningTimer
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetWarningTimer(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetWarningTimer");

	Params::AValMissionState_SetWarningTimer_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionWinner
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EliminatedTeamId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionWinner(int32 Value, int32 EliminatedTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionWinner");

	Params::AValMissionState_SetMissionWinner_Params Parms{};

	Parms.Value = Value;
	Parms.EliminatedTeamId = EliminatedTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionTotalSlots
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionTotalSlots(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionTotalSlots");

	Params::AValMissionState_SetMissionTotalSlots_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionTimer
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionTimer(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionTimer");

	Params::AValMissionState_SetMissionTimer_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionTeam
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionTeam(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionTeam");

	Params::AValMissionState_SetMissionTeam_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionTakenSlots
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct Valhalla_TeamSlots>  Slots                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionTakenSlots(TArray<struct Valhalla_TeamSlots>& Slots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionTakenSlots");

	Params::AValMissionState_SetMissionTakenSlots_Params Parms{};

	Parms.Slots = Slots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionPrepare
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionPrepare(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionPrepare");

	Params::AValMissionState_SetMissionPrepare_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionLocation
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionLocation(const struct CoreUObject_Vector& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionLocation");

	Params::AValMissionState_SetMissionLocation_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionIndex
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionIndex");

	Params::AValMissionState_SetMissionIndex_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionId
// (Final, Native, Public)
// Parameters:
// class FName                        Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionId(class FName Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionId");

	Params::AValMissionState_SetMissionId_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.SetMissionFinale
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState::SetMissionFinale(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "SetMissionFinale");

	Params::AValMissionState_SetMissionFinale_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_WarningTimer
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_WarningTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_WarningTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionWinner
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionWinner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionWinner");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionTotalSlots
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionTotalSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionTotalSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionTimer
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionTeam
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionTakenSlots
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionTakenSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionTakenSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionPrepare
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionPrepare()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionPrepare");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionLocation
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionIndex
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionIndex");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionId
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.OnRep_MissionFinale
// (Final, Native, Protected)
// Parameters:

void AValMissionState::OnRep_MissionFinale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "OnRep_MissionFinale");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState.GetWarningTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState::GetWarningTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetWarningTimer");

	Params::AValMissionState_GetWarningTimer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetPending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionState::GetPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetPending");

	Params::AValMissionState_GetPending_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionWinDetails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_MissionWinDetails  ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_MissionWinDetails AValMissionState::GetMissionWinDetails()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionWinDetails");

	Params::AValMissionState_GetMissionWinDetails_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionTotalSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState::GetMissionTotalSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionTotalSlots");

	Params::AValMissionState_GetMissionTotalSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState::GetMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionTimer");

	Params::AValMissionState_GetMissionTimer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState::GetMissionTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionTeam");

	Params::AValMissionState_GetMissionTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionTakenSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_TeamSlots>  Slots                                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValMissionState::GetMissionTakenSlots(TArray<struct Valhalla_TeamSlots>* Slots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionTakenSlots");

	Params::AValMissionState_GetMissionTakenSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Slots != nullptr)
		*Slots = std::move(Parms.Slots);

}


// Function Valhalla.ValMissionState.GetMissionPrepare
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionState::GetMissionPrepare()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionPrepare");

	Params::AValMissionState_GetMissionPrepare_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValMissionState::GetMissionLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionLocation");

	Params::AValMissionState_GetMissionLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState::GetMissionIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionIndex");

	Params::AValMissionState_GetMissionIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AValMissionState::GetMissionId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionId");

	Params::AValMissionState_GetMissionId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState.GetMissionFinale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValMissionState::GetMissionFinale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState", "GetMissionFinale");

	Params::AValMissionState_GetMissionFinale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionState_CapturePoint
// (Actor)

class UClass* AValMissionState_CapturePoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState_CapturePoint");

	return Clss;
}


// ValMissionState_CapturePoint Valhalla.Default__ValMissionState_CapturePoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState_CapturePoint* AValMissionState_CapturePoint::GetDefaultObj()
{
	static class AValMissionState_CapturePoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState_CapturePoint*>(AValMissionState_CapturePoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionState_CapturePoint.OnRep_OffensiveTeam
// (Native, Protected)
// Parameters:

void AValMissionState_CapturePoint::OnRep_OffensiveTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "OnRep_OffensiveTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_CapturePoint.OnRep_ObjectiveState
// (Native, Protected)
// Parameters:

void AValMissionState_CapturePoint::OnRep_ObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "OnRep_ObjectiveState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_CapturePoint.OnRep_CaptureProgress
// (Native, Protected)
// Parameters:

void AValMissionState_CapturePoint::OnRep_CaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "OnRep_CaptureProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_CapturePoint.GetOffensiveTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState_CapturePoint::GetOffensiveTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "GetOffensiveTeam");

	Params::AValMissionState_CapturePoint_GetOffensiveTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState_CapturePoint.GetObjectiveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EObjectiveState         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EObjectiveState AValMissionState_CapturePoint::GetObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "GetObjectiveState");

	Params::AValMissionState_CapturePoint_GetObjectiveState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState_CapturePoint.GetCaptureProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValMissionState_CapturePoint::GetCaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_CapturePoint", "GetCaptureProgress");

	Params::AValMissionState_CapturePoint_GetCaptureProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionState_Harvest
// (Actor)

class UClass* AValMissionState_Harvest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState_Harvest");

	return Clss;
}


// ValMissionState_Harvest Valhalla.Default__ValMissionState_Harvest
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState_Harvest* AValMissionState_Harvest::GetDefaultObj()
{
	static class AValMissionState_Harvest* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState_Harvest*>(AValMissionState_Harvest::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionState_Harvest.OnRep_TeamShards
// (Native, Protected)
// Parameters:

void AValMissionState_Harvest::OnRep_TeamShards()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Harvest", "OnRep_TeamShards");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_Harvest.OnRep_PlayerShards
// (Native, Protected)
// Parameters:

void AValMissionState_Harvest::OnRep_PlayerShards()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Harvest", "OnRep_PlayerShards");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_Harvest.GetTeamShards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState_Harvest::GetTeamShards(int32 TeamNum, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Harvest", "GetTeamShards");

	Params::AValMissionState_Harvest_GetTeamShards_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

}


// Function Valhalla.ValMissionState_Harvest.GetPlayerShards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*                PlayerState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState_Harvest::GetPlayerShards(class APlayerState* PlayerState, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Harvest", "GetPlayerShards");

	Params::AValMissionState_Harvest_GetPlayerShards_Params Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

}


// Class Valhalla.ValMissionState_Meltdown
// (Actor)

class UClass* AValMissionState_Meltdown::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState_Meltdown");

	return Clss;
}


// ValMissionState_Meltdown Valhalla.Default__ValMissionState_Meltdown
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState_Meltdown* AValMissionState_Meltdown::GetDefaultObj()
{
	static class AValMissionState_Meltdown* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState_Meltdown*>(AValMissionState_Meltdown::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionState_Meltdown.OnRep_OffensiveTeam
// (Native, Protected)
// Parameters:

void AValMissionState_Meltdown::OnRep_OffensiveTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "OnRep_OffensiveTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_Meltdown.OnRep_CoreHealthMax
// (Native, Protected)
// Parameters:

void AValMissionState_Meltdown::OnRep_CoreHealthMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "OnRep_CoreHealthMax");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_Meltdown.OnRep_CoreHealth
// (Native, Protected)
// Parameters:

void AValMissionState_Meltdown::OnRep_CoreHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "OnRep_CoreHealth");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_Meltdown.GetOffensiveTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState_Meltdown::GetOffensiveTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "GetOffensiveTeam");

	Params::AValMissionState_Meltdown_GetOffensiveTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState_Meltdown.GetCoreHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState_Meltdown::GetCoreHealthMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "GetCoreHealthMax");

	Params::AValMissionState_Meltdown_GetCoreHealthMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState_Meltdown.GetCoreHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState_Meltdown::GetCoreHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_Meltdown", "GetCoreHealth");

	Params::AValMissionState_Meltdown_GetCoreHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionState_NeutralPoint
// (Actor)

class UClass* AValMissionState_NeutralPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState_NeutralPoint");

	return Clss;
}


// ValMissionState_NeutralPoint Valhalla.Default__ValMissionState_NeutralPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState_NeutralPoint* AValMissionState_NeutralPoint::GetDefaultObj()
{
	static class AValMissionState_NeutralPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState_NeutralPoint*>(AValMissionState_NeutralPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMissionState_NeutralPoint.OnRep_TeamScores
// (Native, Protected)
// Parameters:

void AValMissionState_NeutralPoint::OnRep_TeamScores()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "OnRep_TeamScores");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_NeutralPoint.OnRep_OwningTeam
// (Native, Protected)
// Parameters:

void AValMissionState_NeutralPoint::OnRep_OwningTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "OnRep_OwningTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_NeutralPoint.OnRep_ObjectiveState
// (Native, Protected)
// Parameters:

void AValMissionState_NeutralPoint::OnRep_ObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "OnRep_ObjectiveState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_NeutralPoint.OnRep_CaptureProgress
// (Native, Protected)
// Parameters:

void AValMissionState_NeutralPoint::OnRep_CaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "OnRep_CaptureProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMissionState_NeutralPoint.GetTeamScore
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Score                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMissionState_NeutralPoint::GetTeamScore(int32 TeamNum, float* Score)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "GetTeamScore");

	Params::AValMissionState_NeutralPoint_GetTeamScore_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Score != nullptr)
		*Score = Parms.Score;

}


// Function Valhalla.ValMissionState_NeutralPoint.GetOwningTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValMissionState_NeutralPoint::GetOwningTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "GetOwningTeam");

	Params::AValMissionState_NeutralPoint_GetOwningTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValMissionState_NeutralPoint.GetObjectiveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EObjectiveState         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EObjectiveState AValMissionState_NeutralPoint::GetObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMissionState_NeutralPoint", "GetObjectiveState");

	Params::AValMissionState_NeutralPoint_GetObjectiveState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValMissionState_Pending
// (Actor)

class UClass* AValMissionState_Pending::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMissionState_Pending");

	return Clss;
}


// ValMissionState_Pending Valhalla.Default__ValMissionState_Pending
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMissionState_Pending* AValMissionState_Pending::GetDefaultObj()
{
	static class AValMissionState_Pending* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMissionState_Pending*>(AValMissionState_Pending::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMission_CapturePoint
// (Actor)

class UClass* AValMission_CapturePoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission_CapturePoint");

	return Clss;
}


// ValMission_CapturePoint Valhalla.Default__ValMission_CapturePoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission_CapturePoint* AValMission_CapturePoint::GetDefaultObj()
{
	static class AValMission_CapturePoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission_CapturePoint*>(AValMission_CapturePoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMission_CapturePoint.OnObjectiveEndOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_CapturePoint::OnObjectiveEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_CapturePoint", "OnObjectiveEndOverlap");

	Params::AValMission_CapturePoint_OnObjectiveEndOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission_CapturePoint.OnObjectiveBeginOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_CapturePoint::OnObjectiveBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_CapturePoint", "OnObjectiveBeginOverlap");

	Params::AValMission_CapturePoint_OnObjectiveBeginOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMission_Harvest
// (Actor)

class UClass* AValMission_Harvest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission_Harvest");

	return Clss;
}


// ValMission_Harvest Valhalla.Default__ValMission_Harvest
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission_Harvest* AValMission_Harvest::GetDefaultObj()
{
	static class AValMission_Harvest* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission_Harvest*>(AValMission_Harvest::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMission_Harvest.OnMeteorBeginOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_Harvest::OnMeteorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_Harvest", "OnMeteorBeginOverlap");

	Params::AValMission_Harvest_OnMeteorBeginOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission_Harvest.OnHopperBeginOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_Harvest::OnHopperBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_Harvest", "OnHopperBeginOverlap");

	Params::AValMission_Harvest_OnHopperBeginOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMission_Meltdown
// (Actor)

class UClass* AValMission_Meltdown::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission_Meltdown");

	return Clss;
}


// ValMission_Meltdown Valhalla.Default__ValMission_Meltdown
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission_Meltdown* AValMission_Meltdown::GetDefaultObj()
{
	static class AValMission_Meltdown* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission_Meltdown*>(AValMission_Meltdown::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMission_Meltdown.OnCoreHealthMax
// (Native, Protected)
// Parameters:
// int32                              OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_Meltdown::OnCoreHealthMax(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_Meltdown", "OnCoreHealthMax");

	Params::AValMission_Meltdown_OnCoreHealthMax_Params Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission_Meltdown.OnCoreHealth
// (Native, Protected)
// Parameters:
// int32                              OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_Meltdown::OnCoreHealth(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_Meltdown", "OnCoreHealth");

	Params::AValMission_Meltdown_OnCoreHealth_Params Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMission_NeutralPoint
// (Actor)

class UClass* AValMission_NeutralPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission_NeutralPoint");

	return Clss;
}


// ValMission_NeutralPoint Valhalla.Default__ValMission_NeutralPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission_NeutralPoint* AValMission_NeutralPoint::GetDefaultObj()
{
	static class AValMission_NeutralPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission_NeutralPoint*>(AValMission_NeutralPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValMission_NeutralPoint.OnObjectiveEndOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_NeutralPoint::OnObjectiveEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_NeutralPoint", "OnObjectiveEndOverlap");

	Params::AValMission_NeutralPoint_OnObjectiveEndOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValMission_NeutralPoint.OnObjectiveBeginOverlap
// (Native, Protected)
// Parameters:
// class AActor*                      OverlappedActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValMission_NeutralPoint::OnObjectiveBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValMission_NeutralPoint", "OnObjectiveBeginOverlap");

	Params::AValMission_NeutralPoint_OnObjectiveBeginOverlap_Params Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValMission_Pending
// (Actor)

class UClass* AValMission_Pending::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMission_Pending");

	return Clss;
}


// ValMission_Pending Valhalla.Default__ValMission_Pending
// (Public, ClassDefaultObject, ArchetypeObject)

class AValMission_Pending* AValMission_Pending::GetDefaultObj()
{
	static class AValMission_Pending* Default = nullptr;

	if (!Default)
		Default = static_cast<AValMission_Pending*>(AValMission_Pending::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValNamedAreaVolume
// (Actor)

class UClass* AValNamedAreaVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNamedAreaVolume");

	return Clss;
}


// ValNamedAreaVolume Valhalla.Default__ValNamedAreaVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValNamedAreaVolume* AValNamedAreaVolume::GetDefaultObj()
{
	static class AValNamedAreaVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValNamedAreaVolume*>(AValNamedAreaVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValNavLinkActor
// (Actor)

class UClass* AValNavLinkActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNavLinkActor");

	return Clss;
}


// ValNavLinkActor Valhalla.Default__ValNavLinkActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValNavLinkActor* AValNavLinkActor::GetDefaultObj()
{
	static class AValNavLinkActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValNavLinkActor*>(AValNavLinkActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValNavLinkActor.SetupNavLink
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValNavLinkActor::SetupNavLink()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkActor", "SetupNavLink");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkActor.SetInteractionActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      InInteraction                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkActor::SetInteractionActor(class AActor* InInteraction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkActor", "SetInteractionActor");

	Params::AValNavLinkActor_SetInteractionActor_Params Parms{};

	Parms.InInteraction = InInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValNavLinkComponent
// (None)

class UClass* UValNavLinkComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNavLinkComponent");

	return Clss;
}


// ValNavLinkComponent Valhalla.Default__ValNavLinkComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValNavLinkComponent* UValNavLinkComponent::GetDefaultObj()
{
	static class UValNavLinkComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValNavLinkComponent*>(UValNavLinkComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValNavLinkProxy
// (Actor)

class UClass* AValNavLinkProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNavLinkProxy");

	return Clss;
}


// ValNavLinkProxy Valhalla.Default__ValNavLinkProxy
// (Public, ClassDefaultObject, ArchetypeObject)

class AValNavLinkProxy* AValNavLinkProxy::GetDefaultObj()
{
	static class AValNavLinkProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<AValNavLinkProxy*>(AValNavLinkProxy::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValNavLinkProxy.SetupLink
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          Left                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Right                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Orientation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// enum class ENavLinkDirection       Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::SetupLink(const struct CoreUObject_Vector& Left, const struct CoreUObject_Vector& Right, const struct CoreUObject_Vector& Location, const struct CoreUObject_Rotator& Orientation, enum class ENavLinkDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "SetupLink");

	Params::AValNavLinkProxy_SetupLink_Params Parms{};

	Parms.Left = Left;
	Parms.Right = Right;
	Parms.Location = Location;
	Parms.Orientation = Orientation;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.SetInteractionActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      InInteraction                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::SetInteractionActor(class AActor* InInteraction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "SetInteractionActor");

	Params::AValNavLinkProxy_SetInteractionActor_Params Parms{};

	Parms.InInteraction = InInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.ResetNavLink
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                               bActive                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::ResetNavLink(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "ResetNavLink");

	Params::AValNavLinkProxy_ResetNavLink_Params Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.PerformSmartLinkTravel
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      Agent                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Destination                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::PerformSmartLinkTravel(class AActor* Agent, struct CoreUObject_Vector& Destination)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "PerformSmartLinkTravel");

	Params::AValNavLinkProxy_PerformSmartLinkTravel_Params Parms{};

	Parms.Agent = Agent;
	Parms.Destination = Destination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.OpenDoor
// (Event, Public, BlueprintEvent)
// Parameters:

void AValNavLinkProxy::OpenDoor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "OpenDoor");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValNavLinkProxy.OnInteractionActorSet
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValNavLinkProxy::OnInteractionActorSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "OnInteractionActorSet");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValNavLinkProxy.OnFallingTagChanged
// (Final, Native, Private)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::OnFallingTagChanged(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "OnFallingTagChanged");

	Params::AValNavLinkProxy_OnFallingTagChanged_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.OnCurrentAgentDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValNavLinkProxy::OnCurrentAgentDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "OnCurrentAgentDied");

	Params::AValNavLinkProxy_OnCurrentAgentDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValNavLinkProxy.GetDoorChannelTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValNavLinkProxy::GetDoorChannelTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "GetDoorChannelTime");

	Params::AValNavLinkProxy_GetDoorChannelTime_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValNavLinkProxy.CurrentAgentDied
// (Event, Public, BlueprintEvent)
// Parameters:

void AValNavLinkProxy::CurrentAgentDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "CurrentAgentDied");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValNavLinkProxy.AreLinksSet
// (Final, Native, Public, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValNavLinkProxy::AreLinksSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNavLinkProxy", "AreLinksSet");

	Params::AValNavLinkProxy_AreLinksSet_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValNotificationData
// (None)

class UClass* UValNotificationData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNotificationData");

	return Clss;
}


// ValNotificationData Valhalla.Default__ValNotificationData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValNotificationData* UValNotificationData::GetDefaultObj()
{
	static class UValNotificationData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValNotificationData*>(UValNotificationData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValNotificationManager
// (None)

class UClass* UValNotificationManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNotificationManager");

	return Clss;
}


// ValNotificationManager Valhalla.Default__ValNotificationManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValNotificationManager* UValNotificationManager::GetDefaultObj()
{
	static class UValNotificationManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValNotificationManager*>(UValNotificationManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValNotificationManager.GetNotificationDataFromId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ID                                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValNotificationManager*     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValNotificationManager* UValNotificationManager::GetNotificationDataFromId(class FName& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNotificationManager", "GetNotificationDataFromId");

	Params::UValNotificationManager_GetNotificationDataFromId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValNudgeComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UValNudgeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValNudgeComponent");

	return Clss;
}


// ValNudgeComponent Valhalla.Default__ValNudgeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValNudgeComponent* UValNudgeComponent::GetDefaultObj()
{
	static class UValNudgeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValNudgeComponent*>(UValNudgeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValNudgeComponent.GetNudgingActors
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<TWeakObjectPtr<class AActor>>NudgingActors                                                    (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UValNudgeComponent::GetNudgingActors(TArray<TWeakObjectPtr<class AActor>>* NudgingActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNudgeComponent", "GetNudgingActors");

	Params::UValNudgeComponent_GetNudgingActors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NudgingActors != nullptr)
		*NudgingActors = std::move(Parms.NudgingActors);

}


// Function Valhalla.ValNudgeComponent.GetNudgeVectorWithActors
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// TArray<TWeakObjectPtr<class AActor>>NudgingActors                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValNudgeComponent::GetNudgeVectorWithActors(TArray<TWeakObjectPtr<class AActor>>& NudgingActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNudgeComponent", "GetNudgeVectorWithActors");

	Params::UValNudgeComponent_GetNudgeVectorWithActors_Params Parms{};

	Parms.NudgingActors = NudgingActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValNudgeComponent.GetNudgeVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector UValNudgeComponent::GetNudgeVector()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValNudgeComponent", "GetNudgeVector");

	Params::UValNudgeComponent_GetNudgeVector_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValObjectiveGrid
// (Actor)

class UClass* AValObjectiveGrid::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjectiveGrid");

	return Clss;
}


// ValObjectiveGrid Valhalla.Default__ValObjectiveGrid
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjectiveGrid* AValObjectiveGrid::GetDefaultObj()
{
	static class AValObjectiveGrid* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjectiveGrid*>(AValObjectiveGrid::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjectiveGrid.SetGridPlacement
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          Scale                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectiveGrid::SetGridPlacement(const struct CoreUObject_Vector& Scale, const struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveGrid", "SetGridPlacement");

	Params::AValObjectiveGrid_SetGridPlacement_Params Parms{};

	Parms.Scale = Scale;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectiveGrid.EnableGrid
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectiveGrid::EnableGrid(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveGrid", "EnableGrid");

	Params::AValObjectiveGrid_EnableGrid_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValObjectivePoint
// (Actor)

class UClass* AValObjectivePoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjectivePoint");

	return Clss;
}


// ValObjectivePoint Valhalla.Default__ValObjectivePoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjectivePoint* AValObjectivePoint::GetDefaultObj()
{
	static class AValObjectivePoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjectivePoint*>(AValObjectivePoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjectivePoint.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EObjectiveState         State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectivePoint::UpdateState(enum class EObjectiveState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "UpdateState");

	Params::AValObjectivePoint_UpdateState_Params Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjectivePoint.UpdateProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectivePoint::UpdateProgress(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "UpdateProgress");

	Params::AValObjectivePoint_UpdateProgress_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjectivePoint.UpdateActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectivePoint::UpdateActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "UpdateActive");

	Params::AValObjectivePoint_UpdateActive_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjectivePoint.OnRep_State
// (Native, Protected)
// Parameters:

void AValObjectivePoint::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectivePoint.OnRep_Progress
// (Native, Protected)
// Parameters:

void AValObjectivePoint::OnRep_Progress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "OnRep_Progress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectivePoint.OnRep_Active
// (Native, Protected)
// Parameters:

void AValObjectivePoint::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "OnRep_Active");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectivePoint.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValObjectivePoint::IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "IsActive");

	Params::AValObjectivePoint_IsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjectivePoint.GetAssignedTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValObjectivePoint::GetAssignedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectivePoint", "GetAssignedTeam");

	Params::AValObjectivePoint_GetAssignedTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValObjective_Epicenter
// (Actor)

class UClass* AValObjective_Epicenter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjective_Epicenter");

	return Clss;
}


// ValObjective_Epicenter Valhalla.Default__ValObjective_Epicenter
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjective_Epicenter* AValObjective_Epicenter::GetDefaultObj()
{
	static class AValObjective_Epicenter* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjective_Epicenter*>(AValObjective_Epicenter::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjective_Epicenter.UpdateOverlaps
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bInitial                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Epicenter::UpdateOverlaps(bool bInitial)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "UpdateOverlaps");

	Params::AValObjective_Epicenter_UpdateOverlaps_Params Parms{};

	Parms.bInitial = bInitial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Epicenter.UpdateActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Epicenter::UpdateActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "UpdateActive");

	Params::AValObjective_Epicenter_UpdateActive_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjective_Epicenter.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Epicenter::SetActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "SetActive");

	Params::AValObjective_Epicenter_SetActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Epicenter.OnRep_Active
// (Final, Native, Protected)
// Parameters:

void AValObjective_Epicenter::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "OnRep_Active");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Epicenter.OnCharacterOutsideRadius
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Epicenter::OnCharacterOutsideRadius(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "OnCharacterOutsideRadius");

	Params::AValObjective_Epicenter_OnCharacterOutsideRadius_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjective_Epicenter.OnCharacterInsideRadius
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Epicenter::OnCharacterInsideRadius(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "OnCharacterInsideRadius");

	Params::AValObjective_Epicenter_OnCharacterInsideRadius_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjective_Epicenter.GetActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValObjective_Epicenter::GetActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Epicenter", "GetActive");

	Params::AValObjective_Epicenter_GetActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValObjective_Loot
// (Actor)

class UClass* AValObjective_Loot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjective_Loot");

	return Clss;
}


// ValObjective_Loot Valhalla.Default__ValObjective_Loot
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjective_Loot* AValObjective_Loot::GetDefaultObj()
{
	static class AValObjective_Loot* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjective_Loot*>(AValObjective_Loot::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjective_Loot.SpawnLoot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValObjective_Loot::SpawnLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "SpawnLoot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Loot.OnRep_State
// (Native, Protected)
// Parameters:

void AValObjective_Loot::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Loot.OnLootPending
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjective_Loot::OnLootPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnLootPending");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Loot.OnLootLooted
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjective_Loot::OnLootLooted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnLootLooted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Loot.OnLootDeactivated
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjective_Loot::OnLootDeactivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnLootDeactivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Loot.OnLootActivated
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjective_Loot::OnLootActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnLootActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Loot.OnDropShipTriggered
// (Event, Public, BlueprintEvent)
// Parameters:

void AValObjective_Loot::OnDropShipTriggered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnDropShipTriggered");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Loot.OnCrateOpened
// (Native, Protected)
// Parameters:
// class AValLootCrate*               LootCrate                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Loot::OnCrateOpened(class AValLootCrate* LootCrate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "OnCrateOpened");

	Params::AValObjective_Loot_OnCrateOpened_Params Parms{};

	Parms.LootCrate = LootCrate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Loot.GetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ELootState              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ELootState AValObjective_Loot::GetState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "GetState");

	Params::AValObjective_Loot_GetState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjective_Loot.ClientOnDropShipTriggered
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AValObjective_Loot::ClientOnDropShipTriggered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Loot", "ClientOnDropShipTriggered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValObjective_LootExtractionSite
// (Actor)

class UClass* AValObjective_LootExtractionSite::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjective_LootExtractionSite");

	return Clss;
}


// ValObjective_LootExtractionSite Valhalla.Default__ValObjective_LootExtractionSite
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjective_LootExtractionSite* AValObjective_LootExtractionSite::GetDefaultObj()
{
	static class AValObjective_LootExtractionSite* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjective_LootExtractionSite*>(AValObjective_LootExtractionSite::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjective_LootExtractionSite.TrySetSiteEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValObjective_LootExtractionSite::TrySetSiteEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "TrySetSiteEnabled");

	Params::AValObjective_LootExtractionSite_TrySetSiteEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjective_LootExtractionSite.SpawnPods
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValObjective_LootExtractionSite::SpawnPods()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "SpawnPods");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_LootExtractionSite.SetPodLocations
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjective_LootExtractionSite::SetPodLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "SetPodLocations");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_LootExtractionSite.OnRep_PodData
// (Final, Native, Public)
// Parameters:

void AValObjective_LootExtractionSite::OnRep_PodData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "OnRep_PodData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_LootExtractionSite.OnRep_ExtractionTime
// (Final, Native, Public)
// Parameters:

void AValObjective_LootExtractionSite::OnRep_ExtractionTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "OnRep_ExtractionTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_LootExtractionSite.OnExtractingLegendary
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_LootExtractionSite::OnExtractingLegendary(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "OnExtractingLegendary");

	Params::AValObjective_LootExtractionSite_OnExtractingLegendary_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjective_LootExtractionSite.OnDepositPodStateChanged
// (Final, Native, Protected)
// Parameters:
// struct Valhalla_LootDepositPodData PodData                                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValObjective_LootExtractionSite::OnDepositPodStateChanged(const struct Valhalla_LootDepositPodData& PodData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "OnDepositPodStateChanged");

	Params::AValObjective_LootExtractionSite_OnDepositPodStateChanged_Params Parms{};

	Parms.PodData = PodData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_LootExtractionSite.MulticastNotifyPodStateChanged
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct Valhalla_LootDepositPodData PodData                                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValObjective_LootExtractionSite::MulticastNotifyPodStateChanged(const struct Valhalla_LootDepositPodData& PodData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "MulticastNotifyPodStateChanged");

	Params::AValObjective_LootExtractionSite_MulticastNotifyPodStateChanged_Params Parms{};

	Parms.PodData = PodData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_LootExtractionSite.GetPodData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_LootDepositPodData>OutLootDepositPodData                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValObjective_LootExtractionSite::GetPodData(TArray<struct Valhalla_LootDepositPodData>* OutLootDepositPodData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_LootExtractionSite", "GetPodData");

	Params::AValObjective_LootExtractionSite_GetPodData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLootDepositPodData != nullptr)
		*OutLootDepositPodData = std::move(Parms.OutLootDepositPodData);

}


// Class Valhalla.ValObjective_Portal
// (Actor)

class UClass* AValObjective_Portal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjective_Portal");

	return Clss;
}


// ValObjective_Portal Valhalla.Default__ValObjective_Portal
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjective_Portal* AValObjective_Portal::GetDefaultObj()
{
	static class AValObjective_Portal* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjective_Portal*>(AValObjective_Portal::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjective_Portal.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EFrontierPortalState    Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Portal::UpdateState(enum class EFrontierPortalState Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "UpdateState");

	Params::AValObjective_Portal_UpdateState_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValObjective_Portal.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EFrontierPortalState    Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Portal::SetState(enum class EFrontierPortalState Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "SetState");

	Params::AValObjective_Portal_SetState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.SetDoorsClosing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bDoorsClosing                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Portal::SetDoorsClosing(bool bDoorsClosing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "SetDoorsClosing");

	Params::AValObjective_Portal_SetDoorsClosing_Params Parms{};

	Parms.bDoorsClosing = bDoorsClosing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.OnRep_StateChanged
// (Final, Native, Protected)
// Parameters:

void AValObjective_Portal::OnRep_StateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "OnRep_StateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.OnRep_DoorsClosing
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValObjective_Portal::OnRep_DoorsClosing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "OnRep_DoorsClosing");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjective_Portal.OnPortalEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Portal::OnPortalEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "OnPortalEndOverlap");

	Params::AValObjective_Portal_OnPortalEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.OnPortalBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValObjective_Portal::OnPortalBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "OnPortalBeginOverlap");

	Params::AValObjective_Portal_OnPortalBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.OnOverlappingActorDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Char                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjective_Portal::OnOverlappingActorDied(float TimeToRespawn, class AValCharacter* Char)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "OnOverlappingActorDied");

	Params::AValObjective_Portal_OnOverlappingActorDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Char = Char;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjective_Portal.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EFrontierPortalState    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EFrontierPortalState AValObjective_Portal::GetState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "GetState");

	Params::AValObjective_Portal_GetState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjective_Portal.GetDoorsClosing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValObjective_Portal::GetDoorsClosing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "GetDoorsClosing");

	Params::AValObjective_Portal_GetDoorsClosing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjective_Portal.GetCollisionComp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShapeComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UShapeComponent* AValObjective_Portal::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Portal", "GetCollisionComp");

	Params::AValObjective_Portal_GetCollisionComp_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class Valhalla.ValObjective_Titan
// (Actor)

class UClass* AValObjective_Titan::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjective_Titan");

	return Clss;
}


// ValObjective_Titan Valhalla.Default__ValObjective_Titan
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjective_Titan* AValObjective_Titan::GetDefaultObj()
{
	static class AValObjective_Titan* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjective_Titan*>(AValObjective_Titan::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjective_Titan.GetAssignedTeam
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValObjective_Titan::GetAssignedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjective_Titan", "GetAssignedTeam");

	Params::AValObjective_Titan_GetAssignedTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValOrderManager
// (None)

class UClass* UValOrderManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValOrderManager");

	return Clss;
}


// ValOrderManager Valhalla.Default__ValOrderManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValOrderManager* UValOrderManager::GetDefaultObj()
{
	static class UValOrderManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValOrderManager*>(UValOrderManager::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValOutlineComponent
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UValOutlineComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValOutlineComponent");

	return Clss;
}


// ValOutlineComponent Valhalla.Default__ValOutlineComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValOutlineComponent* UValOutlineComponent::GetDefaultObj()
{
	static class UValOutlineComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValOutlineComponent*>(UValOutlineComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValOutlineComponent.SetOutlineEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValOutlineComponent::SetOutlineEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValOutlineComponent", "SetOutlineEnabled");

	Params::UValOutlineComponent_SetOutlineEnabled_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValOutlineComponent.IsOutlineEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValOutlineComponent::IsOutlineEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValOutlineComponent", "IsOutlineEnabled");

	Params::UValOutlineComponent_IsOutlineEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValOutlineComponent.GetStencilIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UValOutlineComponent::GetStencilIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValOutlineComponent", "GetStencilIndex");

	Params::UValOutlineComponent_GetStencilIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPhaseShiftPortal
// (Actor)

class UClass* AValPhaseShiftPortal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPhaseShiftPortal");

	return Clss;
}


// ValPhaseShiftPortal Valhalla.Default__ValPhaseShiftPortal
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPhaseShiftPortal* AValPhaseShiftPortal::GetDefaultObj()
{
	static class AValPhaseShiftPortal* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPhaseShiftPortal*>(AValPhaseShiftPortal::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPhaseShiftPortal.SetIsReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsReady                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::SetIsReady(bool bIsReady)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "SetIsReady");

	Params::AValPhaseShiftPortal_SetIsReady_Params Parms{};

	Parms.bIsReady = bIsReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPhaseShiftPortal.SetIsOneWay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsOneWay                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::SetIsOneWay(bool bIsOneWay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "SetIsOneWay");

	Params::AValPhaseShiftPortal_SetIsOneWay_Params Parms{};

	Parms.bIsOneWay = bIsOneWay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPhaseShiftPortal.SetIsEntrance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsEntrance                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::SetIsEntrance(bool bIsEntrance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "SetIsEntrance");

	Params::AValPhaseShiftPortal_SetIsEntrance_Params Parms{};

	Parms.bIsEntrance = bIsEntrance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPhaseShiftPortal.ServerOnInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::ServerOnInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "ServerOnInteract");

	Params::AValPhaseShiftPortal_ServerOnInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPhaseShiftPortal.PredictInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::PredictInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "PredictInteract");

	Params::AValPhaseShiftPortal_PredictInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPhaseShiftPortal.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "Interact");

	Params::AValPhaseShiftPortal_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPhaseShiftPortal.GetRemainTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPhaseShiftPortal::GetRemainTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "GetRemainTime");

	Params::AValPhaseShiftPortal_GetRemainTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPhaseShiftPortal.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValPhaseShiftPortal::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "GetInteractText");

	Params::AValPhaseShiftPortal_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPhaseShiftPortal.ClientOnInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPhaseShiftPortal::ClientOnInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "ClientOnInteract");

	Params::AValPhaseShiftPortal_ClientOnInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPhaseShiftPortal.CheckCanInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPhaseShiftPortal::CheckCanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "CheckCanInteract");

	Params::AValPhaseShiftPortal_CheckCanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPhaseShiftPortal.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPhaseShiftPortal::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPhaseShiftPortal", "CanInteract");

	Params::AValPhaseShiftPortal_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPhysicsVolume
// (Actor)

class UClass* AValPhysicsVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPhysicsVolume");

	return Clss;
}


// ValPhysicsVolume Valhalla.Default__ValPhysicsVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPhysicsVolume* AValPhysicsVolume::GetDefaultObj()
{
	static class AValPhysicsVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPhysicsVolume*>(AValPhysicsVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPickup_Chest
// (Actor)

class UClass* AValPickup_Chest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPickup_Chest");

	return Clss;
}


// ValPickup_Chest Valhalla.Default__ValPickup_Chest
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPickup_Chest* AValPickup_Chest::GetDefaultObj()
{
	static class AValPickup_Chest* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPickup_Chest*>(AValPickup_Chest::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPickup_Chest.SetCurrencyValue
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup_Chest::SetCurrencyValue(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Chest", "SetCurrencyValue");

	Params::AValPickup_Chest_SetCurrencyValue_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPickup_Item
// (Actor)

class UClass* AValPickup_Item::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPickup_Item");

	return Clss;
}


// ValPickup_Item Valhalla.Default__ValPickup_Item
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPickup_Item* AValPickup_Item::GetDefaultObj()
{
	static class AValPickup_Item* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPickup_Item*>(AValPickup_Item::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPickup_Item.SetLootRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup_Item::SetLootRarity(enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "SetLootRarity");

	Params::AValPickup_Item_SetLootRarity_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup_Item.SetLootItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_PendingItem        LootItem                                                         (Parm, NativeAccessSpecifierPublic)

void AValPickup_Item::SetLootItem(const struct Valhalla_PendingItem& LootItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "SetLootItem");

	Params::AValPickup_Item_SetLootItem_Params Parms{};

	Parms.LootItem = LootItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup_Item.OnRep_GeneratedItem
// (Final, Native, Protected)
// Parameters:

void AValPickup_Item::OnRep_GeneratedItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "OnRep_GeneratedItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup_Item.OnLootUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValPickup_Item::OnLootUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "OnLootUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValPickup_Item.GetLootRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValPickup_Item::GetLootRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "GetLootRarity");

	Params::AValPickup_Item_GetLootRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Item.AutoDeposit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Looter                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup_Item::AutoDeposit(class AValCharacter* Looter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Item", "AutoDeposit");

	Params::AValPickup_Item_AutoDeposit_Params Parms{};

	Parms.Looter = Looter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPickup_Upgrade
// (Actor)

class UClass* AValPickup_Upgrade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPickup_Upgrade");

	return Clss;
}


// ValPickup_Upgrade Valhalla.Default__ValPickup_Upgrade
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPickup_Upgrade* AValPickup_Upgrade::GetDefaultObj()
{
	static class AValPickup_Upgrade* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPickup_Upgrade*>(AValPickup_Upgrade::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPickup_Upgrade.UpdateItemVFX
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                        ItemUpgrade                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup_Upgrade::UpdateItemVFX(class FName ItemUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "UpdateItemVFX");

	Params::AValPickup_Upgrade_UpdateItemVFX_Params Parms{};

	Parms.ItemUpgrade = ItemUpgrade;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPickup_Upgrade.TryToEquip
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup_Upgrade::TryToEquip(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "TryToEquip");

	Params::AValPickup_Upgrade_TryToEquip_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Upgrade.SetPickupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        ItemName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPickup_Upgrade::SetPickupItem(class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "SetPickupItem");

	Params::AValPickup_Upgrade_SetPickupItem_Params Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup_Upgrade.OnRep_PickupItemName
// (Final, Native, Public)
// Parameters:

void AValPickup_Upgrade::OnRep_PickupItemName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "OnRep_PickupItemName");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPickup_Upgrade.GetPickupRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValPickup_Upgrade::GetPickupRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "GetPickupRarity");

	Params::AValPickup_Upgrade_GetPickupRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Upgrade.GetPickupItemName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AValPickup_Upgrade::GetPickupItemName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "GetPickupItemName");

	Params::AValPickup_Upgrade_GetPickupItemName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Upgrade.GetOverlayComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValItemOverlayComponent*    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemOverlayComponent* AValPickup_Upgrade::GetOverlayComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "GetOverlayComponent");

	Params::AValPickup_Upgrade_GetOverlayComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Upgrade.GetItemDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValPickup_Upgrade::GetItemDescription()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "GetItemDescription");

	Params::AValPickup_Upgrade_GetItemDescription_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPickup_Upgrade.CanPlayerInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPickup_Upgrade::CanPlayerInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPickup_Upgrade", "CanPlayerInteract");

	Params::AValPickup_Upgrade_CanPlayerInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPingComponent
// (None)

class UClass* UValPingComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPingComponent");

	return Clss;
}


// ValPingComponent Valhalla.Default__ValPingComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPingComponent* UValPingComponent::GetDefaultObj()
{
	static class UValPingComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPingComponent*>(UValPingComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPingComponent.TryToPing
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValPingComponent::TryToPing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "TryToPing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddTypedPingWithLocation
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// enum class EValPingType            PingType                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_Vector_NetQuantize   Location                                                         (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddTypedPingWithLocation(enum class EValPingType PingType, struct Engine_Vector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddTypedPingWithLocation");

	Params::UValPingComponent_ServerAddTypedPingWithLocation_Params Parms{};

	Parms.PingType = PingType;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddObjectivePing
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_ValCachedObjectivePingPingData                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddObjectivePing(const struct Valhalla_ValCachedObjectivePing& PingData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddObjectivePing");

	Params::UValPingComponent_ServerAddObjectivePing_Params Parms{};

	Parms.PingData = PingData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddLocationPing
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Engine_Vector_NetQuantize   Location                                                         (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddLocationPing(struct Engine_Vector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddLocationPing");

	Params::UValPingComponent_ServerAddLocationPing_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddEnemyPing
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AActor*                      EnemyActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddEnemyPing(class AActor* EnemyActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddEnemyPing");

	Params::UValPingComponent_ServerAddEnemyPing_Params Parms{};

	Parms.EnemyActor = EnemyActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddContextPingWithLocation
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AActor*                      Object                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_Vector_NetQuantize   TargetLocation                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddContextPingWithLocation(class AActor* Object, const struct Engine_Vector_NetQuantize& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddContextPingWithLocation");

	Params::UValPingComponent_ServerAddContextPingWithLocation_Params Parms{};

	Parms.Object = Object;
	Parms.TargetLocation = TargetLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.ServerAddContextPing
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AActor*                      Object                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::ServerAddContextPing(class AActor* Object)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "ServerAddContextPing");

	Params::UValPingComponent_ServerAddContextPing_Params Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.PingLocationFromMap
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsObjective                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ObjectiveActor                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EFrontierDirectionType  ObjectiveType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::PingLocationFromMap(struct CoreUObject_Vector& Location, bool bIsObjective, class AActor* ObjectiveActor, enum class EFrontierDirectionType ObjectiveType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "PingLocationFromMap");

	Params::UValPingComponent_PingLocationFromMap_Params Parms{};

	Parms.Location = Location;
	Parms.bIsObjective = bIsObjective;
	Parms.ObjectiveActor = ObjectiveActor;
	Parms.ObjectiveType = ObjectiveType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.OnRep_RateLimited
// (Final, Native, Protected)
// Parameters:
// bool                               OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::OnRep_RateLimited(bool OldValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "OnRep_RateLimited");

	Params::UValPingComponent_OnRep_RateLimited_Params Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.OnEnemyPingDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                      DestroyedPing                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPingComponent::OnEnemyPingDestroyed(class AActor* DestroyedPing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "OnEnemyPingDestroyed");

	Params::UValPingComponent_OnEnemyPingDestroyed_Params Parms{};

	Parms.DestroyedPing = DestroyedPing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPingComponent.IsRateLimited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPingComponent::IsRateLimited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "IsRateLimited");

	Params::UValPingComponent_IsRateLimited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPingComponent.GetImmediatePingTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          OutPingLocation                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPingComponent::GetImmediatePingTarget(struct CoreUObject_Vector* OutPingLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPingComponent", "GetImmediatePingTarget");

	Params::UValPingComponent_GetImmediatePingTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutPingLocation != nullptr)
		*OutPingLocation = std::move(Parms.OutPingLocation);

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlatformBlueprintFunctionLibrary
// (None)

class UClass* UValPlatformBlueprintFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlatformBlueprintFunctionLibrary");

	return Clss;
}


// ValPlatformBlueprintFunctionLibrary Valhalla.Default__ValPlatformBlueprintFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlatformBlueprintFunctionLibrary* UValPlatformBlueprintFunctionLibrary::GetDefaultObj()
{
	static class UValPlatformBlueprintFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlatformBlueprintFunctionLibrary*>(UValPlatformBlueprintFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.SpawnBotFromDataWithTeamId
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotData*                 BotData                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateTeamIfMissing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStandInPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bNoCollisionFail                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*               BTOverride                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UValPlatformBlueprintFunctionLibrary::SpawnBotFromDataWithTeamId(class UObject* WorldContextObject, class UValBotData* BotData, int32 TeamId, bool bCreateTeamIfMissing, bool bStandInPlayer, struct CoreUObject_Vector& Location, struct CoreUObject_Rotator& Rotation, bool bNoCollisionFail, class AActor* Owner, class UBehaviorTree* BTOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "SpawnBotFromDataWithTeamId");

	Params::UValPlatformBlueprintFunctionLibrary_SpawnBotFromDataWithTeamId_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BotData = BotData;
	Parms.TeamId = TeamId;
	Parms.bCreateTeamIfMissing = bCreateTeamIfMissing;
	Parms.bStandInPlayer = bStandInPlayer;
	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.bNoCollisionFail = bNoCollisionFail;
	Parms.Owner = Owner;
	Parms.BTOverride = BTOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.SpawnBotFromData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotData*                 BotData                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TeamDefinition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateTeamIfMissing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStandInPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bNoCollisionFail                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*               BTOverride                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UValPlatformBlueprintFunctionLibrary::SpawnBotFromData(class UObject* WorldContextObject, class UValBotData* BotData, class FName& TeamDefinition, bool bCreateTeamIfMissing, bool bStandInPlayer, struct CoreUObject_Vector& Location, struct CoreUObject_Rotator& Rotation, bool bNoCollisionFail, class AActor* Owner, class UBehaviorTree* BTOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "SpawnBotFromData");

	Params::UValPlatformBlueprintFunctionLibrary_SpawnBotFromData_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BotData = BotData;
	Parms.TeamDefinition = TeamDefinition;
	Parms.bCreateTeamIfMissing = bCreateTeamIfMissing;
	Parms.bStandInPlayer = bStandInPlayer;
	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.bNoCollisionFail = bNoCollisionFail;
	Parms.Owner = Owner;
	Parms.BTOverride = BTOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.SpawnAIWithTeamId
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>           PawnClass                                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*               BehaviorTree                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateTeamIfMissing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStandInPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bNoCollisionFail                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UValPlatformBlueprintFunctionLibrary::SpawnAIWithTeamId(class UObject* WorldContextObject, TSubclassOf<class APawn> PawnClass, class UBehaviorTree* BehaviorTree, int32 TeamId, bool bCreateTeamIfMissing, bool bStandInPlayer, struct CoreUObject_Vector& Location, struct CoreUObject_Rotator& Rotation, bool bNoCollisionFail, class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "SpawnAIWithTeamId");

	Params::UValPlatformBlueprintFunctionLibrary_SpawnAIWithTeamId_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnClass = PawnClass;
	Parms.BehaviorTree = BehaviorTree;
	Parms.TeamId = TeamId;
	Parms.bCreateTeamIfMissing = bCreateTeamIfMissing;
	Parms.bStandInPlayer = bStandInPlayer;
	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.bNoCollisionFail = bNoCollisionFail;
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.SpawnAIWithTeamDefinition
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class APawn>           PawnClass                                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*               BehaviorTree                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TeamDefinition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateTeamIfMissing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStandInPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bNoCollisionFail                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UValPlatformBlueprintFunctionLibrary::SpawnAIWithTeamDefinition(class UObject* WorldContextObject, TSubclassOf<class APawn> PawnClass, class UBehaviorTree* BehaviorTree, class FName& TeamDefinition, bool bCreateTeamIfMissing, bool bStandInPlayer, struct CoreUObject_Vector& Location, struct CoreUObject_Rotator& Rotation, bool bNoCollisionFail, class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "SpawnAIWithTeamDefinition");

	Params::UValPlatformBlueprintFunctionLibrary_SpawnAIWithTeamDefinition_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnClass = PawnClass;
	Parms.BehaviorTree = BehaviorTree;
	Parms.TeamDefinition = TeamDefinition;
	Parms.bCreateTeamIfMissing = bCreateTeamIfMissing;
	Parms.bStandInPlayer = bStandInPlayer;
	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.bNoCollisionFail = bNoCollisionFail;
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.IsPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               IsWindows                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsLinux                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsMac                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsIOS                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsAndroid                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsXboxOne                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsXboxSeriesX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsPS4                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsPS5                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsSwitch                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlatformBlueprintFunctionLibrary::IsPlatform(bool IsWindows, bool IsLinux, bool IsMac, bool IsIOS, bool IsAndroid, bool IsXboxOne, bool IsXboxSeriesX, bool IsPS4, bool IsPS5, bool IsSwitch)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "IsPlatform");

	Params::UValPlatformBlueprintFunctionLibrary_IsPlatform_Params Parms{};

	Parms.IsWindows = IsWindows;
	Parms.IsLinux = IsLinux;
	Parms.IsMac = IsMac;
	Parms.IsIOS = IsIOS;
	Parms.IsAndroid = IsAndroid;
	Parms.IsXboxOne = IsXboxOne;
	Parms.IsXboxSeriesX = IsXboxSeriesX;
	Parms.IsPS4 = IsPS4;
	Parms.IsPS5 = IsPS5;
	Parms.IsSwitch = IsSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.IsOnlineEnvironment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsDevelopment                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsCertification                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsProduction                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlatformBlueprintFunctionLibrary::IsOnlineEnvironment(class UObject* WorldContextObject, bool IsDevelopment, bool IsCertification, bool IsProduction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "IsOnlineEnvironment");

	Params::UValPlatformBlueprintFunctionLibrary_IsOnlineEnvironment_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.IsDevelopment = IsDevelopment;
	Parms.IsCertification = IsCertification;
	Parms.IsProduction = IsProduction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.IsAntiCheatDisabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlatformBlueprintFunctionLibrary::IsAntiCheatDisabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "IsAntiCheatDisabled");

	Params::UValPlatformBlueprintFunctionLibrary_IsAntiCheatDisabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValPlatformBlueprintFunctionLibrary::GetGameVersion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "GetGameVersion");

	Params::UValPlatformBlueprintFunctionLibrary_GetGameVersion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.FrameDelay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumFramesToDelay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_LatentActionInfo     LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UValPlatformBlueprintFunctionLibrary::FrameDelay(class UObject* WorldContextObject, int32 NumFramesToDelay, const struct Engine_LatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "FrameDelay");

	Params::UValPlatformBlueprintFunctionLibrary_FrameDelay_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NumFramesToDelay = NumFramesToDelay;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlatformBlueprintFunctionLibrary.DestroyAIWithTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAIController*               Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlatformBlueprintFunctionLibrary::DestroyAIWithTeam(class AAIController* Controller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlatformBlueprintFunctionLibrary", "DestroyAIWithTeam");

	Params::UValPlatformBlueprintFunctionLibrary_DestroyAIWithTeam_Params Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.PlayerAttributeConfig
// (None)

class UClass* UPlayerAttributeConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("PlayerAttributeConfig");

	return Clss;
}


// PlayerAttributeConfig Valhalla.Default__PlayerAttributeConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UPlayerAttributeConfig* UPlayerAttributeConfig::GetDefaultObj()
{
	static class UPlayerAttributeConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UPlayerAttributeConfig*>(UPlayerAttributeConfig::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.PlayerAttributeConfig.GetClassAttributeConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CharacterClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PlayerAttributeGroupAttributeGroup                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerAttributeConfig::GetClassAttributeConfig(struct GameplayTags_GameplayTag& CharacterClass, struct Valhalla_PlayerAttributeGroup* AttributeGroup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("PlayerAttributeConfig", "GetClassAttributeConfig");

	Params::UPlayerAttributeConfig_GetClassAttributeConfig_Params Parms{};

	Parms.CharacterClass = CharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AttributeGroup != nullptr)
		*AttributeGroup = std::move(Parms.AttributeGroup);

	return Parms.ReturnValue;

}


// Function Valhalla.PlayerAttributeConfig.GetAttributeEffectClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect> EffectClass                                                      (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerAttributeConfig::GetAttributeEffectClass(enum class EPlayerAttributeType AttributeType, TSubclassOf<class UGameplayEffect>* EffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("PlayerAttributeConfig", "GetAttributeEffectClass");

	Params::UPlayerAttributeConfig_GetAttributeEffectClass_Params Parms{};

	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EffectClass != nullptr)
		*EffectClass = Parms.EffectClass;

	return Parms.ReturnValue;

}


// Function Valhalla.PlayerAttributeConfig.GetAttributeConfigData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EPlayerAttributeType    AttributeType                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PlayerAttributeConfigDataAttributeConfigData                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerAttributeConfig::GetAttributeConfigData(enum class EPlayerAttributeType AttributeType, struct Valhalla_PlayerAttributeConfigData* AttributeConfigData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("PlayerAttributeConfig", "GetAttributeConfigData");

	Params::UPlayerAttributeConfig_GetAttributeConfigData_Params Parms{};

	Parms.AttributeType = AttributeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AttributeConfigData != nullptr)
		*AttributeConfigData = std::move(Parms.AttributeConfigData);

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerCameraManager
// (Actor)

class UClass* AValPlayerCameraManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerCameraManager");

	return Clss;
}


// ValPlayerCameraManager Valhalla.Default__ValPlayerCameraManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerCameraManager* AValPlayerCameraManager::GetDefaultObj()
{
	static class AValPlayerCameraManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerCameraManager*>(AValPlayerCameraManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerCameraManager.RemoveAllModifiers
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerCameraManager::RemoveAllModifiers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerCameraManager", "RemoveAllModifiers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerCameraManager.GetCameraAimViewPoint
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          OutCamLoc                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         OutCamRot                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AValPlayerCameraManager::GetCameraAimViewPoint(struct CoreUObject_Vector* OutCamLoc, struct CoreUObject_Rotator* OutCamRot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerCameraManager", "GetCameraAimViewPoint");

	Params::AValPlayerCameraManager_GetCameraAimViewPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutCamLoc != nullptr)
		*OutCamLoc = std::move(Parms.OutCamLoc);

	if (OutCamRot != nullptr)
		*OutCamRot = std::move(Parms.OutCamRot);

}


// Class Valhalla.ValPlayerControllerBase
// (Actor, PlayerController)

class UClass* AValPlayerControllerBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerControllerBase");

	return Clss;
}


// ValPlayerControllerBase Valhalla.Default__ValPlayerControllerBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerControllerBase* AValPlayerControllerBase::GetDefaultObj()
{
	static class AValPlayerControllerBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerControllerBase*>(AValPlayerControllerBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerControllerBase.ServerValidateIdToken
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      ProductUserId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      JsonWebToken                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::ServerValidateIdToken(const class FString& ProductUserId, const class FString& JsonWebToken)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "ServerValidateIdToken");

	Params::AValPlayerControllerBase_ServerValidateIdToken_Params Parms{};

	Parms.ProductUserId = ProductUserId;
	Parms.JsonWebToken = JsonWebToken;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.OnTeamChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::OnTeamChanged(int32 OldTeamId, int32 NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "OnTeamChanged");

	Params::AValPlayerControllerBase_OnTeamChanged_Params Parms{};

	Parms.OldTeamId = OldTeamId;
	Parms.NewTeamId = NewTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.OnInventoryCacheUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::OnInventoryCacheUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "OnInventoryCacheUpdated");

	Params::AValPlayerControllerBase_OnInventoryCacheUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.GetValSettingsSubsystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValSettingsSubsystem*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSettingsSubsystem* AValPlayerControllerBase::GetValSettingsSubsystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "GetValSettingsSubsystem");

	Params::AValPlayerControllerBase_GetValSettingsSubsystem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerControllerBase.GetValPlayerInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* AValPlayerControllerBase::GetValPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "GetValPlayerInventory");

	Params::AValPlayerControllerBase_GetValPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerControllerBase.GetValPlayerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValPlayerInfo*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInfo* AValPlayerControllerBase::GetValPlayerInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "GetValPlayerInfo");

	Params::AValPlayerControllerBase_GetValPlayerInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerControllerBase.GetInventoryCount
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerControllerBase::GetInventoryCount(int32& ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "GetInventoryCount");

	Params::AValPlayerControllerBase_GetInventoryCount_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerControllerBase.ClientRequestIdToken
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerControllerBase::ClientRequestIdToken()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "ClientRequestIdToken");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.ClientNotifyOpponentDisconnected
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerControllerBase::ClientNotifyOpponentDisconnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "ClientNotifyOpponentDisconnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.BindInventoryCountUpdated
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Event                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::BindInventoryCountUpdated(int32& ItemId, FDelegateProperty_& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "BindInventoryCountUpdated");

	Params::AValPlayerControllerBase_BindInventoryCountUpdated_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.AntiCheatServerMessageToClient
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint8>                      Data                                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::AntiCheatServerMessageToClient(TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "AntiCheatServerMessageToClient");

	Params::AValPlayerControllerBase_AntiCheatServerMessageToClient_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerControllerBase.AntiCheatClientMessageToServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<uint8>                      Data                                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerControllerBase::AntiCheatClientMessageToServer(TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerControllerBase", "AntiCheatClientMessageToServer");

	Params::AValPlayerControllerBase_AntiCheatClientMessageToServer_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerController
// (Actor, PlayerController)

class UClass* AValPlayerController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerController");

	return Clss;
}


// ValPlayerController Valhalla.Default__ValPlayerController
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerController* AValPlayerController::GetDefaultObj()
{
	static class AValPlayerController* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerController*>(AValPlayerController::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerController.UpdateViewMods
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// class AValCharacter*               OldChar                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               NewChar                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::UpdateViewMods(class AValCharacter* OldChar, class AValCharacter* NewChar)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateViewMods");

	Params::AValPlayerController_UpdateViewMods_Params Parms{};

	Parms.OldChar = OldChar;
	Parms.NewChar = NewChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdatePinpoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::UpdatePinpoints(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdatePinpoints");

	Params::AValPlayerController_UpdatePinpoints_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateMinimapLineTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::UpdateMinimapLineTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateMinimapLineTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateClosestRespawnPoint
// (Final, Native, Public)
// Parameters:

void AValPlayerController::UpdateClosestRespawnPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateClosestRespawnPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateClosestNeutralExtractionPoint
// (Final, Native, Public)
// Parameters:

void AValPlayerController::UpdateClosestNeutralExtractionPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateClosestNeutralExtractionPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateClosestFriendlyExtractionPoint
// (Final, Native, Public)
// Parameters:

void AValPlayerController::UpdateClosestFriendlyExtractionPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateClosestFriendlyExtractionPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateClosestEvacPoint
// (Final, Native, Public)
// Parameters:

void AValPlayerController::UpdateClosestEvacPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateClosestEvacPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.UpdateClosestEnemyExtractionPoint
// (Final, Native, Public)
// Parameters:

void AValPlayerController::UpdateClosestEnemyExtractionPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "UpdateClosestEnemyExtractionPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.TravelToEndOfMatch
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bWipeInventory                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::TravelToEndOfMatch(bool bWipeInventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "TravelToEndOfMatch");

	Params::AValPlayerController_TravelToEndOfMatch_Params Parms{};

	Parms.bWipeInventory = bWipeInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleZoomLevel
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ToggleZoomLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleZoomLevel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleVoiceChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::ToggleVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleVoiceChat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleShop
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ToggleShop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleShop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleSettingsScreen
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ToggleSettingsScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleSettingsScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleBoostMenu
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ToggleBoostMenu()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleBoostMenu");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ToggleBackpack
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ToggleBackpack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ToggleBackpack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.StopCameraLookAtTarget
// (Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::StopCameraLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "StopCameraLookAtTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.StartSpectating
// (Native, Public)
// Parameters:
// bool                               bIsNoClip                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::StartSpectating(bool bIsNoClip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "StartSpectating");

	Params::AValPlayerController_StartSpectating_Params Parms{};

	Parms.bIsNoClip = bIsNoClip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.StartCameraLookAtTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::StartCameraLookAtTarget(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "StartCameraLookAtTarget");

	Params::AValPlayerController_StartCameraLookAtTarget_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SpectatePlayerDeferred
// (Final, Native, Public)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SpectatePlayerDeferred(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SpectatePlayerDeferred");

	Params::AValPlayerController_SpectatePlayerDeferred_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.Spectate
// (Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::Spectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "Spectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SpawnGrenadeIndicator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToTrack                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SpawnGrenadeIndicator(class AActor* ActorToTrack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SpawnGrenadeIndicator");

	Params::AValPlayerController_SpawnGrenadeIndicator_Params Parms{};

	Parms.ActorToTrack = ActorToTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SpawnDamageIndicator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToTrack                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SpawnDamageIndicator(class AActor* ActorToTrack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SpawnDamageIndicator");

	Params::AValPlayerController_SpawnDamageIndicator_Params Parms{};

	Parms.ActorToTrack = ActorToTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ShowScoreboard
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ShowScoreboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ShowScoreboard");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ShowMap
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ShowMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ShowMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ShowFabricator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValVendingMachine*          Fabricator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ShowFabricator(class AValVendingMachine* Fabricator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ShowFabricator");

	Params::AValPlayerController_ShowFabricator_Params Parms{};

	Parms.Fabricator = Fabricator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetUsedEnemyPortal
// (Final, Native, Public)
// Parameters:

void AValPlayerController::SetUsedEnemyPortal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetUsedEnemyPortal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetTutorialCompleted
// (Final, Native, Public)
// Parameters:
// bool                               bCompletedTutorial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SetTutorialCompleted(bool bCompletedTutorial)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetTutorialCompleted");

	Params::AValPlayerController_SetTutorialCompleted_Params Parms{};

	Parms.bCompletedTutorial = bCompletedTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetPlayerMutedLocal
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSetMuted                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SetPlayerMutedLocal(const struct CoreUObject_Guid& PlayerUuid, bool bSetMuted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetPlayerMutedLocal");

	Params::AValPlayerController_SetPlayerMutedLocal_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;
	Parms.bSetMuted = bSetMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetPinpointAreasFromGeometry
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct SlateCore_Geometry>  Areas                                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::SetPinpointAreasFromGeometry(TArray<struct SlateCore_Geometry>& Areas)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetPinpointAreasFromGeometry");

	Params::AValPlayerController_SetPinpointAreasFromGeometry_Params Parms{};

	Parms.Areas = Areas;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetPinpointAreas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct CoreUObject_Box2D>   Areas                                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::SetPinpointAreas(TArray<struct CoreUObject_Box2D>& Areas)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetPinpointAreas");

	Params::AValPlayerController_SetPinpointAreas_Params Parms{};

	Parms.Areas = Areas;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetCachedPawn
// (Final, Native, Public)
// Parameters:
// class APawn*                       NewValue                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::SetCachedPawn(class APawn* NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetCachedPawn");

	Params::AValPlayerController_SetCachedPawn_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SetAllNonTeamMembersMuted
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::SetAllNonTeamMembersMuted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SetAllNonTeamMembersMuted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerVoteMission
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                              MissionIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerVoteMission(int32 MissionIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerVoteMission");

	Params::AValPlayerController_ServerVoteMission_Params Parms{};

	Parms.MissionIndex = MissionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerUpdateSafeVoiceConsentStatus
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                               bConfirmConsent                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerUpdateSafeVoiceConsentStatus(bool bConfirmConsent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerUpdateSafeVoiceConsentStatus");

	Params::AValPlayerController_ServerUpdateSafeVoiceConsentStatus_Params Parms{};

	Parms.bConfirmConsent = bConfirmConsent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerUpdatePartyFillChoice
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// bool                               bFillParty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsPartyLeader                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerUpdatePartyFillChoice(bool bFillParty, bool bIsPartyLeader)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerUpdatePartyFillChoice");

	Params::AValPlayerController_ServerUpdatePartyFillChoice_Params Parms{};

	Parms.bFillParty = bFillParty;
	Parms.bIsPartyLeader = bIsPartyLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerTravelToEndOfMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               bWipeInventory                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerTravelToEndOfMatch(bool bWipeInventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerTravelToEndOfMatch");

	Params::AValPlayerController_ServerTravelToEndOfMatch_Params Parms{};

	Parms.bWipeInventory = bWipeInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerSpectatePrevTeammate
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:

void AValPlayerController::ServerSpectatePrevTeammate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerSpectatePrevTeammate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerSpectateNextTeammate
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:

void AValPlayerController::ServerSpectateNextTeammate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerSpectateNextTeammate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerSpectateNext
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                              Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerSpectateNext(int32 Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerSpectateNext");

	Params::AValPlayerController_ServerSpectateNext_Params Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerSetDeployablePreview
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerSetDeployablePreview(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerSetDeployablePreview");

	Params::AValPlayerController_ServerSetDeployablePreview_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerSendHideNameplateInMatchLobby
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               bHideNameplateInMatchLobby                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerSendHideNameplateInMatchLobby(bool bHideNameplateInMatchLobby)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerSendHideNameplateInMatchLobby");

	Params::AValPlayerController_ServerSendHideNameplateInMatchLobby_Params Parms{};

	Parms.bHideNameplateInMatchLobby = bHideNameplateInMatchLobby;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerRequestStartSpectating
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:

void AValPlayerController::ServerRequestStartSpectating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerRequestStartSpectating");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerRequestMatchVivoxVoiceToken
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// bool                               bIsTeamToken                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerRequestMatchVivoxVoiceToken(bool bIsTeamToken)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerRequestMatchVivoxVoiceToken");

	Params::AValPlayerController_ServerRequestMatchVivoxVoiceToken_Params Parms{};

	Parms.bIsTeamToken = bIsTeamToken;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerRequestChangeQueuedLoadout
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    RequestedClass                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ServerRequestChangeQueuedLoadout(struct GameplayTags_GameplayTag& RequestedClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerRequestChangeQueuedLoadout");

	Params::AValPlayerController_ServerRequestChangeQueuedLoadout_Params Parms{};

	Parms.RequestedClass = RequestedClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerReportPlayersToVivoxSafeVoice
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class FString                      ReportType                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReportReason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsTeamReport                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct CoreUObject_Guid>    PlayerUuidsToReport                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ServerReportPlayersToVivoxSafeVoice(const class FString& ReportType, const class FString& ReportReason, bool bIsTeamReport, TArray<struct CoreUObject_Guid>& PlayerUuidsToReport)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerReportPlayersToVivoxSafeVoice");

	Params::AValPlayerController_ServerReportPlayersToVivoxSafeVoice_Params Parms{};

	Parms.ReportType = ReportType;
	Parms.ReportReason = ReportReason;
	Parms.bIsTeamReport = bIsTeamReport;
	Parms.PlayerUuidsToReport = PlayerUuidsToReport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerProcessPredictedHits
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              PredictionID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_LaggedProjectileHit>PredictedHits                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValPlayerController::ServerProcessPredictedHits(int32 PredictionID, TArray<struct Valhalla_LaggedProjectileHit>& PredictedHits)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerProcessPredictedHits");

	Params::AValPlayerController_ServerProcessPredictedHits_Params Parms{};

	Parms.PredictionID = PredictionID;
	Parms.PredictedHits = PredictedHits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerLeaveMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AValPlayerController::ServerLeaveMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerLeaveMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ServerGetSafeVoiceConsentStatus
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValPlayerController::ServerGetSafeVoiceConsentStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ServerGetSafeVoiceConsentStatus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.SaveMatchSummaryData
// (Native, Public)
// Parameters:

void AValPlayerController::SaveMatchSummaryData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "SaveMatchSummaryData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RespawnPlayerDeferred
// (Final, Native, Public)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFindRespawnPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::RespawnPlayerDeferred(float Time, bool bFindRespawnPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RespawnPlayerDeferred");

	Params::AValPlayerController_RespawnPlayerDeferred_Params Parms{};

	Parms.Time = Time;
	Parms.bFindRespawnPoint = bFindRespawnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ResetCharacter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValPlayerController::ResetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ResetCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RequestRespawn
// (Final, Native, Public)
// Parameters:
// bool                               bFindRespawnPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::RequestRespawn(bool bFindRespawnPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RequestRespawn");

	Params::AValPlayerController_RequestRespawn_Params Parms{};

	Parms.bFindRespawnPoint = bFindRespawnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RequestJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::RequestJump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RequestJump");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RequestChangeQueuedLoadout
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    RequestedClass                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::RequestChangeQueuedLoadout(struct GameplayTags_GameplayTag& RequestedClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RequestChangeQueuedLoadout");

	Params::AValPlayerController_RequestChangeQueuedLoadout_Params Parms{};

	Parms.RequestedClass = RequestedClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ReportPlayersFromPositionalChatToSafeVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::ReportPlayersFromPositionalChatToSafeVoice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ReportPlayersFromPositionalChatToSafeVoice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RemovePinpoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      PinpointTarget                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::RemovePinpoint(class AActor* PinpointTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RemovePinpoint");

	Params::AValPlayerController_RemovePinpoint_Params Parms{};

	Parms.PinpointTarget = PinpointTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.RemoveAllPinpoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::RemoveAllPinpoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "RemoveAllPinpoints");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ReinitializeActivityInstance
// (Native, Public, HasOutParams)
// Parameters:
// class UValActivityAsset*           Asset                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bUnlocked                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct RallyHereIntegration_RH_ItemInventoryActivityItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ReinitializeActivityInstance(class UValActivityAsset* Asset, bool bUnlocked, struct RallyHereIntegration_RH_ItemInventory& ActivityItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ReinitializeActivityInstance");

	Params::AValPlayerController_ReinitializeActivityInstance_Params Parms{};

	Parms.Asset = Asset;
	Parms.bUnlocked = bUnlocked;
	Parms.ActivityItem = ActivityItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ReaddAllPinpoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::ReaddAllPinpoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ReaddAllPinpoints");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.PushToTalkReleased
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AValPlayerController::PushToTalkReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "PushToTalkReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.PushToTalkPressed
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AValPlayerController::PushToTalkPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "PushToTalkPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.PushPreventFlushPressedKeys
// (Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::PushPreventFlushPressedKeys()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "PushPreventFlushPressedKeys");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.PopPreventFlushPressedKeys
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bPopAll                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::PopPreventFlushPressedKeys(bool bPopAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "PopPreventFlushPressedKeys");

	Params::AValPlayerController_PopPreventFlushPressedKeys_Params Parms{};

	Parms.bPopAll = bPopAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnWindowFocusChanged
// (Final, Native, Protected)
// Parameters:
// bool                               bIsFocused                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::OnWindowFocusChanged(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnWindowFocusChanged");

	Params::AValPlayerController_OnWindowFocusChanged_Params Parms{};

	Parms.bIsFocused = bIsFocused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnViewTargetDealtDamage
// (Final, Native, Public)
// Parameters:
// struct Valhalla_DamageData         Data                                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::OnViewTargetDealtDamage(const struct Valhalla_DamageData& Data, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnViewTargetDealtDamage");

	Params::AValPlayerController_OnViewTargetDealtDamage_Params Parms{};

	Parms.Data = Data;
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnTravelFailsafeTimer
// (Final, Native, Protected)
// Parameters:

void AValPlayerController::OnTravelFailsafeTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnTravelFailsafeTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnSpectateStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValPlayerController::OnSpectateStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnSpectateStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnSpectateEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValPlayerController::OnSpectateEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnSpectateEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnSpectatedPlayerExtracted
// (Native, Public)
// Parameters:

void AValPlayerController::OnSpectatedPlayerExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnSpectatedPlayerExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnSpectatedPlayerDied
// (Native, Public)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Char                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::OnSpectatedPlayerDied(float TimeToRespawn, class AValCharacter* Char)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnSpectatedPlayerDied");

	Params::AValPlayerController_OnSpectatedPlayerDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Char = Char;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnShopRerolled
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::OnShopRerolled(TArray<struct Valhalla_ContractData>& ShopContracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnShopRerolled");

	Params::AValPlayerController_OnShopRerolled_Params Parms{};

	Parms.ShopContracts = ShopContracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnShopInitialized
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        ShopRerollTime                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::OnShopInitialized(TArray<struct Valhalla_ContractData>& ShopContracts, const struct CoreUObject_DateTime& ShopRerollTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnShopInitialized");

	Params::AValPlayerController_OnShopInitialized_Params Parms{};

	Parms.ShopContracts = ShopContracts;
	Parms.ShopRerollTime = ShopRerollTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_VendorManager
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_VendorManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_VendorManager");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_ShopManager
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_ShopManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_ShopManager");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_SelectedMission
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_SelectedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_SelectedMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_IsPlayerVIP
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_IsPlayerVIP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_IsPlayerVIP");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_InventoryManager
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_InventoryManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_InventoryManager");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_InteractableMissionLocations
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_InteractableMissionLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_InteractableMissionLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_GeneratedMissions
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_GeneratedMissions()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_GeneratedMissions");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_ExperienceManager
// (Native, Public)
// Parameters:

void AValPlayerController::OnRep_ExperienceManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_ExperienceManager");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_CurrencyInventory
// (Final, Native, Protected)
// Parameters:

void AValPlayerController::OnRep_CurrencyInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_CurrencyInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnRep_ActivityPlayer
// (Native, Protected)
// Parameters:

void AValPlayerController::OnRep_ActivityPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnRep_ActivityPlayer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnPlayerFinalized
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                FinalizedPlayer                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPlayerFinalized                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::OnPlayerFinalized(class APlayerState* FinalizedPlayer, bool bPlayerFinalized)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnPlayerFinalized");

	Params::AValPlayerController_OnPlayerFinalized_Params Parms{};

	Parms.FinalizedPlayer = FinalizedPlayer;
	Parms.bPlayerFinalized = bPlayerFinalized;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.OnInteractableInventoryLoaded
// (Native, Protected)
// Parameters:

void AValPlayerController::OnInteractableInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "OnInteractableInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.NotifyPredictedFireRejected
// (Net, NetReliable, Native, Event, Protected, NetClient, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayAbility>RejectedWeapon                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::NotifyPredictedFireRejected(TSubclassOf<class UGameplayAbility> RejectedWeapon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "NotifyPredictedFireRejected");

	Params::AValPlayerController_NotifyPredictedFireRejected_Params Parms{};

	Parms.RejectedWeapon = RejectedWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.NotifyPlayerExitedBlockedForceField
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::NotifyPlayerExitedBlockedForceField()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "NotifyPlayerExitedBlockedForceField");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.NotifyPlayerEnteredBlockedForceField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ESecurityLevel          SecurityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::NotifyPlayerEnteredBlockedForceField(enum class ESecurityLevel SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "NotifyPlayerEnteredBlockedForceField");

	Params::AValPlayerController_NotifyPlayerEnteredBlockedForceField_Params Parms{};

	Parms.SecurityLevel = SecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.NoClipSpectate
// (Native, Public)
// Parameters:
// bool                               bEnable                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::NoClipSpectate(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "NoClipSpectate");

	Params::AValPlayerController_NoClipSpectate_Params Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ModifyInShopTagOnPlayer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               ShouldGiveTag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ModifyInShopTagOnPlayer(bool ShouldGiveTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ModifyInShopTagOnPlayer");

	Params::AValPlayerController_ModifyInShopTagOnPlayer_Params Parms{};

	Parms.ShouldGiveTag = ShouldGiveTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.LeaveMatch
// (Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::LeaveMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "LeaveMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.K2_GetPinpointTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AValPlayerController::K2_GetPinpointTargets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "K2_GetPinpointTargets");

	Params::AValPlayerController_K2_GetPinpointTargets_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.IsCheatSpectatingPlayerBots
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::IsCheatSpectatingPlayerBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "IsCheatSpectatingPlayerBots");

	Params::AValPlayerController_IsCheatSpectatingPlayerBots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.IsCheatSpectatingHunterBots
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::IsCheatSpectatingHunterBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "IsCheatSpectatingHunterBots");

	Params::AValPlayerController_IsCheatSpectatingHunterBots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.IsCheatSpectating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::IsCheatSpectating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "IsCheatSpectating");

	Params::AValPlayerController_IsCheatSpectating_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.IsBindingReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EBindingType            Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::IsBindingReady(enum class EBindingType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "IsBindingReady");

	Params::AValPlayerController_IsBindingReady_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.InvalidatePredictedProjectile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValProjectile*              Projectile                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::InvalidatePredictedProjectile(class AValProjectile* Projectile)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "InvalidatePredictedProjectile");

	Params::AValPlayerController_InvalidatePredictedProjectile_Params Parms{};

	Parms.Projectile = Projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.InvalidateAllPredictedProjectiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::InvalidateAllPredictedProjectiles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "InvalidateAllPredictedProjectiles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.InterruptDeferredSpectate
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::InterruptDeferredSpectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "InterruptDeferredSpectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.InterruptDeferredRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::InterruptDeferredRespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "InterruptDeferredRespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.HideScoreboard
// (Final, Native, Public)
// Parameters:

void AValPlayerController::HideScoreboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "HideScoreboard");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.HideMap
// (Final, Native, Public)
// Parameters:

void AValPlayerController::HideMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "HideMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.HideFabricator
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::HideFabricator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "HideFabricator");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.HideDeathcrate
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::HideDeathcrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "HideDeathcrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.HasVIPStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::HasVIPStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "HasVIPStatus");

	Params::AValPlayerController_HasVIPStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetVIPTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerController::GetVIPTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetVIPTimeRemaining");

	Params::AValPlayerController_GetVIPTimeRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetVendorManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValVendorManager*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValVendorManager* AValPlayerController::GetVendorManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetVendorManager");

	Params::AValPlayerController_GetVendorManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetValCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValPlayerController::GetValCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetValCharacter");

	Params::AValPlayerController_GetValCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetUsedEnemyPortal
// (Final, Native, Public)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetUsedEnemyPortal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetUsedEnemyPortal");

	Params::AValPlayerController_GetUsedEnemyPortal_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetUnassignedShopContracts
// (Native, Public, HasOutParams)
// Parameters:
// TArray<struct Valhalla_PlayerContract>PlayerContracts                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ContractShop>UnassignedShopContracts                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerController::GetUnassignedShopContracts(TArray<struct Valhalla_PlayerContract>* PlayerContracts, TArray<struct Valhalla_ContractShop>* UnassignedShopContracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetUnassignedShopContracts");

	Params::AValPlayerController_GetUnassignedShopContracts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerContracts != nullptr)
		*PlayerContracts = std::move(Parms.PlayerContracts);

	if (UnassignedShopContracts != nullptr)
		*UnassignedShopContracts = std::move(Parms.UnassignedShopContracts);

}


// Function Valhalla.ValPlayerController.GetTeamState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValTeamState*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValTeamState* AValPlayerController::GetTeamState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetTeamState");

	Params::AValPlayerController_GetTeamState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetShopManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValShopManager*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValShopManager* AValPlayerController::GetShopManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetShopManager");

	Params::AValPlayerController_GetShopManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetSelectedMission
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_MissionSequence    OutMission                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetSelectedMission(int32 ActivityId, struct Valhalla_MissionSequence* OutMission)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetSelectedMission");

	Params::AValPlayerController_GetSelectedMission_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutMission != nullptr)
		*OutMission = std::move(Parms.OutMission);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetReadyBindings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<enum class EBindingType>    Types                                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerController::GetReadyBindings(TArray<enum class EBindingType>* Types)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetReadyBindings");

	Params::AValPlayerController_GetReadyBindings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Types != nullptr)
		*Types = std::move(Parms.Types);

}


// Function Valhalla.ValPlayerController.GetProjectileSleepTime
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerController::GetProjectileSleepTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetProjectileSleepTime");

	Params::AValPlayerController_GetProjectileSleepTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetPredictionTime
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerController::GetPredictionTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPredictionTime");

	Params::AValPlayerController_GetPredictionTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetPredictionLeeway
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerController::GetPredictionLeeway()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPredictionLeeway");

	Params::AValPlayerController_GetPredictionLeeway_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetPlayerMissionProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValInteractableMission*     InteractableMission                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerController::GetPlayerMissionProgress(class AValInteractableMission* InteractableMission)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPlayerMissionProgress");

	Params::AValPlayerController_GetPlayerMissionProgress_Params Parms{};

	Parms.InteractableMission = InteractableMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetPlayerCurrencies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_CurrencyData>PlayerCurrency                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerController::GetPlayerCurrencies(TArray<struct Valhalla_CurrencyData>* PlayerCurrency)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPlayerCurrencies");

	Params::AValPlayerController_GetPlayerCurrencies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerCurrency != nullptr)
		*PlayerCurrency = std::move(Parms.PlayerCurrency);

}


// Function Valhalla.ValPlayerController.GetPlayerActivityById
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValActivityPlayerInstance*  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValActivityPlayerInstance* AValPlayerController::GetPlayerActivityById(int64 ActivityId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPlayerActivityById");

	Params::AValPlayerController_GetPlayerActivityById_Params Parms{};

	Parms.ActivityId = ActivityId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetPlayerActivities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValActivityPlayerInstance*>OutActivities                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               bIgnoreOwnership                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::GetPlayerActivities(TArray<class UValActivityPlayerInstance*>* OutActivities, bool bIgnoreOwnership)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPlayerActivities");

	Params::AValPlayerController_GetPlayerActivities_Params Parms{};

	Parms.bIgnoreOwnership = bIgnoreOwnership;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActivities != nullptr)
		*OutActivities = std::move(Parms.OutActivities);

}


// Function Valhalla.ValPlayerController.GetPinpoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct Valhalla_Pinpoint>   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_Pinpoint> AValPlayerController::GetPinpoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetPinpoints");

	Params::AValPlayerController_GetPinpoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetIsPlayerMuted
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Guid            PlayerUuid                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsPlayerFound                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetIsPlayerMuted(const struct CoreUObject_Guid& PlayerUuid, bool* bIsPlayerFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetIsPlayerMuted");

	Params::AValPlayerController_GetIsPlayerMuted_Params Parms{};

	Parms.PlayerUuid = PlayerUuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (bIsPlayerFound != nullptr)
		*bIsPlayerFound = Parms.bIsPlayerFound;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetInventoryManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValInventoryManager*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValInventoryManager* AValPlayerController::GetInventoryManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetInventoryManager");

	Params::AValPlayerController_GetInventoryManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetInteractableMissionLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_MissionLocations>OutLocations                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerController::GetInteractableMissionLocations(TArray<struct Valhalla_MissionLocations>* OutLocations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetInteractableMissionLocations");

	Params::AValPlayerController_GetInteractableMissionLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLocations != nullptr)
		*OutLocations = std::move(Parms.OutLocations);

}


// Function Valhalla.ValPlayerController.GetGeneratedMissions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_MissionSequence>OutMissions                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerController::GetGeneratedMissions(TArray<struct Valhalla_MissionSequence>* OutMissions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetGeneratedMissions");

	Params::AValPlayerController_GetGeneratedMissions_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutMissions != nullptr)
		*OutMissions = std::move(Parms.OutMissions);

}


// Function Valhalla.ValPlayerController.GetExperienceManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValExperienceManager*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValExperienceManager* AValPlayerController::GetExperienceManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetExperienceManager");

	Params::AValPlayerController_GetExperienceManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetDeployablePreviewSynced
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetDeployablePreviewSynced()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetDeployablePreviewSynced");

	Params::AValPlayerController_GetDeployablePreviewSynced_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetDeployablePreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetDeployablePreview()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetDeployablePreview");

	Params::AValPlayerController_GetDeployablePreview_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetCrouchMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController::GetCrouchMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetCrouchMode");

	Params::AValPlayerController_GetCrouchMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetContractShop
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValContractShop*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValContractShop* AValPlayerController::GetContractShop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetContractShop");

	Params::AValPlayerController_GetContractShop_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetContractManager
// (Final, Native, Public)
// Parameters:
// class UValContractManager*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValContractManager* AValPlayerController::GetContractManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetContractManager");

	Params::AValPlayerController_GetContractManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetCachedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* AValPlayerController::GetCachedPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetCachedPawn");

	Params::AValPlayerController_GetCachedPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetActivityPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValActivityPlayer*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValActivityPlayer* AValPlayerController::GetActivityPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetActivityPlayer");

	Params::AValPlayerController_GetActivityPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController.GetActiveMissionTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerGameplayTags                                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void AValPlayerController::GetActiveMissionTags(struct GameplayTags_GameplayTagContainer* GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GetActiveMissionTags");

	Params::AValPlayerController_GetActiveMissionTags_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (GameplayTags != nullptr)
		*GameplayTags = std::move(Parms.GameplayTags);

}


// Function Valhalla.ValPlayerController.GameStateSet
// (Final, Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::GameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "GameStateSet");

	Params::AValPlayerController_GameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ForceUpdateLights
// (Final, Exec, Native, Public)
// Parameters:

void AValPlayerController::ForceUpdateLights()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ForceUpdateLights");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.EndSpectating
// (Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::EndSpectating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "EndSpectating");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.DestroyGrenadeIndicator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TrackedActor                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::DestroyGrenadeIndicator(class AActor* TrackedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "DestroyGrenadeIndicator");

	Params::AValPlayerController_DestroyGrenadeIndicator_Params Parms{};

	Parms.TrackedActor = TrackedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.DebugToggleShowPlayerStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EGameStatType           Stat                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::DebugToggleShowPlayerStat(enum class EGameStatType Stat, bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "DebugToggleShowPlayerStat");

	Params::AValPlayerController_DebugToggleShowPlayerStat_Params Parms{};

	Parms.Stat = Stat;
	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.DebugShowPlayerStats
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValPlayerController::DebugShowPlayerStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "DebugShowPlayerStats");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValPlayerController.DebugHidePlayerStats
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValPlayerController::DebugHidePlayerStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "DebugHidePlayerStats");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValPlayerController.CTAShowTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::CTAShowTimer(float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "CTAShowTimer");

	Params::AValPlayerController_CTAShowTimer_Params Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.CTAShowText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::CTAShowText(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "CTAShowText");

	Params::AValPlayerController_CTAShowText_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientViewInteractableInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_InventorySlot>Inventory                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      ContainingActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientViewInteractableInventory(TArray<struct Valhalla_InventorySlot>& Inventory, class AActor* ContainingActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientViewInteractableInventory");

	Params::AValPlayerController_ClientViewInteractableInventory_Params Parms{};

	Parms.Inventory = Inventory;
	Parms.ContainingActor = ContainingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientUpdateInteractableInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_InventorySlot>Inventory                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientUpdateInteractableInventory(TArray<struct Valhalla_InventorySlot>& Inventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientUpdateInteractableInventory");

	Params::AValPlayerController_ClientUpdateInteractableInventory_Params Parms{};

	Parms.Inventory = Inventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientUpdateActivityProgressGameInstance
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ProgressValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientUpdateActivityProgressGameInstance(int64 ActivityId, int32 ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientUpdateActivityProgressGameInstance");

	Params::AValPlayerController_ClientUpdateActivityProgressGameInstance_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.ProgressValue = ProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientUpdateActivityProgress
// (Net, Native, Event, Public, NetClient)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ProgressValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientUpdateActivityProgress(int64 ActivityId, int32 ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientUpdateActivityProgress");

	Params::AValPlayerController_ClientUpdateActivityProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.ProgressValue = ProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientUpdateActivityOwnership
// (Net, Native, Event, Public, NetClient)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bOwnership                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientUpdateActivityOwnership(int64 ActivityId, bool bOwnership)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientUpdateActivityOwnership");

	Params::AValPlayerController_ClientUpdateActivityOwnership_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.bOwnership = bOwnership;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientTravelToEndOfMatch
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientTravelToEndOfMatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientTravelToEndOfMatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientToggleVoiceChatOnCharacterDied
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bCharacterDead                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientToggleVoiceChatOnCharacterDied(bool bCharacterDead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientToggleVoiceChatOnCharacterDied");

	Params::AValPlayerController_ClientToggleVoiceChatOnCharacterDied_Params Parms{};

	Parms.bCharacterDead = bCharacterDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientToggleTeamCount
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bShowTeamCount                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientToggleTeamCount(bool bShowTeamCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientToggleTeamCount");

	Params::AValPlayerController_ClientToggleTeamCount_Params Parms{};

	Parms.bShowTeamCount = bShowTeamCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientTeleportAlert
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class ETeleportAlert          Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientTeleportAlert(enum class ETeleportAlert Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientTeleportAlert");

	Params::AValPlayerController_ClientTeleportAlert_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientSyncInventory
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientSyncInventory(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientSyncInventory");

	Params::AValPlayerController_ClientSyncInventory_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientStopCameraLookAtTarget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientStopCameraLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientStopCameraLookAtTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientStartSpectating
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bIsNoClip                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientStartSpectating(bool bIsNoClip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientStartSpectating");

	Params::AValPlayerController_ClientStartSpectating_Params Parms{};

	Parms.bIsNoClip = bIsNoClip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientStartCameraLookAtTarget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientStartCameraLookAtTarget(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientStartCameraLookAtTarget");

	Params::AValPlayerController_ClientStartCameraLookAtTarget_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientShowFabricator
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AValVendingMachine*          Fabricator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientShowFabricator(class AValVendingMachine* Fabricator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientShowFabricator");

	Params::AValPlayerController_ClientShowFabricator_Params Parms{};

	Parms.Fabricator = Fabricator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientShowAbilityFailReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientShowAbilityFailReason(const struct GameplayTags_GameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientShowAbilityFailReason");

	Params::AValPlayerController_ClientShowAbilityFailReason_Params Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientSetTutorialCompleted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bCompletedTutorial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientSetTutorialCompleted(bool bCompletedTutorial)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientSetTutorialCompleted");

	Params::AValPlayerController_ClientSetTutorialCompleted_Params Parms{};

	Parms.bCompletedTutorial = bCompletedTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientSetGeneratedMissions
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_MissionSequence>GeneratedMissions                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientSetGeneratedMissions(TArray<struct Valhalla_MissionSequence>& GeneratedMissions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientSetGeneratedMissions");

	Params::AValPlayerController_ClientSetGeneratedMissions_Params Parms{};

	Parms.GeneratedMissions = GeneratedMissions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientSendActivityProgress
// (Net, Native, Event, Public, NetClient)
// Parameters:
// int64                              ActivityId                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ProgressValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientSendActivityProgress(int64 ActivityId, int32 ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientSendActivityProgress");

	Params::AValPlayerController_ClientSendActivityProgress_Params Parms{};

	Parms.ActivityId = ActivityId;
	Parms.ProgressValue = ProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientRequestPartyFillChoice
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientRequestPartyFillChoice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientRequestPartyFillChoice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnSafeVoiceConsentStatus
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bConfirmConsent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnSafeVoiceConsentStatus(bool bConfirmConsent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnSafeVoiceConsentStatus");

	Params::AValPlayerController_ClientOnSafeVoiceConsentStatus_Params Parms{};

	Parms.bConfirmConsent = bConfirmConsent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnMissionSequenceCompleted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UValActivityTracker*         SequenceTracker                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MissionCompleted                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSuccess                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnMissionSequenceCompleted(class UValActivityTracker* SequenceTracker, int32 MissionCompleted, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnMissionSequenceCompleted");

	Params::AValPlayerController_ClientOnMissionSequenceCompleted_Params Parms{};

	Parms.SequenceTracker = SequenceTracker;
	Parms.MissionCompleted = MissionCompleted;
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnMatchVivoxToken
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                               bIsTeamToken                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_VivoxJoinData      JoinData                                                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnMatchVivoxToken(bool bIsTeamToken, struct Valhalla_VivoxJoinData& JoinData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnMatchVivoxToken");

	Params::AValPlayerController_ClientOnMatchVivoxToken_Params Parms{};

	Parms.bIsTeamToken = bIsTeamToken;
	Parms.JoinData = JoinData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnInterruptedDepositPod
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientOnInterruptedDepositPod()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnInterruptedDepositPod");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnDealtDamage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct Valhalla_DamageData         Data                                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnDealtDamage(const struct Valhalla_DamageData& Data, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnDealtDamage");

	Params::AValPlayerController_ClientOnDealtDamage_Params Parms{};

	Parms.Data = Data;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnActivityTimerStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              TimeUntilFailure                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnActivityTimerStarted(int32 TimeUntilFailure)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnActivityTimerStarted");

	Params::AValPlayerController_ClientOnActivityTimerStarted_Params Parms{};

	Parms.TimeUntilFailure = TimeUntilFailure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientOnAccoladeProgressed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UValActivityAsset*           Asset                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientOnAccoladeProgressed(class UValActivityAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientOnAccoladeProgressed");

	Params::AValPlayerController_ClientOnAccoladeProgressed_Params Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyTeamFlagNeedsReturning
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientNotifyTeamFlagNeedsReturning()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyTeamFlagNeedsReturning");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyShopRerolled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyShopRerolled(TArray<struct Valhalla_ContractData>& ShopContracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyShopRerolled");

	Params::AValPlayerController_ClientNotifyShopRerolled_Params Parms{};

	Parms.ShopContracts = ShopContracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyShopInitialized
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// TArray<struct Valhalla_ContractData>ShopContracts                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_DateTime        ShopRerollTime                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyShopInitialized(TArray<struct Valhalla_ContractData>& ShopContracts, const struct CoreUObject_DateTime& ShopRerollTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyShopInitialized");

	Params::AValPlayerController_ClientNotifyShopInitialized_Params Parms{};

	Parms.ShopContracts = ShopContracts;
	Parms.ShopRerollTime = ShopRerollTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifySecurityLevelHealthUpdated
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientNotifySecurityLevelHealthUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifySecurityLevelHealthUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyQueuedLoadoutResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bSuccess                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyQueuedLoadoutResult(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyQueuedLoadoutResult");

	Params::AValPlayerController_ClientNotifyQueuedLoadoutResult_Params Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyObjectiveTerminalUsed
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                              XpReward                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESecurityLevel          PreviousSecurityLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyObjectiveTerminalUsed(int32 XpReward, enum class ESecurityLevel PreviousSecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyObjectiveTerminalUsed");

	Params::AValPlayerController_ClientNotifyObjectiveTerminalUsed_Params Parms{};

	Parms.XpReward = XpReward;
	Parms.PreviousSecurityLevel = PreviousSecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyMissionProgress
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                              XpReward                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        MissionProgressMsg                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIsTeammateMission                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyMissionProgress(int32 XpReward, class FText& MissionProgressMsg, bool bIsTeammateMission)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyMissionProgress");

	Params::AValPlayerController_ClientNotifyMissionProgress_Params Parms{};

	Parms.XpReward = XpReward;
	Parms.MissionProgressMsg = MissionProgressMsg;
	Parms.bIsTeammateMission = bIsTeammateMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyKill
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EAwardType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPlayerState*             VictimState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bTeamWipe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyKill(enum class EAwardType Type, class AValPlayerState* VictimState, bool bTeamWipe)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyKill");

	Params::AValPlayerController_ClientNotifyKill_Params Parms{};

	Parms.Type = Type;
	Parms.VictimState = VictimState;
	Parms.bTeamWipe = bTeamWipe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyInsufficientBackpackSpace
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientNotifyInsufficientBackpackSpace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyInsufficientBackpackSpace");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyDogTagFound
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bIsFriendly                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Split                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EPlayerLevelType        LevelType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyDogTagFound(bool bIsFriendly, int32 Split, struct Valhalla_InventoryItem& InventoryItem, enum class EPlayerLevelType LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyDogTagFound");

	Params::AValPlayerController_ClientNotifyDogTagFound_Params Parms{};

	Parms.bIsFriendly = bIsFriendly;
	Parms.Split = Split;
	Parms.InventoryItem = InventoryItem;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyDeath
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct Valhalla_DeathData          Data                                                             (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyDeath(struct Valhalla_DeathData& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyDeath");

	Params::AValPlayerController_ClientNotifyDeath_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyContractTaskProgress
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Progress                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyContractTaskProgress(const class FString& ContractId, class FName TaskId, int32 Progress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyContractTaskProgress");

	Params::AValPlayerController_ClientNotifyContractTaskProgress_Params Parms{};

	Parms.ContractId = ContractId;
	Parms.TaskId = TaskId;
	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyContractTaskComplete
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        TaskId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyContractTaskComplete(const class FString& ContractId, class FName TaskId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyContractTaskComplete");

	Params::AValPlayerController_ClientNotifyContractTaskComplete_Params Parms{};

	Parms.ContractId = ContractId;
	Parms.TaskId = TaskId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyContractsInitialized
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_ContractData>Contracts                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyContractsInitialized(TArray<struct Valhalla_ContractData>& Contracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyContractsInitialized");

	Params::AValPlayerController_ClientNotifyContractsInitialized_Params Parms{};

	Parms.Contracts = Contracts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyContractComplete
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      ContractId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyContractComplete(const class FString& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyContractComplete");

	Params::AValPlayerController_ClientNotifyContractComplete_Params Parms{};

	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyBanned
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientNotifyBanned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyBanned");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNotifyAward
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EAwardType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientNotifyAward(enum class EAwardType Type, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNotifyAward");

	Params::AValPlayerController_ClientNotifyAward_Params Parms{};

	Parms.Type = Type;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientNoClipSpectate
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValPlayerController::ClientNoClipSpectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientNoClipSpectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientMissionReport
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                        MissionId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              WinningTeam                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientMissionReport(class FName MissionId, int32 WinningTeam)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientMissionReport");

	Params::AValPlayerController_ClientMissionReport_Params Parms{};

	Parms.MissionId = MissionId;
	Parms.WinningTeam = WinningTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientHideFabricator
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientHideFabricator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientHideFabricator");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientHideDeathcrate
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientHideDeathcrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientHideDeathcrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientEndSpectating
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientEndSpectating()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientEndSpectating");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientDrawDebugSphere
// (Net, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable, Const)
// Parameters:
// struct CoreUObject_Vector          Center                                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Color           Color                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientDrawDebugSphere(struct CoreUObject_Vector& Center, float Radius, struct CoreUObject_Color& Color, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientDrawDebugSphere");

	Params::AValPlayerController_ClientDrawDebugSphere_Params Parms{};

	Parms.Center = Center;
	Parms.Radius = Radius;
	Parms.Color = Color;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientDrawDebugLine
// (Net, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable, Const)
// Parameters:
// struct CoreUObject_Vector          Start                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          End                                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Color           Color                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientDrawDebugLine(struct CoreUObject_Vector& Start, struct CoreUObject_Vector& End, struct CoreUObject_Color& Color, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientDrawDebugLine");

	Params::AValPlayerController_ClientDrawDebugLine_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Color = Color;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientDrawDebugCapsule
// (Net, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable, Const)
// Parameters:
// struct CoreUObject_Transform       Transform                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Color           Color                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientDrawDebugCapsule(struct CoreUObject_Transform& Transform, float Radius, float HalfHeight, struct CoreUObject_Color& Color, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientDrawDebugCapsule");

	Params::AValPlayerController_ClientDrawDebugCapsule_Params Parms{};

	Parms.Transform = Transform;
	Parms.Radius = Radius;
	Parms.HalfHeight = HalfHeight;
	Parms.Color = Color;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientDrawDebugBox
// (Net, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable, Const)
// Parameters:
// struct CoreUObject_Transform       Transform                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Extent                                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Color           Color                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientDrawDebugBox(struct CoreUObject_Transform& Transform, struct CoreUObject_Vector& Extent, struct CoreUObject_Color& Color, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientDrawDebugBox");

	Params::AValPlayerController_ClientDrawDebugBox_Params Parms{};

	Parms.Transform = Transform;
	Parms.Extent = Extent;
	Parms.Color = Color;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientDebugShowAIOnMinimap
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// class ATeamState*                  AITeam                                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientDebugShowAIOnMinimap(class ATeamState* AITeam)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientDebugShowAIOnMinimap");

	Params::AValPlayerController_ClientDebugShowAIOnMinimap_Params Parms{};

	Parms.AITeam = AITeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientConfirmDeployablePreview
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValPlayerController::ClientConfirmDeployablePreview()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientConfirmDeployablePreview");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientCloseBackpack
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:

void AValPlayerController::ClientCloseBackpack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientCloseBackpack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientClearActivityUnlocks
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AValPlayerController::ClientClearActivityUnlocks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientClearActivityUnlocks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientCacheStartingXP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              StartingXp                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientCacheStartingXP(int32 StartingXp, const struct GameplayTags_GameplayTag& LevelType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientCacheStartingXP");

	Params::AValPlayerController_ClientCacheStartingXP_Params Parms{};

	Parms.StartingXp = StartingXp;
	Parms.LevelType = LevelType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientAddUnlockedItems
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<int32>                      UnlockedItems                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientAddUnlockedItems(TArray<int32>& UnlockedItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientAddUnlockedItems");

	Params::AValPlayerController_ClientAddUnlockedItems_Params Parms{};

	Parms.UnlockedItems = UnlockedItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientAddPlayerXP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              XpToAdd                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerExperienceSource XPSource                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientAddPlayerXP(int32 XpToAdd, const struct GameplayTags_GameplayTag& LevelType, enum class EPlayerExperienceSource XPSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientAddPlayerXP");

	Params::AValPlayerController_ClientAddPlayerXP_Params Parms{};

	Parms.XpToAdd = XpToAdd;
	Parms.LevelType = LevelType;
	Parms.XPSource = XPSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientAddActivityReward
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>ActivityRewards                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerController::ClientAddActivityReward(int32 ItemId, TArray<struct Valhalla_InventoryItem>& ActivityRewards)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientAddActivityReward");

	Params::AValPlayerController_ClientAddActivityReward_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.ActivityRewards = ActivityRewards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClientActivityPlayerIsReady
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AValActivityPlayer*          ActivityPlayer                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClientActivityPlayerIsReady(class AValActivityPlayer* ActivityPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClientActivityPlayerIsReady");

	Params::AValPlayerController_ClientActivityPlayerIsReady_Params Parms{};

	Parms.ActivityPlayer = ActivityPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClearInvalidActionMappings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::ClearInvalidActionMappings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClearInvalidActionMappings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClearCameraLookAtTargetAndSpectate
// (Final, Native, Public)
// Parameters:

void AValPlayerController::ClearCameraLookAtTargetAndSpectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClearCameraLookAtTargetAndSpectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ClearCameraLookAtTargetAndRespawn
// (Final, Native, Public)
// Parameters:
// bool                               bFindRespawnPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ClearCameraLookAtTargetAndRespawn(bool bFindRespawnPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ClearCameraLookAtTargetAndRespawn");

	Params::AValPlayerController_ClearCameraLookAtTargetAndRespawn_Params Parms{};

	Parms.bFindRespawnPoint = bFindRespawnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.CheckInventoryManagement
// (Native, Protected)
// Parameters:
// class AGameModeBase*               GameModeClass                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::CheckInventoryManagement(class AGameModeBase* GameModeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "CheckInventoryManagement");

	Params::AValPlayerController_CheckInventoryManagement_Params Parms{};

	Parms.GameModeClass = GameModeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.CalltoActionManagerReady
// (Final, Native, Public)
// Parameters:
// class AValCallToActionManager*     Manager                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::CalltoActionManagerReady(class AValCallToActionManager* Manager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "CalltoActionManagerReady");

	Params::AValPlayerController_CalltoActionManagerReady_Params Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ApplyInputSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController::ApplyInputSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ApplyInputSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.AddPredictedProjectile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValProjectile*              Projectile                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::AddPredictedProjectile(class AValProjectile* Projectile)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "AddPredictedProjectile");

	Params::AValPlayerController_AddPredictedProjectile_Params Parms{};

	Parms.Projectile = Projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.AddPinpoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      PinpointTarget                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::AddPinpoint(class AActor* PinpointTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "AddPinpoint");

	Params::AValPlayerController_AddPinpoint_Params Parms{};

	Parms.PinpointTarget = PinpointTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.AddActiveMissionTag
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    GameplayTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::AddActiveMissionTag(const struct GameplayTags_GameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "AddActiveMissionTag");

	Params::AValPlayerController_AddActiveMissionTag_Params Parms{};

	Parms.GameplayTag = GameplayTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController.ActivityPlayerIsReady
// (Native, Public, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            OwningRHGuid                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController::ActivityPlayerIsReady(const struct CoreUObject_Guid& OwningRHGuid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController", "ActivityPlayerIsReady");

	Params::AValPlayerController_ActivityPlayerIsReady_Params Parms{};

	Parms.OwningRHGuid = OwningRHGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerController_City
// (Actor, PlayerController)

class UClass* AValPlayerController_City::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerController_City");

	return Clss;
}


// ValPlayerController_City Valhalla.Default__ValPlayerController_City
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerController_City* AValPlayerController_City::GetDefaultObj()
{
	static class AValPlayerController_City* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerController_City*>(AValPlayerController_City::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerController_City.ToggleThirdPerson
// (Native, Protected)
// Parameters:

void AValPlayerController_City::ToggleThirdPerson()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "ToggleThirdPerson");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.SetVendor_Deprecated
// (Final, Native, Public)
// Parameters:
// enum class EVendorType             Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerController_City::SetVendor_Deprecated(enum class EVendorType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "SetVendor_Deprecated");

	Params::AValPlayerController_City_SetVendor_Deprecated_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.ServerRequestInventoryUpdate
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValPlayerController_City::ServerRequestInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "ServerRequestInventoryUpdate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.RequestInventoryUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerController_City::RequestInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "RequestInventoryUpdate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.OnRep_Vendor
// (Native, Protected)
// Parameters:

void AValPlayerController_City::OnRep_Vendor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "OnRep_Vendor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.OnRep_RemoteLobbyQueueId
// (Final, Native, Protected)
// Parameters:

void AValPlayerController_City::OnRep_RemoteLobbyQueueId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "OnRep_RemoteLobbyQueueId");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.IsRemoteLobbyConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController_City::IsRemoteLobbyConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "IsRemoteLobbyConnected");

	Params::AValPlayerController_City_IsRemoteLobbyConnected_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController_City.IsLocalLobbyConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerController_City::IsLocalLobbyConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "IsLocalLobbyConnected");

	Params::AValPlayerController_City_IsLocalLobbyConnected_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController_City.InteractPressed
// (Native, Protected)
// Parameters:

void AValPlayerController_City::InteractPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "InteractPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerController_City.GetVendor_Deprecated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EVendorType             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EVendorType AValPlayerController_City::GetVendor_Deprecated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "GetVendor_Deprecated");

	Params::AValPlayerController_City_GetVendor_Deprecated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController_City.GetRemoteLobbyQueueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AValPlayerController_City::GetRemoteLobbyQueueId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "GetRemoteLobbyQueueId");

	Params::AValPlayerController_City_GetRemoteLobbyQueueId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerController_City.GetPreviewManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValPreviewManager*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPreviewManager* AValPlayerController_City::GetPreviewManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerController_City", "GetPreviewManager");

	Params::AValPlayerController_City_GetPreviewManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerInfo
// (None)

class UClass* UValPlayerInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerInfo");

	return Clss;
}


// ValPlayerInfo Valhalla.Default__ValPlayerInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerInfo* UValPlayerInfo::GetDefaultObj()
{
	static class UValPlayerInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerInfo*>(UValPlayerInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerInfo.GetValSettingsSubsystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValSettingsSubsystem*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSettingsSubsystem* UValPlayerInfo::GetValSettingsSubsystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerInfo", "GetValSettingsSubsystem");

	Params::UValPlayerInfo_GetValSettingsSubsystem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerInfo.GetValPlayerInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* UValPlayerInfo::GetValPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerInfo", "GetValPlayerInventory");

	Params::UValPlayerInfo_GetValPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerInfoSubsystem
// (None)

class UClass* UValPlayerInfoSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerInfoSubsystem");

	return Clss;
}


// ValPlayerInfoSubsystem Valhalla.Default__ValPlayerInfoSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerInfoSubsystem* UValPlayerInfoSubsystem::GetDefaultObj()
{
	static class UValPlayerInfoSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerInfoSubsystem*>(UValPlayerInfoSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerInventory
// (None)

class UClass* UValPlayerInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerInventory");

	return Clss;
}


// ValPlayerInventory Valhalla.Default__ValPlayerInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerInventory* UValPlayerInventory::GetDefaultObj()
{
	static class UValPlayerInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerInventory*>(UValPlayerInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTaskComponent
// (None)

class UClass* UValPlayerJoinTaskComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTaskComponent");

	return Clss;
}


// ValPlayerJoinTaskComponent Valhalla.Default__ValPlayerJoinTaskComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTaskComponent* UValPlayerJoinTaskComponent::GetDefaultObj()
{
	static class UValPlayerJoinTaskComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTaskComponent*>(UValPlayerJoinTaskComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerJoinTaskComponent.ValidatePlayerJoin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*           NewPlayer                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerJoinTaskComponent::ValidatePlayerJoin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "ValidatePlayerJoin");

	Params::UValPlayerJoinTaskComponent_ValidatePlayerJoin_Params Parms{};

	Parms.NewPlayer = NewPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerJoinTaskComponent.NewPlayerStarting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*           NewPlayer                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerJoinTaskComponent::NewPlayerStarting(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "NewPlayerStarting");

	Params::UValPlayerJoinTaskComponent_NewPlayerStarting_Params Parms{};

	Parms.NewPlayer = NewPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerJoinTaskComponent.HasJoinTasksForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*           Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerJoinTaskComponent::HasJoinTasksForPlayer(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "HasJoinTasksForPlayer");

	Params::UValPlayerJoinTaskComponent_HasJoinTasksForPlayer_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerJoinTaskComponent.HasAnyJoinTasks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerJoinTaskComponent::HasAnyJoinTasks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "HasAnyJoinTasks");

	Params::UValPlayerJoinTaskComponent_HasAnyJoinTasks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerJoinTaskComponent.CreateValidationTasksForPlayer
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class APlayerController*           NewPlayer                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValPlayerJoinTask*>  OutValidationTasks                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValPlayerJoinTaskComponent::CreateValidationTasksForPlayer(class APlayerController* NewPlayer, TArray<class UValPlayerJoinTask*>* OutValidationTasks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "CreateValidationTasksForPlayer");

	Params::UValPlayerJoinTaskComponent_CreateValidationTasksForPlayer_Params Parms{};

	Parms.NewPlayer = NewPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutValidationTasks != nullptr)
		*OutValidationTasks = std::move(Parms.OutValidationTasks);

}


// Function Valhalla.ValPlayerJoinTaskComponent.CreateTask
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UValPlayerJoinTask>TaskClass                                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*           Owner                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValPlayerJoinTask*>  TaskContainer                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UValPlayerJoinTask*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerJoinTask* UValPlayerJoinTaskComponent::CreateTask(TSubclassOf<class UValPlayerJoinTask> TaskClass, class APlayerController* Owner, TArray<class UValPlayerJoinTask*>* TaskContainer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "CreateTask");

	Params::UValPlayerJoinTaskComponent_CreateTask_Params Parms{};

	Parms.TaskClass = TaskClass;
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TaskContainer != nullptr)
		*TaskContainer = std::move(Parms.TaskContainer);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerJoinTaskComponent.CreateJoinTasksForPlayer
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class APlayerController*           NewPlayer                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValPlayerJoinTask*>  OutTasks                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValPlayerJoinTaskComponent::CreateJoinTasksForPlayer(class APlayerController* NewPlayer, TArray<class UValPlayerJoinTask*>* OutTasks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "CreateJoinTasksForPlayer");

	Params::UValPlayerJoinTaskComponent_CreateJoinTasksForPlayer_Params Parms{};

	Parms.NewPlayer = NewPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTasks != nullptr)
		*OutTasks = std::move(Parms.OutTasks);

}


// Function Valhalla.ValPlayerJoinTaskComponent.AbandonJoinTasksForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*           AbandonPlayer                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlayerJoinTaskComponent::AbandonJoinTasksForPlayer(class APlayerController* AbandonPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTaskComponent", "AbandonJoinTasksForPlayer");

	Params::UValPlayerJoinTaskComponent_AbandonJoinTasksForPlayer_Params Parms{};

	Parms.AbandonPlayer = AbandonPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerJoinTaskComponent_Lobby
// (None)

class UClass* UValPlayerJoinTaskComponent_Lobby::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTaskComponent_Lobby");

	return Clss;
}


// ValPlayerJoinTaskComponent_Lobby Valhalla.Default__ValPlayerJoinTaskComponent_Lobby
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTaskComponent_Lobby* UValPlayerJoinTaskComponent_Lobby::GetDefaultObj()
{
	static class UValPlayerJoinTaskComponent_Lobby* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTaskComponent_Lobby*>(UValPlayerJoinTaskComponent_Lobby::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask
// (None)

class UClass* UValPlayerJoinTask::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask");

	return Clss;
}


// ValPlayerJoinTask Valhalla.Default__ValPlayerJoinTask
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask* UValPlayerJoinTask::GetDefaultObj()
{
	static class UValPlayerJoinTask* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask*>(UValPlayerJoinTask::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_DailyContract
// (None)

class UClass* UValPlayerJoinTask_DailyContract::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_DailyContract");

	return Clss;
}


// ValPlayerJoinTask_DailyContract Valhalla.Default__ValPlayerJoinTask_DailyContract
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_DailyContract* UValPlayerJoinTask_DailyContract::GetDefaultObj()
{
	static class UValPlayerJoinTask_DailyContract* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_DailyContract*>(UValPlayerJoinTask_DailyContract::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerJoinTask_DailyContract.OnLootAssetsLoaded
// (Native, Protected)
// Parameters:

void UValPlayerJoinTask_DailyContract::OnLootAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_DailyContract", "OnLootAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerJoinTask_DailyContract.OnInventoryManagerReady
// (Native, Protected)
// Parameters:
// class AValInventoryManager*        InventoryManager                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlayerJoinTask_DailyContract::OnInventoryManagerReady(class AValInventoryManager* InventoryManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_DailyContract", "OnInventoryManagerReady");

	Params::UValPlayerJoinTask_DailyContract_OnInventoryManagerReady_Params Parms{};

	Parms.InventoryManager = InventoryManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerJoinTask_DailyContract.OnActivityPlayerReady
// (Native, Protected)
// Parameters:
// class AValActivityPlayer*          ActivityPlayer                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlayerJoinTask_DailyContract::OnActivityPlayerReady(class AValActivityPlayer* ActivityPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_DailyContract", "OnActivityPlayerReady");

	Params::UValPlayerJoinTask_DailyContract_OnActivityPlayerReady_Params Parms{};

	Parms.ActivityPlayer = ActivityPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerJoinTask_SVConsent
// (None)

class UClass* UValPlayerJoinTask_SVConsent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_SVConsent");

	return Clss;
}


// ValPlayerJoinTask_SVConsent Valhalla.Default__ValPlayerJoinTask_SVConsent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_SVConsent* UValPlayerJoinTask_SVConsent::GetDefaultObj()
{
	static class UValPlayerJoinTask_SVConsent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_SVConsent*>(UValPlayerJoinTask_SVConsent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerProperty
// (None)

class UClass* IValPlayerProperty::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerProperty");

	return Clss;
}


// ValPlayerProperty Valhalla.Default__ValPlayerProperty
// (Public, ClassDefaultObject, ArchetypeObject)

class IValPlayerProperty* IValPlayerProperty::GetDefaultObj()
{
	static class IValPlayerProperty* Default = nullptr;

	if (!Default)
		Default = static_cast<IValPlayerProperty*>(IValPlayerProperty::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerProperty.GetBaseValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValPlayerProperty::GetBaseValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerProperty", "GetBaseValue");

	Params::IValPlayerProperty_GetBaseValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerStart
// (Actor)

class UClass* AValPlayerStart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerStart");

	return Clss;
}


// ValPlayerStart Valhalla.Default__ValPlayerStart
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerStart* AValPlayerStart::GetDefaultObj()
{
	static class AValPlayerStart* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerStart*>(AValPlayerStart::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerStateBase
// (Actor)

class UClass* AValPlayerStateBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerStateBase");

	return Clss;
}


// ValPlayerStateBase Valhalla.Default__ValPlayerStateBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerStateBase* AValPlayerStateBase::GetDefaultObj()
{
	static class AValPlayerStateBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerStateBase*>(AValPlayerStateBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerStateBase.SetPlayerJoinTasksComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bComplete                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerStateBase::SetPlayerJoinTasksComplete(bool bComplete)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "SetPlayerJoinTasksComplete");

	Params::AValPlayerStateBase_SetPlayerJoinTasksComplete_Params Parms{};

	Parms.bComplete = bComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.SetFinalizedPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bFinalized                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerStateBase::SetFinalizedPlayer(bool bFinalized)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "SetFinalizedPlayer");

	Params::AValPlayerStateBase_SetFinalizedPlayer_Params Parms{};

	Parms.bFinalized = bFinalized;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.OnTeamChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerStateBase::OnTeamChanged(int32 OldTeamId, int32 NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "OnTeamChanged");

	Params::AValPlayerStateBase_OnTeamChanged_Params Parms{};

	Parms.OldTeamId = OldTeamId;
	Parms.NewTeamId = NewTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.OnRep_TeamId
// (Final, Native, Private)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerStateBase::OnRep_TeamId(int32 OldTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "OnRep_TeamId");

	Params::AValPlayerStateBase_OnRep_TeamId_Params Parms{};

	Parms.OldTeamId = OldTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.OnRep_JoinTasksCompleted
// (Final, Native, Protected)
// Parameters:

void AValPlayerStateBase::OnRep_JoinTasksCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "OnRep_JoinTasksCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.OnRep_FinalizedPlayer
// (Final, Native, Protected)
// Parameters:

void AValPlayerStateBase::OnRep_FinalizedPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "OnRep_FinalizedPlayer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerStateBase.HasPlayerCompletedJoinTasks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerStateBase::HasPlayerCompletedJoinTasks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "HasPlayerCompletedJoinTasks");

	Params::AValPlayerStateBase_HasPlayerCompletedJoinTasks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerStateBase.HasFinalizedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerStateBase::HasFinalizedPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerStateBase", "HasFinalizedPlayer");

	Params::AValPlayerStateBase_HasFinalizedPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerState
// (Actor)

class UClass* AValPlayerState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerState");

	return Clss;
}


// ValPlayerState Valhalla.Default__ValPlayerState
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerState* AValPlayerState::GetDefaultObj()
{
	static class AValPlayerState* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerState*>(AValPlayerState::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerState.UpdateActiveObjectiveTerminalLocations
// (Final, Native, Public)
// Parameters:

void AValPlayerState::UpdateActiveObjectiveTerminalLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "UpdateActiveObjectiveTerminalLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SpawnWaypoint_Client
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Rotation                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class FName                        UILabel                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VisibilityDistSq                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SpawnWaypoint_Client(struct CoreUObject_Vector& Location, struct CoreUObject_Rotator& Rotation, class FName& UILabel, float VisibilityDistSq)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SpawnWaypoint_Client");

	Params::AValPlayerState_SpawnWaypoint_Client_Params Parms{};

	Parms.Location = Location;
	Parms.Rotation = Rotation;
	Parms.UILabel = UILabel;
	Parms.VisibilityDistSq = VisibilityDistSq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetWaypointDebugText_Client
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class FName                        UILabel                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DebugText                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetWaypointDebugText_Client(class FName& UILabel, const class FString& DebugText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetWaypointDebugText_Client");

	Params::AValPlayerState_SetWaypointDebugText_Client_Params Parms{};

	Parms.UILabel = UILabel;
	Parms.DebugText = DebugText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetWaypointColor_Client
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable)
// Parameters:
// class FName                        UILabel                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_LinearColor     Color                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetWaypointColor_Client(class FName& UILabel, struct CoreUObject_LinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetWaypointColor_Client");

	Params::AValPlayerState_SetWaypointColor_Client_Params Parms{};

	Parms.UILabel = UILabel;
	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetReviveBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValReviveBeacon*            ReviveBeacon                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetReviveBeacon(class AValReviveBeacon* ReviveBeacon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetReviveBeacon");

	Params::AValPlayerState_SetReviveBeacon_Params Parms{};

	Parms.ReviveBeacon = ReviveBeacon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetRevealed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetRevealed(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetRevealed");

	Params::AValPlayerState_SetRevealed_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetMaxPendingLoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetMaxPendingLoot(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetMaxPendingLoot");

	Params::AValPlayerState_SetMaxPendingLoot_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetMapLineDestination
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct Valhalla_ValCachedObjectivePingObjectivePing                                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AValPlayerState::SetMapLineDestination(struct Valhalla_ValCachedObjectivePing* ObjectivePing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetMapLineDestination");

	Params::AValPlayerState_SetMapLineDestination_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ObjectivePing != nullptr)
		*ObjectivePing = std::move(Parms.ObjectivePing);

}


// Function Valhalla.ValPlayerState.SetIsRemoteControlled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetIsRemoteControlled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetIsRemoteControlled");

	Params::AValPlayerState_SetIsRemoteControlled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetIsABotBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewIsABot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetIsABotBP(bool bNewIsABot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetIsABotBP");

	Params::AValPlayerState_SetIsABotBP_Params Parms{};

	Parms.bNewIsABot = bNewIsABot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetForceHideNameplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetForceHideNameplate(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetForceHideNameplate");

	Params::AValPlayerState_SetForceHideNameplate_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetEliminated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::SetEliminated(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetEliminated");

	Params::AValPlayerState_SetEliminated_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SetActiveObjectiveTerminalLocations
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct CoreUObject_Vector2f>NewLocations                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::SetActiveObjectiveTerminalLocations(TArray<struct CoreUObject_Vector2f>* NewLocations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetActiveObjectiveTerminalLocations");

	Params::AValPlayerState_SetActiveObjectiveTerminalLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NewLocations != nullptr)
		*NewLocations = std::move(Parms.NewLocations);

}


// Function Valhalla.ValPlayerState.SetActiveDungeonPortals
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AValDungeonPortal*>   DungeonPortals                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::SetActiveDungeonPortals(TArray<class AValDungeonPortal*>* DungeonPortals)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SetActiveDungeonPortals");

	Params::AValPlayerState_SetActiveDungeonPortals_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DungeonPortals != nullptr)
		*DungeonPortals = std::move(Parms.DungeonPortals);

}


// Function Valhalla.ValPlayerState.ServerSetMapLineDestination
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct Valhalla_ValCachedObjectivePingObjectivePing                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValPlayerState::ServerSetMapLineDestination(const struct Valhalla_ValCachedObjectivePing& ObjectivePing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ServerSetMapLineDestination");

	Params::AValPlayerState_ServerSetMapLineDestination_Params Parms{};

	Parms.ObjectivePing = ObjectivePing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ServerRequestReady
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:

void AValPlayerState::ServerRequestReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ServerRequestReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SaveDeathRecap
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_DeathData          DeathData                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AValPlayerState::SaveDeathRecap(struct Valhalla_DeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SaveDeathRecap");

	Params::AValPlayerState_SaveDeathRecap_Params Parms{};

	Parms.DeathData = DeathData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.SaveDeathDamage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerState::SaveDeathDamage(struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "SaveDeathDamage");

	Params::AValPlayerState_SaveDeathDamage_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ReviveAtReviveBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState::ReviveAtReviveBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ReviveAtReviveBeacon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.RevealLegendaryArtifact
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::RevealLegendaryArtifact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "RevealLegendaryArtifact");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ResetWaypoints_Client
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:

void AValPlayerState::ResetWaypoints_Client()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ResetWaypoints_Client");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.RepPortalLocations
// (Final, Native, Public)
// Parameters:

void AValPlayerState::RepPortalLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "RepPortalLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.RemovePendingInventory
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_PendingItem        Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerState::RemovePendingInventory(struct Valhalla_PendingItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "RemovePendingInventory");

	Params::AValPlayerState_RemovePendingInventory_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ProjectileRejected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EProjectileRejection    Rejection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::ProjectileRejected(enum class EProjectileRejection Rejection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ProjectileRejected");

	Params::AValPlayerState_ProjectileRejected_Params Parms{};

	Parms.Rejection = Rejection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.ProjectileHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::ProjectileHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ProjectileHit");

	Params::AValPlayerState_ProjectileHit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.ProjectileFired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::ProjectileFired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ProjectileFired");

	Params::AValPlayerState_ProjectileFired_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.OnTeamMembersChanged
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::OnTeamMembersChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnTeamMembersChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_TimeOfDeath
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_TimeOfDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_TimeOfDeath");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Streaks
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Streaks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Streaks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Stats
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Stats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Stats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_SpectateMode
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_SpectateMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_SpectateMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_SecurityLevelAccessUpdated
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::OnRep_SecurityLevelAccessUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_SecurityLevelAccessUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ReviveInProgress
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_ReviveInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ReviveInProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ReviveBeacon
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_ReviveBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ReviveBeacon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_RevivableTeammates
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::OnRep_RevivableTeammates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_RevivableTeammates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Revealed
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Revealed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Revealed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_PlayerAccountLevel
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_PlayerAccountLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_PlayerAccountLevel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_PendingLoadoutChanges
// (Native, Protected)
// Parameters:

void AValPlayerState::OnRep_PendingLoadoutChanges()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_PendingLoadoutChanges");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_PendingLegendaryInventory
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_PendingLegendaryInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_PendingLegendaryInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_PendingInventory
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_PendingInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_PendingInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_MatchCurrency
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_MatchCurrency()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_MatchCurrency");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_MapLineDestination
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_MapLineDestination()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_MapLineDestination");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_LivesRemaining
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_LivesRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_LivesRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Killer
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Killer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Killer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_IsGrantingItems
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_IsGrantingItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_IsGrantingItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ForceHideNameplate
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_ForceHideNameplate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ForceHideNameplate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_EntryCost
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_EntryCost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_EntryCost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Eliminated
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Eliminated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Eliminated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_DungeonPortalsUpdated
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::OnRep_DungeonPortalsUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_DungeonPortalsUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_DeathRecap
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_DeathRecap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_DeathRecap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_DeathDamage
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_DeathDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_DeathDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_Dead
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_Dead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_Dead");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ColorIndex
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_ColorIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ColorIndex");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ClientReady
// (Final, Native, Public)
// Parameters:

void AValPlayerState::OnRep_ClientReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ClientReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.OnRep_ActiveObjectiveTerminalLocations
// (Final, Native, Protected)
// Parameters:

void AValPlayerState::OnRep_ActiveObjectiveTerminalLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "OnRep_ActiveObjectiveTerminalLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.IsWaitingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsWaitingTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsWaitingTeam");

	Params::AValPlayerState_IsWaitingTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsReviveInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsReviveInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsReviveInProgress");

	Params::AValPlayerState_IsReviveInProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsRevealed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsRevealed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsRevealed");

	Params::AValPlayerState_IsRevealed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsPlayerRevivable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValPlayerStateBase*         PlayerState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsPlayerRevivable(class AValPlayerStateBase* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsPlayerRevivable");

	Params::AValPlayerState_IsPlayerRevivable_Params Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsHazard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsHazard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsHazard");

	Params::AValPlayerState_IsHazard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsGrantingItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsGrantingItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsGrantingItems");

	Params::AValPlayerState_IsGrantingItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsEliminated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsEliminated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsEliminated");

	Params::AValPlayerState_IsEliminated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsDead
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsDead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsDead");

	Params::AValPlayerState_IsDead_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.IsABotPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               bExcludePlayerBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::IsABotPlayerState(bool bExcludePlayerBots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "IsABotPlayerState");

	Params::AValPlayerState_IsABotPlayerState_Params Parms{};

	Parms.bExcludePlayerBots = bExcludePlayerBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.HandlePhaseChange
// (Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    Phase                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::HandlePhaseChange(const struct GameplayTags_GameplayTag& Phase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "HandlePhaseChange");

	Params::AValPlayerState_HandlePhaseChange_Params Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.GetTimeOfDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetTimeOfDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetTimeOfDeath");

	Params::AValPlayerState_GetTimeOfDeath_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetStreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EGameStatType           Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetStreak(enum class EGameStatType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetStreak");

	Params::AValPlayerState_GetStreak_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EGameStatType           Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetStat(enum class EGameStatType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetStat");

	Params::AValPlayerState_GetStat_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetSpectateMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESpectateMode           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESpectateMode AValPlayerState::GetSpectateMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetSpectateMode");

	Params::AValPlayerState_GetSpectateMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetSecurityLevelAccess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESecurityLevel          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESecurityLevel AValPlayerState::GetSecurityLevelAccess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetSecurityLevelAccess");

	Params::AValPlayerState_GetSecurityLevelAccess_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetRevivesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetRevivesRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetRevivesRemaining");

	Params::AValPlayerState_GetRevivesRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetReviveBeacon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValReviveBeacon*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValReviveBeacon* AValPlayerState::GetReviveBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetReviveBeacon");

	Params::AValPlayerState_GetReviveBeacon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetRevivableTeammates
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValPlayerStateBase*> OutRevivableTeammates                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetRevivableTeammates(TArray<class AValPlayerStateBase*>* OutRevivableTeammates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetRevivableTeammates");

	Params::AValPlayerState_GetRevivableTeammates_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRevivableTeammates != nullptr)
		*OutRevivableTeammates = std::move(Parms.OutRevivableTeammates);

}


// Function Valhalla.ValPlayerState.GetRevivableTeammateCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetRevivableTeammateCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetRevivableTeammateCount");

	Params::AValPlayerState_GetRevivableTeammateCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetRarityCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetRarityCount(enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetRarityCount");

	Params::AValPlayerState_GetRarityCount_Params Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetProjectileAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetProjectileAccuracy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetProjectileAccuracy");

	Params::AValPlayerState_GetProjectileAccuracy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetPlayerAccountLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AValPlayerState::GetPlayerAccountLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetPlayerAccountLevel");

	Params::AValPlayerState_GetPlayerAccountLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetPing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetPing");

	Params::AValPlayerState_GetPing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetPendingLegendaryInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_PendingItem>Inventory                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetPendingLegendaryInventory(TArray<struct Valhalla_PendingItem>* Inventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetPendingLegendaryInventory");

	Params::AValPlayerState_GetPendingLegendaryInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);

}


// Function Valhalla.ValPlayerState.GetPendingInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_PendingItem>Inventory                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetPendingInventory(TArray<struct Valhalla_PendingItem>* Inventory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetPendingInventory");

	Params::AValPlayerState_GetPendingInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);

}


// Function Valhalla.ValPlayerState.GetPacketLossSliding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NumberOfAverages                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetPacketLossSliding(int32 NumberOfAverages)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetPacketLossSliding");

	Params::AValPlayerState_GetPacketLossSliding_Params Parms{};

	Parms.NumberOfAverages = NumberOfAverages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetMaxPendingLoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetMaxPendingLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetMaxPendingLoot");

	Params::AValPlayerState_GetMaxPendingLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetMaxPendingLegendaryLoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetMaxPendingLegendaryLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetMaxPendingLegendaryLoot");

	Params::AValPlayerState_GetMaxPendingLegendaryLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetMaxPacketLoss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetMaxPacketLoss()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetMaxPacketLoss");

	Params::AValPlayerState_GetMaxPacketLoss_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetMatchCurrency
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetMatchCurrency()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetMatchCurrency");

	Params::AValPlayerState_GetMatchCurrency_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetMapLineDestination
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_ValCachedObjectivePingReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ValCachedObjectivePing AValPlayerState::GetMapLineDestination()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetMapLineDestination");

	Params::AValPlayerState_GetMapLineDestination_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetLivesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetLivesRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetLivesRemaining");

	Params::AValPlayerState_GetLivesRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerState* AValPlayerState::GetKiller()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetKiller");

	Params::AValPlayerState_GetKiller_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetIsRemoteControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::GetIsRemoteControlled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetIsRemoteControlled");

	Params::AValPlayerState_GetIsRemoteControlled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetHighestRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValPlayerState::GetHighestRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetHighestRarity");

	Params::AValPlayerState_GetHighestRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetForceHideNameplate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::GetForceHideNameplate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetForceHideNameplate");

	Params::AValPlayerState_GetForceHideNameplate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetEntryCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetEntryCost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetEntryCost");

	Params::AValPlayerState_GetEntryCost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetDeathRecap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_DeathData          ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_DeathData AValPlayerState::GetDeathRecap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetDeathRecap");

	Params::AValPlayerState_GetDeathRecap_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetDeathDamageSummary
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_DamageSummaryData>Summary                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetDeathDamageSummary(TArray<struct Valhalla_DamageSummaryData>* Summary)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetDeathDamageSummary");

	Params::AValPlayerState_GetDeathDamageSummary_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Summary != nullptr)
		*Summary = std::move(Parms.Summary);

}


// Function Valhalla.ValPlayerState.GetDeathDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_DeathDamage        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct Valhalla_DeathDamage AValPlayerState::GetDeathDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetDeathDamage");

	Params::AValPlayerState_GetDeathDamage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetColorIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState::GetColorIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetColorIndex");

	Params::AValPlayerState_GetColorIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetClientReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState::GetClientReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetClientReady");

	Params::AValPlayerState_GetClientReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetCachedPacketLossSliding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState::GetCachedPacketLossSliding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetCachedPacketLossSliding");

	Params::AValPlayerState_GetCachedPacketLossSliding_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.GetActiveObjectiveTerminalLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct CoreUObject_Vector2f>Locations                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetActiveObjectiveTerminalLocations(TArray<struct CoreUObject_Vector2f>* Locations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetActiveObjectiveTerminalLocations");

	Params::AValPlayerState_GetActiveObjectiveTerminalLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);

}


// Function Valhalla.ValPlayerState.GetActiveDungeonPortalLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct CoreUObject_Vector2f>Locations                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState::GetActiveDungeonPortalLocations(TArray<struct CoreUObject_Vector2f>* Locations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "GetActiveDungeonPortalLocations");

	Params::AValPlayerState_GetActiveDungeonPortalLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);

}


// Function Valhalla.ValPlayerState.EmptyPendingLegendaryInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState::EmptyPendingLegendaryInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "EmptyPendingLegendaryInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.EmptyPendingInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState::EmptyPendingInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "EmptyPendingInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.DestroyReviveBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState::DestroyReviveBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "DestroyReviveBeacon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ClientSetHideNameplateInMatchLobby
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::ClientSetHideNameplateInMatchLobby(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ClientSetHideNameplateInMatchLobby");

	Params::AValPlayerState_ClientSetHideNameplateInMatchLobby_Params Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ClientSetEquippedItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ItemTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState::ClientSetEquippedItem(struct GameplayTags_GameplayTag& ItemTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ClientSetEquippedItem");

	Params::AValPlayerState_ClientSetEquippedItem_Params Parms{};

	Parms.ItemTag = ItemTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ClearDeathDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState::ClearDeathDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ClearDeathDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.ClearActiveObjectiveTerminalLocations
// (Final, Native, Public)
// Parameters:

void AValPlayerState::ClearActiveObjectiveTerminalLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "ClearActiveObjectiveTerminalLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState.BPGetPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* AValPlayerState::BPGetPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "BPGetPawn");

	Params::AValPlayerState_BPGetPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState.AddPendingInventory
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_PendingItem        Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerState::AddPendingInventory(struct Valhalla_PendingItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState", "AddPendingInventory");

	Params::AValPlayerState_AddPendingInventory_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerState_Frontier
// (Actor)

class UClass* AValPlayerState_Frontier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerState_Frontier");

	return Clss;
}


// ValPlayerState_Frontier Valhalla.Default__ValPlayerState_Frontier
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerState_Frontier* AValPlayerState_Frontier::GetDefaultObj()
{
	static class AValPlayerState_Frontier* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerState_Frontier*>(AValPlayerState_Frontier::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerState_Frontier.UseScanTower
// (Final, Native, Public)
// Parameters:
// bool                               bIsInitiatingPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::UseScanTower(bool bIsInitiatingPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "UseScanTower");

	Params::AValPlayerState_Frontier_UseScanTower_Params Parms{};

	Parms.bIsInitiatingPlayer = bIsInitiatingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.TogglePlayerSurviveTimer
// (Final, Native, Public)
// Parameters:
// bool                               bPause                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::TogglePlayerSurviveTimer(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "TogglePlayerSurviveTimer");

	Params::AValPlayerState_Frontier_TogglePlayerSurviveTimer_Params Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.StartSurviveTimer
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::StartSurviveTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "StartSurviveTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.StartMissionVotingTimer
// (Final, Native, Public)
// Parameters:
// float                              TimerDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::StartMissionVotingTimer(float TimerDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "StartMissionVotingTimer");

	Params::AValPlayerState_Frontier_StartMissionVotingTimer_Params Parms{};

	Parms.TimerDuration = TimerDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.SimulateAddEquippedItem
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                        ItemName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::SimulateAddEquippedItem(class FName& ItemName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "SimulateAddEquippedItem");

	Params::AValPlayerState_Frontier_SimulateAddEquippedItem_Params Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.SetQueuedLoadoutTag
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    NewTag                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::SetQueuedLoadoutTag(const struct GameplayTags_GameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "SetQueuedLoadoutTag");

	Params::AValPlayerState_Frontier_SetQueuedLoadoutTag_Params Parms{};

	Parms.NewTag = NewTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.SetInventoryStationCooldownEndtime
// (Final, Native, Public)
// Parameters:
// float                              NewEndtime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::SetInventoryStationCooldownEndtime(float NewEndtime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "SetInventoryStationCooldownEndtime");

	Params::AValPlayerState_Frontier_SetInventoryStationCooldownEndtime_Params Parms{};

	Parms.NewEndtime = NewEndtime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.SetActiveLoadoutTag
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    NewTag                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::SetActiveLoadoutTag(const struct GameplayTags_GameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "SetActiveLoadoutTag");

	Params::AValPlayerState_Frontier_SetActiveLoadoutTag_Params Parms{};

	Parms.NewTag = NewTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ServerRequestRollNextPendingBoost
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValPlayerState_Frontier::ServerRequestRollNextPendingBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ServerRequestRollNextPendingBoost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ServerRequestChooseBoost
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class FName                        BoostChoice                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ServerRequestChooseBoost(class FName BoostChoice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ServerRequestChooseBoost");

	Params::AValPlayerState_Frontier_ServerRequestChooseBoost_Params Parms{};

	Parms.BoostChoice = BoostChoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.RollPendingBoostRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostChoices       OutBoost                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::RollPendingBoostRarity(struct Valhalla_BoostChoices* OutBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "RollPendingBoostRarity");

	Params::AValPlayerState_Frontier_RollPendingBoostRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBoost != nullptr)
		*OutBoost = std::move(Parms.OutBoost);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.RollPendingBoost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostChoices       OutBoost                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::RollPendingBoost(struct Valhalla_BoostChoices* OutBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "RollPendingBoost");

	Params::AValPlayerState_Frontier_RollPendingBoost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBoost != nullptr)
		*OutBoost = std::move(Parms.OutBoost);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.RollPendingAttributeBoost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostChoices       OutBoost                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::RollPendingAttributeBoost(struct Valhalla_BoostChoices* OutBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "RollPendingAttributeBoost");

	Params::AValPlayerState_Frontier_RollPendingAttributeBoost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBoost != nullptr)
		*OutBoost = std::move(Parms.OutBoost);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.RemoveNextPendingBoost
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValPlayerState_Frontier::RemoveNextPendingBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "RemoveNextPendingBoost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_SpectateTime
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_SpectateTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_SpectateTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_SelectedMission
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_SelectedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_SelectedMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_QueuedLoadoutTag
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::OnRep_QueuedLoadoutTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_QueuedLoadoutTag");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_ProximityMission
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_ProximityMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_ProximityMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_PlayerSurviveTimerStartTime
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_PlayerSurviveTimerStartTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_PlayerSurviveTimerStartTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_PendingBoosts
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::OnRep_PendingBoosts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_PendingBoosts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_MissionTimerDuration
// (Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_MissionTimerDuration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_MissionTimerDuration");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_LootValue
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_LootValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_LootValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_LootToDrop
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_LootToDrop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_LootToDrop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_InventoryStationCooldownEndtime
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::OnRep_InventoryStationCooldownEndtime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_InventoryStationCooldownEndtime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_FrontierState
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_FrontierState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_FrontierState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_EquippedItems
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_EquippedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_EquippedItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_DroppedDeathCrate
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_DroppedDeathCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_DroppedDeathCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_DepositInventory
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_DepositInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_DepositInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_ActiveObjective
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Frontier::OnRep_ActiveObjective()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_ActiveObjective");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_ActiveLoadoutTag
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::OnRep_ActiveLoadoutTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_ActiveLoadoutTag");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.OnRep_ActiveDepositPodData
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::OnRep_ActiveDepositPodData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "OnRep_ActiveDepositPodData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.IncrementAugmentBonusScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::IncrementAugmentBonusScore(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "IncrementAugmentBonusScore");

	Params::AValPlayerState_Frontier_IncrementAugmentBonusScore_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.HasPendingBoostSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::HasPendingBoostSpace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "HasPendingBoostSpace");

	Params::AValPlayerState_Frontier_HasPendingBoostSpace_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.HasPendingBoosts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::HasPendingBoosts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "HasPendingBoosts");

	Params::AValPlayerState_Frontier_HasPendingBoosts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetSpectateTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState_Frontier::GetSpectateTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetSpectateTime");

	Params::AValPlayerState_Frontier_GetSpectateTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetSelectedMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionState*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionState* AValPlayerState_Frontier::GetSelectedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetSelectedMission");

	Params::AValPlayerState_Frontier_GetSelectedMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetRemainingPlayerTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState_Frontier::GetRemainingPlayerTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetRemainingPlayerTime");

	Params::AValPlayerState_Frontier_GetRemainingPlayerTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetRemainingEquipSlots
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTagContainerReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTagContainer AValPlayerState_Frontier::GetRemainingEquipSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetRemainingEquipSlots");

	Params::AValPlayerState_Frontier_GetRemainingEquipSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetQueuedLoadoutTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValPlayerState_Frontier::GetQueuedLoadoutTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetQueuedLoadoutTag");

	Params::AValPlayerState_Frontier_GetQueuedLoadoutTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetProximityMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionState*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionState* AValPlayerState_Frontier::GetProximityMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetProximityMission");

	Params::AValPlayerState_Frontier_GetProximityMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetPendingBoosts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_BoostChoices>OutBoostChoices                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::GetPendingBoosts(TArray<struct Valhalla_BoostChoices>* OutBoostChoices)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetPendingBoosts");

	Params::AValPlayerState_Frontier_GetPendingBoosts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBoostChoices != nullptr)
		*OutBoostChoices = std::move(Parms.OutBoostChoices);

}


// Function Valhalla.ValPlayerState_Frontier.getNumEquippedItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState_Frontier::GetNumEquippedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "getNumEquippedItems");

	Params::AValPlayerState_Frontier_GetNumEquippedItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetNextPendingBoost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_BoostChoices       OutBoost                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::GetNextPendingBoost(struct Valhalla_BoostChoices* OutBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetNextPendingBoost");

	Params::AValPlayerState_Frontier_GetNextPendingBoost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBoost != nullptr)
		*OutBoost = std::move(Parms.OutBoost);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetMissionVotingTimeRemaining
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState_Frontier::GetMissionVotingTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetMissionVotingTimeRemaining");

	Params::AValPlayerState_Frontier_GetMissionVotingTimeRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetLootValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState_Frontier::GetLootValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetLootValue");

	Params::AValPlayerState_Frontier_GetLootValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetInventoryStationCooldownEndtime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValPlayerState_Frontier::GetInventoryStationCooldownEndtime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetInventoryStationCooldownEndtime");

	Params::AValPlayerState_Frontier_GetInventoryStationCooldownEndtime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetHighestRarityFromBoost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_BoostChoices       BoostToCheck                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValPlayerState_Frontier::GetHighestRarityFromBoost(struct Valhalla_BoostChoices& BoostToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetHighestRarityFromBoost");

	Params::AValPlayerState_Frontier_GetHighestRarityFromBoost_Params Parms{};

	Parms.BoostToCheck = BoostToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetHighestEquippedBoostRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValPlayerState_Frontier::GetHighestEquippedBoostRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetHighestEquippedBoostRarity");

	Params::AValPlayerState_Frontier_GetHighestEquippedBoostRarity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetFrontierState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EFrontierState          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EFrontierState AValPlayerState_Frontier::GetFrontierState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetFrontierState");

	Params::AValPlayerState_Frontier_GetFrontierState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetEquippedItems
// (Final, Native, Public)
// Parameters:
// TArray<struct Valhalla_BoostItem>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_BoostItem> AValPlayerState_Frontier::GetEquippedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetEquippedItems");

	Params::AValPlayerState_Frontier_GetEquippedItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetEquippedItemNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FName> AValPlayerState_Frontier::GetEquippedItemNames()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetEquippedItemNames");

	Params::AValPlayerState_Frontier_GetEquippedItemNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetDroppedDeathCrate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValDeathCrate*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValDeathCrate* AValPlayerState_Frontier::GetDroppedDeathCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetDroppedDeathCrate");

	Params::AValPlayerState_Frontier_GetDroppedDeathCrate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetDepositedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_PendingItem>DepositedItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::GetDepositedItems(TArray<struct Valhalla_PendingItem>* DepositedItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetDepositedItems");

	Params::AValPlayerState_Frontier_GetDepositedItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DepositedItems != nullptr)
		*DepositedItems = std::move(Parms.DepositedItems);

}


// Function Valhalla.ValPlayerState_Frontier.GetAugmentBonusScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValPlayerState_Frontier::GetAugmentBonusScore()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetAugmentBonusScore");

	Params::AValPlayerState_Frontier_GetAugmentBonusScore_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetActiveObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::GetActiveObjective()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetActiveObjective");

	Params::AValPlayerState_Frontier_GetActiveObjective_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetActiveLoadoutTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValPlayerState_Frontier::GetActiveLoadoutTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetActiveLoadoutTag");

	Params::AValPlayerState_Frontier_GetActiveLoadoutTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.GetActiveDepositPodData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_LootDepositPodData ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_LootDepositPodData AValPlayerState_Frontier::GetActiveDepositPodData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "GetActiveDepositPodData");

	Params::AValPlayerState_Frontier_GetActiveDepositPodData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.ExtendSurviveTimer
// (Final, Native, Public)
// Parameters:
// float                              ExtraTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ExtendSurviveTimer(float ExtraTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ExtendSurviveTimer");

	Params::AValPlayerState_Frontier_ExtendSurviveTimer_Params Parms{};

	Parms.ExtraTime = ExtraTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.EquipChosenBoost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        BoostChoice                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::EquipChosenBoost(class FName BoostChoice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "EquipChosenBoost");

	Params::AValPlayerState_Frontier_EquipChosenBoost_Params Parms{};

	Parms.BoostChoice = BoostChoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.DropScrubLoot
// (Final, Native, Public)
// Parameters:
// int32                              DropNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<TSubclassOf<class AValPickup>, int32>DropContents                                                     (Parm, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::DropScrubLoot(int32 DropNum, TMap<TSubclassOf<class AValPickup>, int32> DropContents)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "DropScrubLoot");

	Params::AValPlayerState_Frontier_DropScrubLoot_Params Parms{};

	Parms.DropNum = DropNum;
	Parms.DropContents = DropContents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.DropPlayerBotDeathCrate
// (Final, Native, Public)
// Parameters:
// class UValLootConfigData*          LootTable                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::DropPlayerBotDeathCrate(class UValLootConfigData* LootTable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "DropPlayerBotDeathCrate");

	Params::AValPlayerState_Frontier_DropPlayerBotDeathCrate_Params Parms{};

	Parms.LootTable = LootTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.DropDeathCrate
// (Final, Native, Public)
// Parameters:

void AValPlayerState_Frontier::DropDeathCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "DropDeathCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.DropBotDeathCrate
// (Final, Native, Public)
// Parameters:
// class UValLootConfigData*          LootTable                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              BotLootIncrease                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::DropBotDeathCrate(class UValLootConfigData* LootTable, int32 BotLootIncrease)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "DropBotDeathCrate");

	Params::AValPlayerState_Frontier_DropBotDeathCrate_Params Parms{};

	Parms.LootTable = LootTable;
	Parms.BotLootIncrease = BotLootIncrease;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ClientUseScanTower
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bIsInitiatingPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ClientUseScanTower(bool bIsInitiatingPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ClientUseScanTower");

	Params::AValPlayerState_Frontier_ClientUseScanTower_Params Parms{};

	Parms.bIsInitiatingPlayer = bIsInitiatingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ClientRemoveItemSlot
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct GameplayTags_GameplayTag    ItemSlot                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ClientRemoveItemSlot(const struct GameplayTags_GameplayTag& ItemSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ClientRemoveItemSlot");

	Params::AValPlayerState_Frontier_ClientRemoveItemSlot_Params Parms{};

	Parms.ItemSlot = ItemSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ClientOnPendingBoostRolled
// (Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// struct Valhalla_BoostChoices       RolledBoost                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ClientOnPendingBoostRolled(struct Valhalla_BoostChoices& RolledBoost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ClientOnPendingBoostRolled");

	Params::AValPlayerState_Frontier_ClientOnPendingBoostRolled_Params Parms{};

	Parms.RolledBoost = RolledBoost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ClientAddEquippedItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                        ItemName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ItemSlot                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ClientAddEquippedItem(class FName ItemName, const struct GameplayTags_GameplayTag& ItemSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ClientAddEquippedItem");

	Params::AValPlayerState_Frontier_ClientAddEquippedItem_Params Parms{};

	Parms.ItemName = ItemName;
	Parms.ItemSlot = ItemSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.ClientAddAttributeBoost
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct Valhalla_UpgradeTreeAttribute>Boosts                                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValPlayerState_Frontier::ClientAddAttributeBoost(TArray<struct Valhalla_UpgradeTreeAttribute>& Boosts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "ClientAddAttributeBoost");

	Params::AValPlayerState_Frontier_ClientAddAttributeBoost_Params Parms{};

	Parms.Boosts = Boosts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Frontier.CanBeRevived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::CanBeRevived()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "CanBeRevived");

	Params::AValPlayerState_Frontier_CanBeRevived_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.AllBoostSlotsFilled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::AllBoostSlotsFilled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "AllBoostSlotsFilled");

	Params::AValPlayerState_Frontier_AllBoostSlotsFilled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.AddPendingBoost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::AddPendingBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "AddPendingBoost");

	Params::AValPlayerState_Frontier_AddPendingBoost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.AddEquippedItemIgnorePrevious
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                        ItemName                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::AddEquippedItemIgnorePrevious(class FName& ItemName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "AddEquippedItemIgnorePrevious");

	Params::AValPlayerState_Frontier_AddEquippedItemIgnorePrevious_Params Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.AddEquippedItem
// (Final, Native, Public)
// Parameters:
// class FName                        ItemName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ItemActor                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::AddEquippedItem(class FName ItemName, class AActor* ItemActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "AddEquippedItem");

	Params::AValPlayerState_Frontier_AddEquippedItem_Params Parms{};

	Parms.ItemName = ItemName;
	Parms.ItemActor = ItemActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Frontier.AddAttributeBoost
// (Final, Native, Public)
// Parameters:
// class FName                        BoostChoice                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Frontier::AddAttributeBoost(class FName BoostChoice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Frontier", "AddAttributeBoost");

	Params::AValPlayerState_Frontier_AddAttributeBoost_Params Parms{};

	Parms.BoostChoice = BoostChoice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerState_Mission
// (Actor)

class UClass* AValPlayerState_Mission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerState_Mission");

	return Clss;
}


// ValPlayerState_Mission Valhalla.Default__ValPlayerState_Mission
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPlayerState_Mission* AValPlayerState_Mission::GetDefaultObj()
{
	static class AValPlayerState_Mission* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPlayerState_Mission*>(AValPlayerState_Mission::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerState_Mission.SetReadyToDropPod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Mission::SetReadyToDropPod(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "SetReadyToDropPod");

	Params::AValPlayerState_Mission_SetReadyToDropPod_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_XP
// (Final, Native, Protected)
// Parameters:
// int32                              OldValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Mission::OnRep_XP(int32 OldValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_XP");

	Params::AValPlayerState_Mission_OnRep_XP_Params Parms{};

	Parms.OldValue = OldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_SelectedMission
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Mission::OnRep_SelectedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_SelectedMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_ReadyToDropPod
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Mission::OnRep_ReadyToDropPod()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_ReadyToDropPod");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_ProximityMission
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Mission::OnRep_ProximityMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_ProximityMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_DropPodStatus
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Mission::OnRep_DropPodStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_DropPodStatus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.OnRep_ActiveObjective
// (Final, Native, Protected)
// Parameters:

void AValPlayerState_Mission::OnRep_ActiveObjective()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "OnRep_ActiveObjective");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerState_Mission.GetSelectedMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionState*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionState* AValPlayerState_Mission::GetSelectedMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "GetSelectedMission");

	Params::AValPlayerState_Mission_GetSelectedMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Mission.GetReadyToDropPod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Mission::GetReadyToDropPod()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "GetReadyToDropPod");

	Params::AValPlayerState_Mission_GetReadyToDropPod_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Mission.GetProximityMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValMissionState*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMissionState* AValPlayerState_Mission::GetProximityMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "GetProximityMission");

	Params::AValPlayerState_Mission_GetProximityMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Mission.GetDropPodStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Mission::GetDropPodStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "GetDropPodStatus");

	Params::AValPlayerState_Mission_GetDropPodStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Mission.GetActiveObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPlayerState_Mission::GetActiveObjective()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "GetActiveObjective");

	Params::AValPlayerState_Mission_GetActiveObjective_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerState_Mission.AddXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPlayerState_Mission::AddXP(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerState_Mission", "AddXP");

	Params::AValPlayerState_Mission_AddXP_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerStats
// (None)

class UClass* UValPlayerStats::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerStats");

	return Clss;
}


// ValPlayerStats Valhalla.Default__ValPlayerStats
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerStats* UValPlayerStats::GetDefaultObj()
{
	static class UValPlayerStats* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerStats*>(UValPlayerStats::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerTypes
// (None)

class UClass* UValPlayerTypes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerTypes");

	return Clss;
}


// ValPlayerTypes Valhalla.Default__ValPlayerTypes
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerTypes* UValPlayerTypes::GetDefaultObj()
{
	static class UValPlayerTypes* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerTypes*>(UValPlayerTypes::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPodLauncher
// (Actor)

class UClass* AValPodLauncher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPodLauncher");

	return Clss;
}


// ValPodLauncher Valhalla.Default__ValPodLauncher
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPodLauncher* AValPodLauncher::GetDefaultObj()
{
	static class AValPodLauncher* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPodLauncher*>(AValPodLauncher::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPodLauncher.GetStaticMeshComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AValPodLauncher::GetStaticMeshComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPodLauncher", "GetStaticMeshComp");

	Params::AValPodLauncher_GetStaticMeshComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPodLauncher.GetPodStartLocation
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValPodLauncher::GetPodStartLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPodLauncher", "GetPodStartLocation");

	Params::AValPodLauncher_GetPodStartLocation_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPodLauncher.GetCapsuleComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCapsuleComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCapsuleComponent* AValPodLauncher::GetCapsuleComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPodLauncher", "GetCapsuleComp");

	Params::AValPodLauncher_GetCapsuleComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPodLauncher.EventOnLaunched
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AValCharacter*               CharacterToLaunch                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          LaunchVel                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPodLauncher::EventOnLaunched(class AValCharacter* CharacterToLaunch, const struct CoreUObject_Vector& LaunchVel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPodLauncher", "EventOnLaunched");

	Params::AValPodLauncher_EventOnLaunched_Params Parms{};

	Parms.CharacterToLaunch = CharacterToLaunch;
	Parms.LaunchVel = LaunchVel;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPodLauncher.BeginLaunch
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AValCharacter*               CharacterToLaunch                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPodLauncher::BeginLaunch(class AValCharacter* CharacterToLaunch, const struct CoreUObject_Vector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPodLauncher", "BeginLaunch");

	Params::AValPodLauncher_BeginLaunch_Params Parms{};

	Parms.CharacterToLaunch = CharacterToLaunch;
	Parms.TargetLocation = TargetLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPositionHistoryComponent
// (None)

class UClass* UValPositionHistoryComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPositionHistoryComponent");

	return Clss;
}


// ValPositionHistoryComponent Valhalla.Default__ValPositionHistoryComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPositionHistoryComponent* UValPositionHistoryComponent::GetDefaultObj()
{
	static class UValPositionHistoryComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPositionHistoryComponent*>(UValPositionHistoryComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPositionHistoryComponent.RemoveTrackedPrimitive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*         InPrimitive                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPositionHistoryComponent::RemoveTrackedPrimitive(class UPrimitiveComponent* InPrimitive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPositionHistoryComponent", "RemoveTrackedPrimitive");

	Params::UValPositionHistoryComponent_RemoveTrackedPrimitive_Params Parms{};

	Parms.InPrimitive = InPrimitive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPositionHistoryComponent.AddTrackedPrimitive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*         InPrimitive                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Priority                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPositionHistoryComponent::AddTrackedPrimitive(class UPrimitiveComponent* InPrimitive, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPositionHistoryComponent", "AddTrackedPrimitive");

	Params::UValPositionHistoryComponent_AddTrackedPrimitive_Params Parms{};

	Parms.InPrimitive = InPrimitive;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPreviewManager
// (None)

class UClass* UValPreviewManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPreviewManager");

	return Clss;
}


// ValPreviewManager Valhalla.Default__ValPreviewManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPreviewManager* UValPreviewManager::GetDefaultObj()
{
	static class UValPreviewManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPreviewManager*>(UValPreviewManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPreviewManager.UpdateSuitPreviews
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>Items                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateSuitPreviews(TArray<struct Valhalla_InventoryItem>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateSuitPreviews");

	Params::UValPreviewManager_UpdateSuitPreviews_Params Parms{};

	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateLocalPreviews
// (Native, Public, BlueprintCallable)
// Parameters:

void UValPreviewManager::UpdateLocalPreviews()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateLocalPreviews");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateItemPreviews
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>Items                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateItemPreviews(TArray<struct Valhalla_InventoryItem>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateItemPreviews");

	Params::UValPreviewManager_UpdateItemPreviews_Params Parms{};

	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmorySlots
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>ArmorySlots                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmorySlots(TArray<struct Valhalla_InventorySlot>& ArmorySlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmorySlots");

	Params::UValPreviewManager_UpdateArmorySlots_Params Parms{};

	Parms.ArmorySlots = ArmorySlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmorySkinWithAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValItemAsset*               SkinItemAsset                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               HideCape                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmorySkinWithAsset(class UValItemAsset* SkinItemAsset, bool HideCape)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmorySkinWithAsset");

	Params::UValPreviewManager_UpdateArmorySkinWithAsset_Params Parms{};

	Parms.SkinItemAsset = SkinItemAsset;
	Parms.HideCape = HideCape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmorySkin
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      SkinItem                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               HideCape                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmorySkin(struct Valhalla_InventoryItem& SkinItem, bool HideCape)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmorySkin");

	Params::UValPreviewManager_UpdateArmorySkin_Params Parms{};

	Parms.SkinItem = SkinItem;
	Parms.HideCape = HideCape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmoryLoadout
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValLoadoutAsset*            LoadoutAsset                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               OverrideWeaponAsset                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               HideCape                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmoryLoadout(class UValLoadoutAsset* LoadoutAsset, class UValItemAsset* OverrideWeaponAsset, bool HideCape)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmoryLoadout");

	Params::UValPreviewManager_UpdateArmoryLoadout_Params Parms{};

	Parms.LoadoutAsset = LoadoutAsset;
	Parms.OverrideWeaponAsset = OverrideWeaponAsset;
	Parms.HideCape = HideCape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmoryItemWithAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValItemAsset*               Item                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmoryItemWithAsset(class UValItemAsset* Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmoryItemWithAsset");

	Params::UValPreviewManager_UpdateArmoryItemWithAsset_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmoryItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmoryItem(struct Valhalla_InventoryItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmoryItem");

	Params::UValPreviewManager_UpdateArmoryItem_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmoryEquippedWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValItemAsset*               WeaponAsset                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               WeaponSkinAsset                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmoryEquippedWeapon(class UValItemAsset* WeaponAsset, class UValItemAsset* WeaponSkinAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmoryEquippedWeapon");

	Params::UValPreviewManager_UpdateArmoryEquippedWeapon_Params Parms{};

	Parms.WeaponAsset = WeaponAsset;
	Parms.WeaponSkinAsset = WeaponSkinAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.UpdateArmoryDetailItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::UpdateArmoryDetailItem(struct GameplayTags_GameplayTag& EquipSlot, struct Valhalla_InventoryItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "UpdateArmoryDetailItem");

	Params::UValPreviewManager_UpdateArmoryDetailItem_Params Parms{};

	Parms.EquipSlot = EquipSlot;
	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.ResetEquippedSlots
// (Native, Public, BlueprintCallable)
// Parameters:

void UValPreviewManager::ResetEquippedSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "ResetEquippedSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.PreviewEquippedSlots
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>EquippedSlots                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::PreviewEquippedSlots(TArray<struct Valhalla_InventorySlot>& EquippedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "PreviewEquippedSlots");

	Params::UValPreviewManager_PreviewEquippedSlots_Params Parms{};

	Parms.EquippedSlots = EquippedSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnUpdateLobbyPartyActors
// (Native, Protected)
// Parameters:

void UValPreviewManager::OnUpdateLobbyPartyActors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnUpdateLobbyPartyActors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnShopManagerReady
// (Native, Protected)
// Parameters:
// class AValShopManager*             ShopManager                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::OnShopManagerReady(class AValShopManager* ShopManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnShopManagerReady");

	Params::UValPreviewManager_OnShopManagerReady_Params Parms{};

	Parms.ShopManager = ShopManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnLoadoutConfigReady
// (Native, Protected)
// Parameters:

void UValPreviewManager::OnLoadoutConfigReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnLoadoutConfigReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnInventoryManagerReady
// (Native, Protected)
// Parameters:
// class AValInventoryManager*        InventoryManager                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::OnInventoryManagerReady(class AValInventoryManager* InventoryManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnInventoryManagerReady");

	Params::UValPreviewManager_OnInventoryManagerReady_Params Parms{};

	Parms.InventoryManager = InventoryManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnGameStateSet
// (Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPreviewManager::OnGameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnGameStateSet");

	Params::UValPreviewManager_OnGameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnEquippedSlotsUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<struct Valhalla_InventorySlot>EquippedSlots                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::OnEquippedSlotsUpdated(TArray<struct Valhalla_InventorySlot>& EquippedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnEquippedSlotsUpdated");

	Params::UValPreviewManager_OnEquippedSlotsUpdated_Params Parms{};

	Parms.EquippedSlots = EquippedSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.OnCosmeticSlotsUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<struct Valhalla_InventorySlot>CosmeticSlots                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValPreviewManager::OnCosmeticSlotsUpdated(TArray<struct Valhalla_InventorySlot>& CosmeticSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "OnCosmeticSlotsUpdated");

	Params::UValPreviewManager_OnCosmeticSlotsUpdated_Params Parms{};

	Parms.CosmeticSlots = CosmeticSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPreviewManager.GetPartyPreviewAt
// (Final, Native, Protected)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValMergedPreviewActor*      ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValMergedPreviewActor* UValPreviewManager::GetPartyPreviewAt(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPreviewManager", "GetPartyPreviewAt");

	Params::UValPreviewManager_GetPartyPreviewAt_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValProjectile
// (Actor)

class UClass* AValProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValProjectile");

	return Clss;
}


// ValProjectile Valhalla.Default__ValProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AValProjectile* AValProjectile::GetDefaultObj()
{
	static class AValProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AValProjectile*>(AValProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValProjectile.ValidateHit
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct Valhalla_LaggedProjectileHitLaggedPredictedHit                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                              AdditionalPredictionTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            ValidHit                                                         (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          VelocityAtHit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EProjectileRejection    Rejection                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::ValidateHit(struct Valhalla_LaggedProjectileHit& LaggedPredictedHit, float AdditionalPredictionTime, struct Engine_HitResult* ValidHit, struct CoreUObject_Vector* VelocityAtHit, enum class EProjectileRejection* Rejection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "ValidateHit");

	Params::AValProjectile_ValidateHit_Params Parms{};

	Parms.LaggedPredictedHit = LaggedPredictedHit;
	Parms.AdditionalPredictionTime = AdditionalPredictionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ValidHit != nullptr)
		*ValidHit = std::move(Parms.ValidHit);

	if (VelocityAtHit != nullptr)
		*VelocityAtHit = std::move(Parms.VelocityAtHit);

	if (Rejection != nullptr)
		*Rejection = Parms.Rejection;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.ShutDown
// (Native, Public, BlueprintCallable)
// Parameters:

void AValProjectile::ShutDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "ShutDown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewHealth                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValProjectile::SetHealth(int32 NewHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "SetHealth");

	Params::AValProjectile_SetHealth_Params Parms{};

	Parms.NewHealth = NewHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.ServerProcessPredictedHits
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct Valhalla_LaggedProjectileHit>PredictedHits                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::ServerProcessPredictedHits(TArray<struct Valhalla_LaggedProjectileHit>& PredictedHits)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "ServerProcessPredictedHits");

	Params::AValProjectile_ServerProcessPredictedHits_Params Parms{};

	Parms.PredictedHits = PredictedHits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.RecordPredictedHits
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Engine_HitResult>    HitResults                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// enum class EProjectilePredictionTypePredictionType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValProjectile::RecordPredictedHits(TArray<struct Engine_HitResult>& HitResults, enum class EProjectilePredictionType PredictionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "RecordPredictedHits");

	Params::AValProjectile_RecordPredictedHits_Params Parms{};

	Parms.HitResults = HitResults;
	Parms.PredictionType = PredictionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.RecordPredictedHit
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// enum class EProjectilePredictionTypePredictionType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValProjectile::RecordPredictedHit(struct Engine_HitResult& HitResult, enum class EProjectilePredictionType PredictionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "RecordPredictedHit");

	Params::AValProjectile_RecordPredictedHit_Params Parms{};

	Parms.HitResult = HitResult;
	Parms.PredictionType = PredictionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.PlayBulletWhizFX
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          SpawnLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DistanceFromSpawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          BulletDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValProjectile::PlayBulletWhizFX(const struct CoreUObject_Vector& SpawnLocation, float DistanceFromSpawn, const struct CoreUObject_Vector& BulletDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "PlayBulletWhizFX");

	Params::AValProjectile_PlayBulletWhizFX_Params Parms{};

	Parms.SpawnLocation = SpawnLocation;
	Parms.DistanceFromSpawn = DistanceFromSpawn;
	Parms.BulletDirection = BulletDirection;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValProjectile.OnStoppingHit
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValProjectile::OnStoppingHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnStoppingHit");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValProjectile.OnShutdown
// (Event, Public, BlueprintEvent)
// Parameters:

void AValProjectile::OnShutdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnShutdown");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValProjectile.OnRep_ValProjReplicatedMovement
// (Native, Protected)
// Parameters:

void AValProjectile::OnRep_ValProjReplicatedMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnRep_ValProjReplicatedMovement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnRep_StoppingHit
// (Final, Native, Protected)
// Parameters:

void AValProjectile::OnRep_StoppingHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnRep_StoppingHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnRep_PredictionID
// (Final, Native, Protected)
// Parameters:

void AValProjectile::OnRep_PredictionID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnRep_PredictionID");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnProjectileStopped
// (Native, Protected, HasOutParams)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::OnProjectileStopped(struct Engine_HitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnProjectileStopped");

	Params::AValProjectile_OnProjectileStopped_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComp                                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct CoreUObject_Vector& NormalImpulse, struct Engine_HitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnHit");

	Params::AValProjectile_OnHit_Params Parms{};

	Parms.HitComp = HitComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnGrowSphereOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// struct Engine_HitResult            Hit                                                              (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::OnGrowSphereOverlap(const struct Engine_HitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnGrowSphereOverlap");

	Params::AValProjectile_OnGrowSphereOverlap_Params Parms{};

	Parms.Hit = Hit;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValProjectile.OnDestroyedByDamage
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValProjectile::OnDestroyedByDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnDestroyedByDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.OnDamaged
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void AValProjectile::OnDamaged(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "OnDamaged");

	Params::AValProjectile_OnDamaged_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.NotifyPredictedHitRejected
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// enum class EProjectileRejection    Rejection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValProjectile::NotifyPredictedHitRejected(enum class EProjectileRejection Rejection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "NotifyPredictedHitRejected");

	Params::AValProjectile_NotifyPredictedHitRejected_Params Parms{};

	Parms.Rejection = Rejection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.IsValidTargetActor
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::IsValidTargetActor(struct Engine_HitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "IsValidTargetActor");

	Params::AValProjectile_IsValidTargetActor_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "IsAlive");

	Params::AValProjectile_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.InitBindings
// (Event, Public, BlueprintEvent)
// Parameters:

void AValProjectile::InitBindings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "InitBindings");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValProjectile.HandlePredictedStop
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::HandlePredictedStop(struct Engine_HitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "HandlePredictedStop");

	Params::AValProjectile_HandlePredictedStop_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.HandlePredictedGrenade
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectile::HandlePredictedGrenade(struct Engine_HitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "HandlePredictedGrenade");

	Params::AValProjectile_HandlePredictedGrenade_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.GetProjectileMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UProjectileMovementComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UProjectileMovementComponent* AValProjectile::GetProjectileMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "GetProjectileMovement");

	Params::AValProjectile_GetProjectileMovement_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.GetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValProjectile::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "GetHealth");

	Params::AValProjectile_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.GetCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USphereComponent*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USphereComponent* AValProjectile::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "GetCollisionComp");

	Params::AValProjectile_GetCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.GetAudioVisual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDeviceAudioVisual*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDeviceAudioVisual* AValProjectile::GetAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "GetAudioVisual");

	Params::AValProjectile_GetAudioVisual_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.FireProjectile
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValProjectile::FireProjectile()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "FireProjectile");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.FinishExisting
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValProjectile::FinishExisting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "FinishExisting");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.EventOnProjectileStopped
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct Engine_HitResult            HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::EventOnProjectileStopped(struct Engine_HitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "EventOnProjectileStopped");

	Params::AValProjectile_EventOnProjectileStopped_Params Parms{};

	Parms.HitResult = HitResult;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.DeactivateFX
// (Final, Native, Public)
// Parameters:

void AValProjectile::DeactivateFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "DeactivateFX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValProjectile.CheckTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::CheckTeam(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "CheckTeam");

	Params::AValProjectile_CheckTeam_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.CanBeDamaged
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::CanBeDamaged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "CanBeDamaged");

	Params::AValProjectile_CanBeDamaged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectile.AlwaysDamageable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValProjectile::AlwaysDamageable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectile", "AlwaysDamageable");

	Params::AValProjectile_AlwaysDamageable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValProjectileEater
// (Actor)

class UClass* AValProjectileEater::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValProjectileEater");

	return Clss;
}


// ValProjectileEater Valhalla.Default__ValProjectileEater
// (Public, ClassDefaultObject, ArchetypeObject)

class AValProjectileEater* AValProjectileEater::GetDefaultObj()
{
	static class AValProjectileEater* Default = nullptr;

	if (!Default)
		Default = static_cast<AValProjectileEater*>(AValProjectileEater::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValProjectileEater.BeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlapComponent                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValProjectileEater::BeginOverlap(class UPrimitiveComponent* OverlapComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileEater", "BeginOverlap");

	Params::AValProjectileEater_BeginOverlap_Params Parms{};

	Parms.OverlapComponent = OverlapComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValProjectileFunctionLibrary
// (None)

class UClass* UValProjectileFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValProjectileFunctionLibrary");

	return Clss;
}


// ValProjectileFunctionLibrary Valhalla.Default__ValProjectileFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValProjectileFunctionLibrary* UValProjectileFunctionLibrary::GetDefaultObj()
{
	static class UValProjectileFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValProjectileFunctionLibrary*>(UValProjectileFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValProjectileFunctionLibrary.ValidateHitscanHit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Engine_HitResult            PredictedHit                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                 InstigatorController                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAllowFriendlyFire                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValProjectileFunctionLibrary::ValidateHitscanHit(struct Engine_HitResult& PredictedHit, class AController* InstigatorController, enum class ECollisionChannel TraceChannel, bool bAllowFriendlyFire)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileFunctionLibrary", "ValidateHitscanHit");

	Params::UValProjectileFunctionLibrary_ValidateHitscanHit_Params Parms{};

	Parms.PredictedHit = PredictedHit;
	Parms.InstigatorController = InstigatorController;
	Parms.TraceChannel = TraceChannel;
	Parms.bAllowFriendlyFire = bAllowFriendlyFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectileFunctionLibrary.ValidateHeadshot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Engine_HitResult            InputHit                                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct Engine_HitResult            ReturnValue                                                      (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct Engine_HitResult UValProjectileFunctionLibrary::ValidateHeadshot(struct Engine_HitResult& InputHit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileFunctionLibrary", "ValidateHeadshot");

	Params::UValProjectileFunctionLibrary_ValidateHeadshot_Params Parms{};

	Parms.InputHit = InputHit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectileFunctionLibrary.MakeHitResultFromMinimal
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_MinimalHitResult   MinimalHit                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            ReturnValue                                                      (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct Engine_HitResult UValProjectileFunctionLibrary::MakeHitResultFromMinimal(struct Valhalla_MinimalHitResult& MinimalHit, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileFunctionLibrary", "MakeHitResultFromMinimal");

	Params::UValProjectileFunctionLibrary_MakeHitResultFromMinimal_Params Parms{};

	Parms.MinimalHit = MinimalHit;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValProjectileFunctionLibrary.BreakMinimalHitResult
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_MinimalHitResult   Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ImpactPoint                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ImpactNormal                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicalMaterial*           PhysMat                                                          (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValProjectileFunctionLibrary::BreakMinimalHitResult(struct Valhalla_MinimalHitResult& Hit, struct CoreUObject_Vector* ImpactPoint, struct CoreUObject_Vector* ImpactNormal, class UPhysicalMaterial** PhysMat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileFunctionLibrary", "BreakMinimalHitResult");

	Params::UValProjectileFunctionLibrary_BreakMinimalHitResult_Params Parms{};

	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ImpactPoint != nullptr)
		*ImpactPoint = std::move(Parms.ImpactPoint);

	if (ImpactNormal != nullptr)
		*ImpactNormal = std::move(Parms.ImpactNormal);

	if (PhysMat != nullptr)
		*PhysMat = Parms.PhysMat;

}


// Class Valhalla.ValProjectileMovementComponent
// (None)

class UClass* UValProjectileMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValProjectileMovementComponent");

	return Clss;
}


// ValProjectileMovementComponent Valhalla.Default__ValProjectileMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValProjectileMovementComponent* UValProjectileMovementComponent::GetDefaultObj()
{
	static class UValProjectileMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValProjectileMovementComponent*>(UValProjectileMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValProjectileMovementComponent.ForceBounce
// (Final, Native, Public)
// Parameters:
// struct Engine_HitResult            ValidHitResult                                                   (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UValProjectileMovementComponent::ForceBounce(const struct Engine_HitResult& ValidHitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProjectileMovementComponent", "ForceBounce");

	Params::UValProjectileMovementComponent_ForceBounce_Params Parms{};

	Parms.ValidHitResult = ValidHitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValProxyAudioThreatComponent
// (SceneComponent)

class UClass* UValProxyAudioThreatComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValProxyAudioThreatComponent");

	return Clss;
}


// ValProxyAudioThreatComponent Valhalla.Default__ValProxyAudioThreatComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValProxyAudioThreatComponent* UValProxyAudioThreatComponent::GetDefaultObj()
{
	static class UValProxyAudioThreatComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValProxyAudioThreatComponent*>(UValProxyAudioThreatComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValProxyAudioThreatComponent.OnPlayerStateReady
// (Final, Native, Protected)
// Parameters:
// class AValPlayerStateBase*         State                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValProxyAudioThreatComponent::OnPlayerStateReady(class AValPlayerStateBase* State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValProxyAudioThreatComponent", "OnPlayerStateReady");

	Params::UValProxyAudioThreatComponent_OnPlayerStateReady_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValTeamConfig
// (None)

class UClass* UValTeamConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTeamConfig");

	return Clss;
}


// ValTeamConfig Valhalla.Default__ValTeamConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTeamConfig* UValTeamConfig::GetDefaultObj()
{
	static class UValTeamConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTeamConfig*>(UValTeamConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBotFilledTeamConfig
// (None)

class UClass* UValBotFilledTeamConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotFilledTeamConfig");

	return Clss;
}


// ValBotFilledTeamConfig Valhalla.Default__ValBotFilledTeamConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotFilledTeamConfig* UValBotFilledTeamConfig::GetDefaultObj()
{
	static class UValBotFilledTeamConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotFilledTeamConfig*>(UValBotFilledTeamConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValBotTeamOnlyConfig
// (None)

class UClass* UValBotTeamOnlyConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValBotTeamOnlyConfig");

	return Clss;
}


// ValBotTeamOnlyConfig Valhalla.Default__ValBotTeamOnlyConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValBotTeamOnlyConfig* UValBotTeamOnlyConfig::GetDefaultObj()
{
	static class UValBotTeamOnlyConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValBotTeamOnlyConfig*>(UValBotTeamOnlyConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValOfflineQueueData
// (None)

class UClass* UValOfflineQueueData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValOfflineQueueData");

	return Clss;
}


// ValOfflineQueueData Valhalla.Default__ValOfflineQueueData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValOfflineQueueData* UValOfflineQueueData::GetDefaultObj()
{
	static class UValOfflineQueueData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValOfflineQueueData*>(UValOfflineQueueData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValOfflineQueueData.ToTravelParameters
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        OutMapName                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      OutOptions                                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValOfflineQueueData::ToTravelParameters(class FName* OutMapName, class FString* OutOptions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValOfflineQueueData", "ToTravelParameters");

	Params::UValOfflineQueueData_ToTravelParameters_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutMapName != nullptr)
		*OutMapName = Parms.OutMapName;

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);

}


// Class Valhalla.ValQueueData
// (None)

class UClass* UValQueueData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValQueueData");

	return Clss;
}


// ValQueueData Valhalla.Default__ValQueueData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValQueueData* UValQueueData::GetDefaultObj()
{
	static class UValQueueData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValQueueData*>(UValQueueData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValQueueData.GetQueueDataFromQueueId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      ID                                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValQueueData*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValQueueData* UValQueueData::GetQueueDataFromQueueId(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueData", "GetQueueDataFromQueueId");

	Params::UValQueueData_GetQueueDataFromQueueId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueData.GetMaxPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValQueueData::GetMaxPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueData", "GetMaxPlayerCount");

	Params::UValQueueData_GetMaxPlayerCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueData.GetGameModeEntryRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_EntryRequirement>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_EntryRequirement> UValQueueData::GetGameModeEntryRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueData", "GetGameModeEntryRequirements");

	Params::UValQueueData_GetGameModeEntryRequirements_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueData.GetBotTierData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              SkillRating                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPlayerBots                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValBotTierData*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBotTierData* UValQueueData::GetBotTierData(int32 SkillRating, bool bPlayerBots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueData", "GetBotTierData");

	Params::UValQueueData_GetBotTierData_Params Parms{};

	Parms.SkillRating = SkillRating;
	Parms.bPlayerBots = bPlayerBots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPendingQueue
// (None)

class UClass* UValPendingQueue::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPendingQueue");

	return Clss;
}


// ValPendingQueue Valhalla.Default__ValPendingQueue
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPendingQueue* UValPendingQueue::GetDefaultObj()
{
	static class UValPendingQueue* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPendingQueue*>(UValPendingQueue::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPendingQueue.GetOfflineTravelParameters
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        OutMapName                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      OutOptions                                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPendingQueue::GetOfflineTravelParameters(class FName* OutMapName, class FString* OutOptions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPendingQueue", "GetOfflineTravelParameters");

	Params::UValPendingQueue_GetOfflineTravelParameters_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutMapName != nullptr)
		*OutMapName = Parms.OutMapName;

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);

}


// Function Valhalla.ValPendingQueue.CreatePendingQueue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Outer                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValQueueData*               InQueue                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQueueType              InType                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValPendingQueue*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPendingQueue* UValPendingQueue::CreatePendingQueue(class UObject* Outer, class UValQueueData* InQueue, enum class EQueueType InType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPendingQueue", "CreatePendingQueue");

	Params::UValPendingQueue_CreatePendingQueue_Params Parms{};

	Parms.Outer = Outer;
	Parms.InQueue = InQueue;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPendingQueue_Raid
// (None)

class UClass* UValPendingQueue_Raid::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPendingQueue_Raid");

	return Clss;
}


// ValPendingQueue_Raid Valhalla.Default__ValPendingQueue_Raid
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPendingQueue_Raid* UValPendingQueue_Raid::GetDefaultObj()
{
	static class UValPendingQueue_Raid* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPendingQueue_Raid*>(UValPendingQueue_Raid::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPendingQueue_Raid.CreatePendingRaidQueue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     Outer                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValQueueData*               InQueue                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQueueType              InType                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InMapOverride                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InSecurityLevel                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InRandomSeedOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValPendingQueue_Raid*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPendingQueue_Raid* UValPendingQueue_Raid::CreatePendingRaidQueue(class UObject* Outer, class UValQueueData* InQueue, enum class EQueueType InType, class FName& InMapOverride, int32 InSecurityLevel, int32 InRandomSeedOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPendingQueue_Raid", "CreatePendingRaidQueue");

	Params::UValPendingQueue_Raid_CreatePendingRaidQueue_Params Parms{};

	Parms.Outer = Outer;
	Parms.InQueue = InQueue;
	Parms.InType = InType;
	Parms.InMapOverride = InMapOverride;
	Parms.InSecurityLevel = InSecurityLevel;
	Parms.InRandomSeedOverride = InRandomSeedOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValRecipeConfig
// (None)

class UClass* UValRecipeConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRecipeConfig");

	return Clss;
}


// ValRecipeConfig Valhalla.Default__ValRecipeConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValRecipeConfig* UValRecipeConfig::GetDefaultObj()
{
	static class UValRecipeConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValRecipeConfig*>(UValRecipeConfig::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValRecipeConfig.OnRecipeGroupLoaded
// (Native, Protected)
// Parameters:

void UValRecipeConfig::OnRecipeGroupLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRecipeConfig", "OnRecipeGroupLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRecipeConfig.OnRecipeAssetsLoaded
// (Native, Protected)
// Parameters:

void UValRecipeConfig::OnRecipeAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRecipeConfig", "OnRecipeAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRecipeConfig.OnGameStateSet
// (Native, Protected)
// Parameters:
// class AGameStateBase*              GameState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRecipeConfig::OnGameStateSet(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRecipeConfig", "OnGameStateSet");

	Params::UValRecipeConfig_OnGameStateSet_Params Parms{};

	Parms.GameState = GameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValRecipeGroup
// (None)

class UClass* UValRecipeGroup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRecipeGroup");

	return Clss;
}


// ValRecipeGroup Valhalla.Default__ValRecipeGroup
// (Public, ClassDefaultObject, ArchetypeObject)

class UValRecipeGroup* UValRecipeGroup::GetDefaultObj()
{
	static class UValRecipeGroup* Default = nullptr;

	if (!Default)
		Default = static_cast<UValRecipeGroup*>(UValRecipeGroup::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValReconClassComponent
// (None)

class UClass* UValReconClassComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReconClassComponent");

	return Clss;
}


// ValReconClassComponent Valhalla.Default__ValReconClassComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReconClassComponent* UValReconClassComponent::GetDefaultObj()
{
	static class UValReconClassComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReconClassComponent*>(UValReconClassComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValRepairToolExecutionCalc
// (None)

class UClass* UValRepairToolExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRepairToolExecutionCalc");

	return Clss;
}


// ValRepairToolExecutionCalc Valhalla.Default__ValRepairToolExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValRepairToolExecutionCalc* UValRepairToolExecutionCalc::GetDefaultObj()
{
	static class UValRepairToolExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValRepairToolExecutionCalc*>(UValRepairToolExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValReplicationGraph
// (None)

class UClass* UValReplicationGraph::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReplicationGraph");

	return Clss;
}


// ValReplicationGraph Valhalla.Default__ValReplicationGraph
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReplicationGraph* UValReplicationGraph::GetDefaultObj()
{
	static class UValReplicationGraph* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReplicationGraph*>(UValReplicationGraph::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValReplicationGraphNode_AlwaysRelevant_ForConnection
// (None)

class UClass* UValReplicationGraphNode_AlwaysRelevant_ForConnection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReplicationGraphNode_AlwaysRelevant_ForConnection");

	return Clss;
}


// ValReplicationGraphNode_AlwaysRelevant_ForConnection Valhalla.Default__ValReplicationGraphNode_AlwaysRelevant_ForConnection
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReplicationGraphNode_AlwaysRelevant_ForConnection* UValReplicationGraphNode_AlwaysRelevant_ForConnection::GetDefaultObj()
{
	static class UValReplicationGraphNode_AlwaysRelevant_ForConnection* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReplicationGraphNode_AlwaysRelevant_ForConnection*>(UValReplicationGraphNode_AlwaysRelevant_ForConnection::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValReplicationGraphNode_PlayerStateFrequencyLimiter
// (None)

class UClass* UValReplicationGraphNode_PlayerStateFrequencyLimiter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReplicationGraphNode_PlayerStateFrequencyLimiter");

	return Clss;
}


// ValReplicationGraphNode_PlayerStateFrequencyLimiter Valhalla.Default__ValReplicationGraphNode_PlayerStateFrequencyLimiter
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReplicationGraphNode_PlayerStateFrequencyLimiter* UValReplicationGraphNode_PlayerStateFrequencyLimiter::GetDefaultObj()
{
	static class UValReplicationGraphNode_PlayerStateFrequencyLimiter* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReplicationGraphNode_PlayerStateFrequencyLimiter*>(UValReplicationGraphNode_PlayerStateFrequencyLimiter::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValReplicationGraphNode_TeamRelevant
// (None)

class UClass* UValReplicationGraphNode_TeamRelevant::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReplicationGraphNode_TeamRelevant");

	return Clss;
}


// ValReplicationGraphNode_TeamRelevant Valhalla.Default__ValReplicationGraphNode_TeamRelevant
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReplicationGraphNode_TeamRelevant* UValReplicationGraphNode_TeamRelevant::GetDefaultObj()
{
	static class UValReplicationGraphNode_TeamRelevant* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReplicationGraphNode_TeamRelevant*>(UValReplicationGraphNode_TeamRelevant::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValReplicationGraphNode_TeamRelevant.OnTeamActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EEndPlayReason          EndPlayReason                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValReplicationGraphNode_TeamRelevant::OnTeamActorDestroyed(class AActor* Actor, enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReplicationGraphNode_TeamRelevant", "OnTeamActorDestroyed");

	Params::UValReplicationGraphNode_TeamRelevant_OnTeamActorDestroyed_Params Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValReputationTierData
// (None)

class UClass* UValReputationTierData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReputationTierData");

	return Clss;
}


// ValReputationTierData Valhalla.Default__ValReputationTierData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValReputationTierData* UValReputationTierData::GetDefaultObj()
{
	static class UValReputationTierData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValReputationTierData*>(UValReputationTierData::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValReputationTierData.GetReputationTierFromReputationValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Reputation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValReputationTierData*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValReputationTierData* UValReputationTierData::GetReputationTierFromReputationValue(int32 Reputation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReputationTierData", "GetReputationTierFromReputationValue");

	Params::UValReputationTierData_GetReputationTierFromReputationValue_Params Parms{};

	Parms.Reputation = Reputation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReputationTierData.GetReputationTierFromId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ID                                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValReputationTierData*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValReputationTierData* UValReputationTierData::GetReputationTierFromId(class FName& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReputationTierData", "GetReputationTierFromId");

	Params::UValReputationTierData_GetReputationTierFromId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValRespawnPoint
// (Actor)

class UClass* AValRespawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRespawnPoint");

	return Clss;
}


// ValRespawnPoint Valhalla.Default__ValRespawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValRespawnPoint* AValRespawnPoint::GetDefaultObj()
{
	static class AValRespawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValRespawnPoint*>(AValRespawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValRespawnPoint.UpdateState
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class ERespawnPointState      Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::UpdateState(enum class ERespawnPointState Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "UpdateState");

	Params::AValRespawnPoint_UpdateState_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValRespawnPoint.TryToSelfRevive
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::TryToSelfRevive(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "TryToSelfRevive");

	Params::AValRespawnPoint_TryToSelfRevive_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.TryToRespawn
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::TryToRespawn(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "TryToRespawn");

	Params::AValRespawnPoint_TryToRespawn_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ERespawnPointState      NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::SetState(enum class ERespawnPointState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "SetState");

	Params::AValRespawnPoint_SetState_Params Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.SetRespawnCompleteTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              RespawnCompleteTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::SetRespawnCompleteTime(float RespawnCompleteTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "SetRespawnCompleteTime");

	Params::AValRespawnPoint_SetRespawnCompleteTime_Params Parms{};

	Parms.RespawnCompleteTime = RespawnCompleteTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "SetCachedChanneler");

	Params::AValRespawnPoint_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.OnRep_State
// (Final, Native, Protected)
// Parameters:

void AValRespawnPoint::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.OnRep_RespawnCompleteTime
// (Final, Native, Protected)
// Parameters:

void AValRespawnPoint::OnRep_RespawnCompleteTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "OnRep_RespawnCompleteTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.OnChannelingUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::OnChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "OnChannelingUpdated");

	Params::AValRespawnPoint_OnChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValRespawnPoint.MulticastChannelingUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::MulticastChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "MulticastChannelingUpdated");

	Params::AValRespawnPoint_MulticastChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "Interact");

	Params::AValRespawnPoint_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.HasReviviablePlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValRespawnPoint::HasReviviablePlayer(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "HasReviviablePlayer");

	Params::AValRespawnPoint_HasReviviablePlayer_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class ERespawnPointState      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERespawnPointState AValRespawnPoint::GetState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetState");

	Params::AValRespawnPoint_GetState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetRespawnLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValRespawnPoint::GetRespawnLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetRespawnLocation");

	Params::AValRespawnPoint_GetRespawnLocation_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValRespawnPoint::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetInteractText");

	Params::AValRespawnPoint_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValRespawnPoint::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetInteractComponent");

	Params::AValRespawnPoint_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValRespawnPoint::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetChannelTime");

	Params::AValRespawnPoint_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValRespawnPoint::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetCachedChanneler");

	Params::AValRespawnPoint_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValRespawnPoint::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "GetBlockInteractReason");

	Params::AValRespawnPoint_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.ExtraInteractChecks
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValRespawnPoint::ExtraInteractChecks(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "ExtraInteractChecks");

	Params::AValRespawnPoint_ExtraInteractChecks_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRespawnPoint.EventRespawnCompleteTimeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              RespawnCompleteTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRespawnPoint::EventRespawnCompleteTimeChanged(float RespawnCompleteTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "EventRespawnCompleteTimeChanged");

	Params::AValRespawnPoint_EventRespawnCompleteTimeChanged_Params Parms{};

	Parms.RespawnCompleteTime = RespawnCompleteTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValRespawnPoint.DoRespawn
// (Native, Public, BlueprintCallable)
// Parameters:

void AValRespawnPoint::DoRespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "DoRespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRespawnPoint.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValRespawnPoint::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRespawnPoint", "CanInteract");

	Params::AValRespawnPoint_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValReviveBeacon
// (Actor)

class UClass* AValReviveBeacon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValReviveBeacon");

	return Clss;
}


// ValReviveBeacon Valhalla.Default__ValReviveBeacon
// (Public, ClassDefaultObject, ArchetypeObject)

class AValReviveBeacon* AValReviveBeacon::GetDefaultObj()
{
	static class AValReviveBeacon* Default = nullptr;

	if (!Default)
		Default = static_cast<AValReviveBeacon*>(AValReviveBeacon::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValReviveBeacon.UpdateLocalVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValReviveBeacon::UpdateLocalVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "UpdateLocalVisibility");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValReviveBeacon.TryToRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::TryToRespawn(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "TryToRespawn");

	Params::AValReviveBeacon_TryToRespawn_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.StartChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "StartChanneledInteract");

	Params::AValReviveBeacon_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.ShouldShowOnMinimap
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AValPlayerController*        Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::ShouldShowOnMinimap(class AValPlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "ShouldShowOnMinimap");

	Params::AValReviveBeacon_ShouldShowOnMinimap_Params Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.ShouldBeVisibleToLocalPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::ShouldBeVisibleToLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "ShouldBeVisibleToLocalPlayer");

	Params::AValReviveBeacon_ShouldBeVisibleToLocalPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.SetPlayerToRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::SetPlayerToRespawn(class AValPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "SetPlayerToRespawn");

	Params::AValReviveBeacon_SetPlayerToRespawn_Params Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "SetCachedChanneler");

	Params::AValReviveBeacon_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.SetBeaconState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EReviveBeaconState      State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::SetBeaconState(enum class EReviveBeaconState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "SetBeaconState");

	Params::AValReviveBeacon_SetBeaconState_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnReviveInProgress
// (Final, Native, Protected)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              RespawnCompleteTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::OnReviveInProgress(bool Value, float RespawnCompleteTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnReviveInProgress");

	Params::AValReviveBeacon_OnReviveInProgress_Params Parms{};

	Parms.Value = Value;
	Parms.RespawnCompleteTime = RespawnCompleteTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnRep_RespawnCompleteTime
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnRep_RespawnCompleteTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnRep_RespawnCompleteTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnRep_PlayerToRespawn
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnRep_PlayerToRespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnRep_PlayerToRespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnRep_OwnerDogTagsInCrate
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnRep_OwnerDogTagsInCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnRep_OwnerDogTagsInCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnRep_LifetimeEndTime
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnRep_LifetimeEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnRep_LifetimeEndTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnRep_BeaconState
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnRep_BeaconState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnRep_BeaconState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnPlayerDeathCrateInventoryChanged
// (Final, Native, Protected)
// Parameters:

void AValReviveBeacon::OnPlayerDeathCrateInventoryChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnPlayerDeathCrateInventoryChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnLocalPlayerRevivableTeammatesChanged
// (Final, Native, Protected)
// Parameters:
// class AValPlayerState*             LocalPlayerState                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::OnLocalPlayerRevivableTeammatesChanged(class AValPlayerState* LocalPlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnLocalPlayerRevivableTeammatesChanged");

	Params::AValReviveBeacon_OnLocalPlayerRevivableTeammatesChanged_Params Parms{};

	Parms.LocalPlayerState = LocalPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnFrontierStateChanged
// (Final, Native, Protected)
// Parameters:
// enum class EFrontierState          FrontierState                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::OnFrontierStateChanged(enum class EFrontierState FrontierState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnFrontierStateChanged");

	Params::AValReviveBeacon_OnFrontierStateChanged_Params Parms{};

	Parms.FrontierState = FrontierState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.OnChannelingUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::OnChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "OnChannelingUpdated");

	Params::AValReviveBeacon_OnChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValReviveBeacon.MulticastChannelingUpdated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bStatus                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::MulticastChannelingUpdated(class AValCharacter* Initiator, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "MulticastChannelingUpdated");

	Params::AValReviveBeacon_MulticastChannelingUpdated_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.bStatus = bStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.LifetimeExpired
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValReviveBeacon::LifetimeExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "LifetimeExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.IsFriendlyWithLocalViewTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::IsFriendlyWithLocalViewTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "IsFriendlyWithLocalViewTarget");

	Params::AValReviveBeacon_IsFriendlyWithLocalViewTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "Interact");

	Params::AValReviveBeacon_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.GetShowOnMinimap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValPlayerController*        Controller                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::GetShowOnMinimap(class AValPlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetShowOnMinimap");

	Params::AValReviveBeacon_GetShowOnMinimap_Params Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetReviveTriggeredByBeacon
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::GetReviveTriggeredByBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetReviveTriggeredByBeacon");

	Params::AValReviveBeacon_GetReviveTriggeredByBeacon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetRespawnPossibleLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValReviveBeacon::GetRespawnPossibleLifetime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetRespawnPossibleLifetime");

	Params::AValReviveBeacon_GetRespawnPossibleLifetime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetRespawnLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValReviveBeacon::GetRespawnLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetRespawnLocation");

	Params::AValReviveBeacon_GetRespawnLocation_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetInteractType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EInteractType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractType AValReviveBeacon::GetInteractType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetInteractType");

	Params::AValReviveBeacon_GetInteractType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValReviveBeacon::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetInteractText");

	Params::AValReviveBeacon_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetInteractPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValReviveBeacon::GetInteractPriority()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetInteractPriority");

	Params::AValReviveBeacon_GetInteractPriority_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValReviveBeacon::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetInteractComponent");

	Params::AValReviveBeacon_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetDefaultStaticMesh
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AValReviveBeacon::GetDefaultStaticMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetDefaultStaticMesh");

	Params::AValReviveBeacon_GetDefaultStaticMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValReviveBeacon::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetChannelTime");

	Params::AValReviveBeacon_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValReviveBeacon::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetCachedChanneler");

	Params::AValReviveBeacon_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValReviveBeacon::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetBlockInteractReason");

	Params::AValReviveBeacon_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.GetBeaconState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EReviveBeaconState      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EReviveBeaconState AValReviveBeacon::GetBeaconState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "GetBeaconState");

	Params::AValReviveBeacon_GetBeaconState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.EventRespawnCompleteTimeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              RespawnCompleteTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::EventRespawnCompleteTimeChanged(float RespawnCompleteTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "EventRespawnCompleteTimeChanged");

	Params::AValReviveBeacon_EventRespawnCompleteTimeChanged_Params Parms{};

	Parms.RespawnCompleteTime = RespawnCompleteTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValReviveBeacon.EndChanneledInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValReviveBeacon::EndChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "EndChanneledInteract");

	Params::AValReviveBeacon_EndChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.DoRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValReviveBeacon::DoRespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "DoRespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValReviveBeacon.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValReviveBeacon::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "CanInteract");

	Params::AValReviveBeacon_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValReviveBeacon.CancelRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValReviveBeacon::CancelRespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValReviveBeacon", "CancelRespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValRHWidget
// (None)

class UClass* UValRHWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRHWidget");

	return Clss;
}


// ValRHWidget Valhalla.Default__ValRHWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UValRHWidget* UValRHWidget::GetDefaultObj()
{
	static class UValRHWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UValRHWidget*>(UValRHWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValRHWidget.UnblockConfiguredInputs
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValRHWidget::UnblockConfiguredInputs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "UnblockConfiguredInputs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.StopListeningForInputAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        AxisName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::StopListeningForInputAxis(class FName AxisName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "StopListeningForInputAxis");

	Params::UValRHWidget_StopListeningForInputAxis_Params Parms{};

	Parms.AxisName = AxisName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.StartNewJiggle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUIJiggle*                   NewJiggle                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanel*                CanvasToJiggle                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::StartNewJiggle(class UUIJiggle* NewJiggle, class UCanvasPanel* CanvasToJiggle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "StartNewJiggle");

	Params::UValRHWidget_StartNewJiggle_Params Parms{};

	Parms.NewJiggle = NewJiggle;
	Parms.CanvasToJiggle = CanvasToJiggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.OnBindingReady
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EBindingType            Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::OnBindingReady(enum class EBindingType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "OnBindingReady");

	Params::UValRHWidget_OnBindingReady_Params Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValRHWidget.NullAxis
// (Final, Native, Protected)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::NullAxis(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "NullAxis");

	Params::UValRHWidget_NullAxis_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.NullAction
// (Final, Native, Protected)
// Parameters:

void UValRHWidget::NullAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "NullAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.ListenForInputAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        AxisName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Callback                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::ListenForInputAxis(class FName AxisName, FDelegateProperty_ Callback)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "ListenForInputAxis");

	Params::UValRHWidget_ListenForInputAxis_Params Parms{};

	Parms.AxisName = AxisName;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.BlockConfiguredInputs
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValRHWidget::BlockConfiguredInputs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "BlockConfiguredInputs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRHWidget.BindingReady
// (Final, Native, Protected)
// Parameters:
// enum class EBindingType            Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValRHWidget::BindingReady(enum class EBindingType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRHWidget", "BindingReady");

	Params::UValRHWidget_BindingReady_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValRoyaleFogVolume
// (Actor)

class UClass* AValRoyaleFogVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValRoyaleFogVolume");

	return Clss;
}


// ValRoyaleFogVolume Valhalla.Default__ValRoyaleFogVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValRoyaleFogVolume* AValRoyaleFogVolume::GetDefaultObj()
{
	static class AValRoyaleFogVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValRoyaleFogVolume*>(AValRoyaleFogVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValRoyaleFogVolume.OnRep_WaitPhaseEndTime
// (Final, Native, Public)
// Parameters:

void AValRoyaleFogVolume::OnRep_WaitPhaseEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "OnRep_WaitPhaseEndTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRoyaleFogVolume.OnRep_PhaseEndTime
// (Final, Native, Public)
// Parameters:

void AValRoyaleFogVolume::OnRep_PhaseEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "OnRep_PhaseEndTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRoyaleFogVolume.OnRep_EndRadius
// (Final, Native, Public)
// Parameters:

void AValRoyaleFogVolume::OnRep_EndRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "OnRep_EndRadius");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRoyaleFogVolume.OnRep_EndLocation
// (Final, Native, Public)
// Parameters:

void AValRoyaleFogVolume::OnRep_EndLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "OnRep_EndLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRoyaleFogVolume.OnRep_CurrentData
// (Final, Native, Public)
// Parameters:

void AValRoyaleFogVolume::OnRep_CurrentData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "OnRep_CurrentData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValRoyaleFogVolume.GetWaitPhaseEndTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValRoyaleFogVolume::GetWaitPhaseEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "GetWaitPhaseEndTime");

	Params::AValRoyaleFogVolume_GetWaitPhaseEndTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRoyaleFogVolume.GetPhaseEndTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValRoyaleFogVolume::GetPhaseEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "GetPhaseEndTime");

	Params::AValRoyaleFogVolume_GetPhaseEndTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRoyaleFogVolume.GetEndRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValRoyaleFogVolume::GetEndRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "GetEndRadius");

	Params::AValRoyaleFogVolume_GetEndRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRoyaleFogVolume.GetEndLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValRoyaleFogVolume::GetEndLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "GetEndLocation");

	Params::AValRoyaleFogVolume_GetEndLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRoyaleFogVolume.GetCurrentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_CurrentFogCircleDataReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_CurrentFogCircleData AValRoyaleFogVolume::GetCurrentData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "GetCurrentData");

	Params::AValRoyaleFogVolume_GetCurrentData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValRoyaleFogVolume.EnableFog
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValRoyaleFogVolume::EnableFog(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValRoyaleFogVolume", "EnableFog");

	Params::AValRoyaleFogVolume_EnableFog_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValScannable
// (None)

class UClass* IValScannable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValScannable");

	return Clss;
}


// ValScannable Valhalla.Default__ValScannable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValScannable* IValScannable::GetDefaultObj()
{
	static class IValScannable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValScannable*>(IValScannable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValScannable.AddScanner
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValScannable::AddScanner(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValScannable", "AddScanner");

	Params::IValScannable_AddScanner_Params Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValScanPoint
// (Actor)

class UClass* AValScanPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValScanPoint");

	return Clss;
}


// ValScanPoint Valhalla.Default__ValScanPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValScanPoint* AValScanPoint::GetDefaultObj()
{
	static class AValScanPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValScanPoint*>(AValScanPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValScanPoint.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValScanPoint::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValScanPoint", "Interact");

	Params::AValScanPoint_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValScanPoint.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValScanPoint::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValScanPoint", "GetInteractText");

	Params::AValScanPoint_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValScanPoint.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValScanPoint::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValScanPoint", "GetInteractComponent");

	Params::AValScanPoint_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValScanPoint.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValScanPoint::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValScanPoint", "CanInteract");

	Params::AValScanPoint_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValSettingsSubsystem
// (None)

class UClass* UValSettingsSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSettingsSubsystem");

	return Clss;
}


// ValSettingsSubsystem Valhalla.Default__ValSettingsSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSettingsSubsystem* UValSettingsSubsystem::GetDefaultObj()
{
	static class UValSettingsSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSettingsSubsystem*>(UValSettingsSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValShieldRegenExecutionCalc
// (None)

class UClass* UValShieldRegenExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValShieldRegenExecutionCalc");

	return Clss;
}


// ValShieldRegenExecutionCalc Valhalla.Default__ValShieldRegenExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValShieldRegenExecutionCalc* UValShieldRegenExecutionCalc::GetDefaultObj()
{
	static class UValShieldRegenExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValShieldRegenExecutionCalc*>(UValShieldRegenExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValShippingConsole
// (None)

class UClass* UValShippingConsole::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValShippingConsole");

	return Clss;
}


// ValShippingConsole Valhalla.Default__ValShippingConsole
// (Public, ClassDefaultObject, ArchetypeObject)

class UValShippingConsole* UValShippingConsole::GetDefaultObj()
{
	static class UValShippingConsole* Default = nullptr;

	if (!Default)
		Default = static_cast<UValShippingConsole*>(UValShippingConsole::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValShopManager
// (Actor)

class UClass* AValShopManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValShopManager");

	return Clss;
}


// ValShopManager Valhalla.Default__ValShopManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValShopManager* AValShopManager::GetDefaultObj()
{
	static class AValShopManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValShopManager*>(AValShopManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValShopManager.ServerRequestShopItems
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValShopManager::ServerRequestShopItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "ServerRequestShopItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.ServerPurchaseDailyId
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            DailyId                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValShopManager::ServerPurchaseDailyId(struct CoreUObject_Guid& DailyId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "ServerPurchaseDailyId");

	Params::AValShopManager_ServerPurchaseDailyId_Params Parms{};

	Parms.DailyId = DailyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.PurchaseInventoryId
// (Native, Public, BlueprintCallable)
// Parameters:
// int64                              InventoryId                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValShopManager::PurchaseInventoryId(int64 InventoryId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "PurchaseInventoryId");

	Params::AValShopManager_PurchaseInventoryId_Params Parms{};

	Parms.InventoryId = InventoryId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.PurchaseDailyId
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            DailyId                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValShopManager::PurchaseDailyId(struct CoreUObject_Guid& DailyId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "PurchaseDailyId");

	Params::AValShopManager_PurchaseDailyId_Params Parms{};

	Parms.DailyId = DailyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.OnWeaponAssetsLoaded
// (Native, Protected)
// Parameters:

void AValShopManager::OnWeaponAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "OnWeaponAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.OnSuitAssetsLoaded
// (Native, Protected)
// Parameters:

void AValShopManager::OnSuitAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "OnSuitAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.OnShopItemsLoaded
// (Native, Protected)
// Parameters:

void AValShopManager::OnShopItemsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "OnShopItemsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.OnRep_DailyWeapons
// (Native, Protected)
// Parameters:

void AValShopManager::OnRep_DailyWeapons()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "OnRep_DailyWeapons");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.OnRep_DailySuits
// (Native, Protected)
// Parameters:

void AValShopManager::OnRep_DailySuits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "OnRep_DailySuits");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValShopManager.GetWeaponSkins
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>WeaponSkins                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValShopManager::GetWeaponSkins(TArray<struct Valhalla_InventoryItem>* WeaponSkins)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetWeaponSkins");

	Params::AValShopManager_GetWeaponSkins_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WeaponSkins != nullptr)
		*WeaponSkins = std::move(Parms.WeaponSkins);

}


// Function Valhalla.ValShopManager.GetWeaponSkinAt
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      WeaponSkin                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValShopManager::GetWeaponSkinAt(int32 Index, struct Valhalla_InventoryItem* WeaponSkin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetWeaponSkinAt");

	Params::AValShopManager_GetWeaponSkinAt_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WeaponSkin != nullptr)
		*WeaponSkin = std::move(Parms.WeaponSkin);

	return Parms.ReturnValue;

}


// Function Valhalla.ValShopManager.GetSuitSkins
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>SuitSkins                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValShopManager::GetSuitSkins(TArray<struct Valhalla_InventoryItem>* SuitSkins)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetSuitSkins");

	Params::AValShopManager_GetSuitSkins_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SuitSkins != nullptr)
		*SuitSkins = std::move(Parms.SuitSkins);

}


// Function Valhalla.ValShopManager.GetSuitSkinAt
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      SuitSkin                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValShopManager::GetSuitSkinAt(int32 Index, struct Valhalla_InventoryItem* SuitSkin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetSuitSkinAt");

	Params::AValShopManager_GetSuitSkinAt_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SuitSkin != nullptr)
		*SuitSkin = std::move(Parms.SuitSkin);

	return Parms.ReturnValue;

}


// Function Valhalla.ValShopManager.GetShopPrice
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ShopPrice          ShopPrice                                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValShopManager::GetShopPrice(int32 ItemId, struct Valhalla_ShopPrice* ShopPrice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetShopPrice");

	Params::AValShopManager_GetShopPrice_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ShopPrice != nullptr)
		*ShopPrice = std::move(Parms.ShopPrice);

	return Parms.ReturnValue;

}


// Function Valhalla.ValShopManager.GetDailyWeapons
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>WeaponSkins                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValShopManager::GetDailyWeapons(TArray<struct Valhalla_InventoryItem>* WeaponSkins)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetDailyWeapons");

	Params::AValShopManager_GetDailyWeapons_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WeaponSkins != nullptr)
		*WeaponSkins = std::move(Parms.WeaponSkins);

}


// Function Valhalla.ValShopManager.GetDailyWeaponAt
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      DailyWeapon                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValShopManager::GetDailyWeaponAt(int32 Index, struct Valhalla_InventoryItem* DailyWeapon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetDailyWeaponAt");

	Params::AValShopManager_GetDailyWeaponAt_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DailyWeapon != nullptr)
		*DailyWeapon = std::move(Parms.DailyWeapon);

	return Parms.ReturnValue;

}


// Function Valhalla.ValShopManager.GetDailySuits
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventoryItem>SuitSkins                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValShopManager::GetDailySuits(TArray<struct Valhalla_InventoryItem>* SuitSkins)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetDailySuits");

	Params::AValShopManager_GetDailySuits_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SuitSkins != nullptr)
		*SuitSkins = std::move(Parms.SuitSkins);

}


// Function Valhalla.ValShopManager.GetDailySuitAt
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      DailySuit                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValShopManager::GetDailySuitAt(int32 Index, struct Valhalla_InventoryItem* DailySuit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "GetDailySuitAt");

	Params::AValShopManager_GetDailySuitAt_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DailySuit != nullptr)
		*DailySuit = std::move(Parms.DailySuit);

	return Parms.ReturnValue;

}


// Function Valhalla.ValShopManager.ClientPurchaseResponse
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct CoreUObject_Guid            InventoryId                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EShopPurchaseResponse   Response                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValShopManager::ClientPurchaseResponse(struct CoreUObject_Guid& InventoryId, enum class EShopPurchaseResponse Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValShopManager", "ClientPurchaseResponse");

	Params::AValShopManager_ClientPurchaseResponse_Params Parms{};

	Parms.InventoryId = InventoryId;
	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.CosmeticGenerator
// (None)

class UClass* UCosmeticGenerator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("CosmeticGenerator");

	return Clss;
}


// CosmeticGenerator Valhalla.Default__CosmeticGenerator
// (Public, ClassDefaultObject, ArchetypeObject)

class UCosmeticGenerator* UCosmeticGenerator::GetDefaultObj()
{
	static class UCosmeticGenerator* Default = nullptr;

	if (!Default)
		Default = static_cast<UCosmeticGenerator*>(UCosmeticGenerator::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.CustomNameGenerator
// (None)

class UClass* UCustomNameGenerator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("CustomNameGenerator");

	return Clss;
}


// CustomNameGenerator Valhalla.Default__CustomNameGenerator
// (Public, ClassDefaultObject, ArchetypeObject)

class UCustomNameGenerator* UCustomNameGenerator::GetDefaultObj()
{
	static class UCustomNameGenerator* Default = nullptr;

	if (!Default)
		Default = static_cast<UCustomNameGenerator*>(UCustomNameGenerator::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValShopVolume
// (Actor)

class UClass* AValShopVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValShopVolume");

	return Clss;
}


// ValShopVolume Valhalla.Default__ValShopVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValShopVolume* AValShopVolume::GetDefaultObj()
{
	static class AValShopVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValShopVolume*>(AValShopVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValSkydiveVolume
// (Actor)

class UClass* AValSkydiveVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSkydiveVolume");

	return Clss;
}


// ValSkydiveVolume Valhalla.Default__ValSkydiveVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSkydiveVolume* AValSkydiveVolume::GetDefaultObj()
{
	static class AValSkydiveVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSkydiveVolume*>(AValSkydiveVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValSmoothProgressBar
// (None)

class UClass* UValSmoothProgressBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSmoothProgressBar");

	return Clss;
}


// ValSmoothProgressBar Valhalla.Default__ValSmoothProgressBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSmoothProgressBar* UValSmoothProgressBar::GetDefaultObj()
{
	static class UValSmoothProgressBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSmoothProgressBar*>(UValSmoothProgressBar::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSmoothProgressBar.StopSmoothProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValSmoothProgressBar::StopSmoothProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSmoothProgressBar", "StopSmoothProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSmoothProgressBar.SetSmoothProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSmoothProgressBar::SetSmoothProgress(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSmoothProgressBar", "SetSmoothProgress");

	Params::UValSmoothProgressBar_SetSmoothProgress_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSocialHubBeaconClient
// (Actor)

class UClass* AValSocialHubBeaconClient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSocialHubBeaconClient");

	return Clss;
}


// ValSocialHubBeaconClient Valhalla.Default__ValSocialHubBeaconClient
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSocialHubBeaconClient* AValSocialHubBeaconClient::GetDefaultObj()
{
	static class AValSocialHubBeaconClient* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSocialHubBeaconClient*>(AValSocialHubBeaconClient::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSocialHubBeaconClient.ServerVerifyGameVersion
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      ClientVersion                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSocialHubBeaconClient::ServerVerifyGameVersion(const class FString& ClientVersion)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSocialHubBeaconClient", "ServerVerifyGameVersion");

	Params::AValSocialHubBeaconClient_ServerVerifyGameVersion_Params Parms{};

	Parms.ClientVersion = ClientVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSocialHubBeaconClient.ClientGameVersionVerified
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               VersionValid                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSocialHubBeaconClient::ClientGameVersionVerified(bool VersionValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSocialHubBeaconClient", "ClientGameVersionVerified");

	Params::AValSocialHubBeaconClient_ClientGameVersionVerified_Params Parms{};

	Parms.VersionValid = VersionValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSocialHubBeaconHost
// (Actor)

class UClass* AValSocialHubBeaconHost::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSocialHubBeaconHost");

	return Clss;
}


// ValSocialHubBeaconHost Valhalla.Default__ValSocialHubBeaconHost
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSocialHubBeaconHost* AValSocialHubBeaconHost::GetDefaultObj()
{
	static class AValSocialHubBeaconHost* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSocialHubBeaconHost*>(AValSocialHubBeaconHost::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValSpectatorPawn
// (Actor, Pawn)

class UClass* AValSpectatorPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSpectatorPawn");

	return Clss;
}


// ValSpectatorPawn Valhalla.Default__ValSpectatorPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSpectatorPawn* AValSpectatorPawn::GetDefaultObj()
{
	static class AValSpectatorPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSpectatorPawn*>(AValSpectatorPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSpectatorPawn.SpectatePrev
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AValSpectatorPawn::SpectatePrev()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpectatorPawn", "SpectatePrev");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSpectatorPawn.SpectateNext
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AValSpectatorPawn::SpectateNext()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpectatorPawn", "SpectateNext");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSpreadPattern
// (None)

class UClass* UValSpreadPattern::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSpreadPattern");

	return Clss;
}


// ValSpreadPattern Valhalla.Default__ValSpreadPattern
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSpreadPattern* UValSpreadPattern::GetDefaultObj()
{
	static class UValSpreadPattern* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSpreadPattern*>(UValSpreadPattern::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStoreItem
// (None)

class UClass* UValStoreItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStoreItem");

	return Clss;
}


// ValStoreItem Valhalla.Default__ValStoreItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStoreItem* UValStoreItem::GetDefaultObj()
{
	static class UValStoreItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStoreItem*>(UValStoreItem::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStoreItemHelper
// (None)

class UClass* UValStoreItemHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStoreItemHelper");

	return Clss;
}


// ValStoreItemHelper Valhalla.Default__ValStoreItemHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStoreItemHelper* UValStoreItemHelper::GetDefaultObj()
{
	static class UValStoreItemHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStoreItemHelper*>(UValStoreItemHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStoreWidget
// (None)

class UClass* UValStoreWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStoreWidget");

	return Clss;
}


// ValStoreWidget Valhalla.Default__ValStoreWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStoreWidget* UValStoreWidget::GetDefaultObj()
{
	static class UValStoreWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStoreWidget*>(UValStoreWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValSuicideExecutionCalc
// (None)

class UClass* UValSuicideExecutionCalc::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSuicideExecutionCalc");

	return Clss;
}


// ValSuicideExecutionCalc Valhalla.Default__ValSuicideExecutionCalc
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSuicideExecutionCalc* UValSuicideExecutionCalc::GetDefaultObj()
{
	static class UValSuicideExecutionCalc* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSuicideExecutionCalc*>(UValSuicideExecutionCalc::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValSupportComponent
// (None)

class UClass* UValSupportComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSupportComponent");

	return Clss;
}


// ValSupportComponent Valhalla.Default__ValSupportComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSupportComponent* UValSupportComponent::GetDefaultObj()
{
	static class UValSupportComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSupportComponent*>(UValSupportComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSupportComponent.OnAllyDied
// (Final, Native, Public)
// Parameters:
// float                              RespawnTimer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSupportComponent::OnAllyDied(float RespawnTimer, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSupportComponent", "OnAllyDied");

	Params::UValSupportComponent_OnAllyDied_Params Parms{};

	Parms.RespawnTimer = RespawnTimer;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValTargetType
// (None)

class UClass* UValTargetType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTargetType");

	return Clss;
}


// ValTargetType Valhalla.Default__ValTargetType
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTargetType* UValTargetType::GetDefaultObj()
{
	static class UValTargetType* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTargetType*>(UValTargetType::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValTargetType.GetTargets
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AValCharacter*               TargetingCharacter                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetingActor                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayEventDataEventData                                                        (Parm, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_GameplayAbilityTargetDataHandle>OutTargetData                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct Engine_HitResult>    OutHitResults                                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OutActors                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValTargetType::GetTargets(class AValCharacter* TargetingCharacter, class AActor* TargetingActor, const struct GameplayAbilities_GameplayEventData& EventData, TArray<struct GameplayAbilities_GameplayAbilityTargetDataHandle>* OutTargetData, TArray<struct Engine_HitResult>* OutHitResults, TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTargetType", "GetTargets");

	Params::UValTargetType_GetTargets_Params Parms{};

	Parms.TargetingCharacter = TargetingCharacter;
	Parms.TargetingActor = TargetingActor;
	Parms.EventData = EventData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTargetData != nullptr)
		*OutTargetData = std::move(Parms.OutTargetData);

	if (OutHitResults != nullptr)
		*OutHitResults = std::move(Parms.OutHitResults);

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);

}


// Class Valhalla.ValTargetType_UseOwner
// (None)

class UClass* UValTargetType_UseOwner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTargetType_UseOwner");

	return Clss;
}


// ValTargetType_UseOwner Valhalla.Default__ValTargetType_UseOwner
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTargetType_UseOwner* UValTargetType_UseOwner::GetDefaultObj()
{
	static class UValTargetType_UseOwner* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTargetType_UseOwner*>(UValTargetType_UseOwner::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTargetType_UseEventData
// (None)

class UClass* UValTargetType_UseEventData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTargetType_UseEventData");

	return Clss;
}


// ValTargetType_UseEventData Valhalla.Default__ValTargetType_UseEventData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTargetType_UseEventData* UValTargetType_UseEventData::GetDefaultObj()
{
	static class UValTargetType_UseEventData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTargetType_UseEventData*>(UValTargetType_UseEventData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTeamState
// (Actor)

class UClass* AValTeamState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTeamState");

	return Clss;
}


// ValTeamState Valhalla.Default__ValTeamState
// (Public, ClassDefaultObject, ArchetypeObject)

class AValTeamState* AValTeamState::GetDefaultObj()
{
	static class AValTeamState* Default = nullptr;

	if (!Default)
		Default = static_cast<AValTeamState*>(AValTeamState::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValTeamState.UpdateMemberDead
// (Final, Native, Public)
// Parameters:
// bool                               bDead                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::UpdateMemberDead(bool bDead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "UpdateMemberDead");

	Params::AValTeamState_UpdateMemberDead_Params Parms{};

	Parms.bDead = bDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetTeamLivesRemaining
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetTeamLivesRemaining(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetTeamLivesRemaining");

	Params::AValTeamState_SetTeamLivesRemaining_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetPreRoundTimer
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetPreRoundTimer(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetPreRoundTimer");

	Params::AValTeamState_SetPreRoundTimer_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetMissionTimer
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetMissionTimer(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetMissionTimer");

	Params::AValTeamState_SetMissionTimer_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetMissionState
// (Final, Native, Public)
// Parameters:
// class AValUtopiaMissionState*      NewMissionState                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetMissionState(class AValUtopiaMissionState* NewMissionState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetMissionState");

	Params::AValTeamState_SetMissionState_Params Parms{};

	Parms.NewMissionState = NewMissionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetMissionScore
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetMissionScore(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetMissionScore");

	Params::AValTeamState_SetMissionScore_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetMission
// (Final, Native, Public)
// Parameters:
// class AValUtopiaMission*           Mission                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetMission(class AValUtopiaMission* Mission)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetMission");

	Params::AValTeamState_SetMission_Params Parms{};

	Parms.Mission = Mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetMaxSecurityLevelAccess
// (Final, Native, Public)
// Parameters:
// enum class ESecurityLevel          SecurityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetMaxSecurityLevelAccess(enum class ESecurityLevel SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetMaxSecurityLevelAccess");

	Params::AValTeamState_SetMaxSecurityLevelAccess_Params Parms{};

	Parms.SecurityLevel = SecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.SetIsScrubTeam
// (Final, Native, Public)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::SetIsScrubTeam(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "SetIsScrubTeam");

	Params::AValTeamState_SetIsScrubTeam_Params Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.RemoveAllReviveBeacons
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValTeamState::RemoveAllReviveBeacons()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "RemoveAllReviveBeacons");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnTeamStateChanged
// (Final, Native, Private)
// Parameters:

void AValTeamState::OnTeamStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnTeamStateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction Valhalla.ValTeamState.OnTeamStateChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AValTeamState*               PTeamState                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::OnTeamStateChange__DelegateSignature(class AValTeamState* PTeamState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnTeamStateChange__DelegateSignature");

	Params::AValTeamState_OnTeamStateChange__DelegateSignature_Params Parms{};

	Parms.PTeamState = PTeamState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValTeamState.OnRep_TeamLivesRemaining
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_TeamLivesRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_TeamLivesRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_TeamEliminated
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_TeamEliminated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_TeamEliminated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_PreRoundTimer
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_PreRoundTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_PreRoundTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_ObjectivePoint
// (Final, Native, Protected)
// Parameters:
// class AValUtopiaObjectivePoint*    OldObjectivePoint                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::OnRep_ObjectivePoint(class AValUtopiaObjectivePoint* OldObjectivePoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_ObjectivePoint");

	Params::AValTeamState_OnRep_ObjectivePoint_Params Parms{};

	Parms.OldObjectivePoint = OldObjectivePoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MissionTimer
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MissionTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MissionTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MissionState
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MissionState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MissionState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MissionScore
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MissionScore()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MissionScore");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MissionEnemies
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MissionEnemies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MissionEnemies");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MissionDescription
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MissionDescription()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MissionDescription");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_Mission
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_Mission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_Mission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_MatchPlace
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_MatchPlace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_MatchPlace");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.OnRep_IsScrubTeam
// (Final, Native, Protected)
// Parameters:

void AValTeamState::OnRep_IsScrubTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "OnRep_IsScrubTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.NotifyMissionComplete
// (Final, Native, Public)
// Parameters:
// bool                               Winner                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValTeamState::NotifyMissionComplete(bool Winner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "NotifyMissionComplete");

	Params::AValTeamState_NotifyMissionComplete_Params Parms{};

	Parms.Winner = Winner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.Multicast_OnUpdateMemberDeathState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AValTeamState::Multicast_OnUpdateMemberDeathState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "Multicast_OnUpdateMemberDeathState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.IsSpectatedTeamState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValTeamState::IsSpectatedTeamState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "IsSpectatedTeamState");

	Params::AValTeamState_IsSpectatedTeamState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.IsScrubTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValTeamState::IsScrubTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "IsScrubTeam");

	Params::AValTeamState_IsScrubTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.IsLocalTeamState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValTeamState::IsLocalTeamState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "IsLocalTeamState");

	Params::AValTeamState_IsLocalTeamState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.IsEliminated
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValTeamState::IsEliminated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "IsEliminated");

	Params::AValTeamState_IsEliminated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetTeamLivesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetTeamLivesRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetTeamLivesRemaining");

	Params::AValTeamState_GetTeamLivesRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetRevivablePlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValPlayerState_Frontier*>RevivablePlayers                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValTeamState::GetRevivablePlayers(TArray<class AValPlayerState_Frontier*>* RevivablePlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetRevivablePlayers");

	Params::AValTeamState_GetRevivablePlayers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RevivablePlayers != nullptr)
		*RevivablePlayers = std::move(Parms.RevivablePlayers);

}


// Function Valhalla.ValTeamState.GetRespawningPlayerNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetRespawningPlayerNum()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetRespawningPlayerNum");

	Params::AValTeamState_GetRespawningPlayerNum_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetPlayerCount
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetPlayerCount");

	Params::AValTeamState_GetPlayerCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetOrCreateBotSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValSquad*                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSquad* AValTeamState::GetOrCreateBotSquad()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetOrCreateBotSquad");

	Params::AValTeamState_GetOrCreateBotSquad_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetObjectivePoint
// (Final, Native, Public)
// Parameters:
// class AValUtopiaObjectivePoint*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValUtopiaObjectivePoint* AValTeamState::GetObjectivePoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetObjectivePoint");

	Params::AValTeamState_GetObjectivePoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetNumRevivablePlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetNumRevivablePlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetNumRevivablePlayers");

	Params::AValTeamState_GetNumRevivablePlayers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetNonEliminatedPlayerNum
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetNonEliminatedPlayerNum()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetNonEliminatedPlayerNum");

	Params::AValTeamState_GetNonEliminatedPlayerNum_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetMissionWins
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetMissionWins()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetMissionWins");

	Params::AValTeamState_GetMissionWins_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetMissionScore
// (Final, Native, Public)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetMissionScore()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetMissionScore");

	Params::AValTeamState_GetMissionScore_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetMaxSecurityLevelAccess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESecurityLevel          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESecurityLevel AValTeamState::GetMaxSecurityLevelAccess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetMaxSecurityLevelAccess");

	Params::AValTeamState_GetMaxSecurityLevelAccess_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetMatchPlace
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetMatchPlace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetMatchPlace");

	Params::AValTeamState_GetMatchPlace_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetLivingPlayerNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetLivingPlayerNum()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetLivingPlayerNum");

	Params::AValTeamState_GetLivingPlayerNum_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetDeadPlayerNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValTeamState::GetDeadPlayerNum()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetDeadPlayerNum");

	Params::AValTeamState_GetDeadPlayerNum_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetBotSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValSquad*                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSquad* AValTeamState::GetBotSquad()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetBotSquad");

	Params::AValTeamState_GetBotSquad_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.GetAverageLocation
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValTeamState::GetAverageLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "GetAverageLocation");

	Params::AValTeamState_GetAverageLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamState.CacheAverageLocation
// (Final, Native, Public)
// Parameters:

void AValTeamState::CacheAverageLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "CacheAverageLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTeamState.AddMissionWin
// (Final, Native, Public)
// Parameters:

void AValTeamState::AddMissionWin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamState", "AddMissionWin");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValThrowable
// (None)

class UClass* IValThrowable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValThrowable");

	return Clss;
}


// ValThrowable Valhalla.Default__ValThrowable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValThrowable* IValThrowable::GetDefaultObj()
{
	static class IValThrowable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValThrowable*>(IValThrowable::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDivisionConfig
// (None)

class UClass* UValDivisionConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDivisionConfig");

	return Clss;
}


// ValDivisionConfig Valhalla.Default__ValDivisionConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDivisionConfig* UValDivisionConfig::GetDefaultObj()
{
	static class UValDivisionConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDivisionConfig*>(UValDivisionConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTierConfig
// (None)

class UClass* UValTierConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTierConfig");

	return Clss;
}


// ValTierConfig Valhalla.Default__ValTierConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTierConfig* UValTierConfig::GetDefaultObj()
{
	static class UValTierConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTierConfig*>(UValTierConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameStatArchiver
// (None)

class UClass* UValGameStatArchiver::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameStatArchiver");

	return Clss;
}


// ValGameStatArchiver Valhalla.Default__ValGameStatArchiver
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameStatArchiver* UValGameStatArchiver::GetDefaultObj()
{
	static class UValGameStatArchiver* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameStatArchiver*>(UValGameStatArchiver::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValJetpackMeshData
// (None)

class UClass* UValJetpackMeshData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValJetpackMeshData");

	return Clss;
}


// ValJetpackMeshData Valhalla.Default__ValJetpackMeshData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValJetpackMeshData* UValJetpackMeshData::GetDefaultObj()
{
	static class UValJetpackMeshData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValJetpackMeshData*>(UValJetpackMeshData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.DataColorConfig
// (None)

class UClass* UDataColorConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("DataColorConfig");

	return Clss;
}


// DataColorConfig Valhalla.Default__DataColorConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UDataColorConfig* UDataColorConfig::GetDefaultObj()
{
	static class UDataColorConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UDataColorConfig*>(UDataColorConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValLootConfigData
// (None)

class UClass* UValLootConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLootConfigData");

	return Clss;
}


// ValLootConfigData Valhalla.Default__ValLootConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValLootConfigData* UValLootConfigData::GetDefaultObj()
{
	static class UValLootConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValLootConfigData*>(UValLootConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAbilityConfigData
// (None)

class UClass* UValAbilityConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAbilityConfigData");

	return Clss;
}


// ValAbilityConfigData Valhalla.Default__ValAbilityConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAbilityConfigData* UValAbilityConfigData::GetDefaultObj()
{
	static class UValAbilityConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAbilityConfigData*>(UValAbilityConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValWeaponCosmeticConfigData
// (None)

class UClass* UValWeaponCosmeticConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValWeaponCosmeticConfigData");

	return Clss;
}


// ValWeaponCosmeticConfigData Valhalla.Default__ValWeaponCosmeticConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValWeaponCosmeticConfigData* UValWeaponCosmeticConfigData::GetDefaultObj()
{
	static class UValWeaponCosmeticConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValWeaponCosmeticConfigData*>(UValWeaponCosmeticConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterInputConfigData
// (None)

class UClass* UValCharacterInputConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterInputConfigData");

	return Clss;
}


// ValCharacterInputConfigData Valhalla.Default__ValCharacterInputConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterInputConfigData* UValCharacterInputConfigData::GetDefaultObj()
{
	static class UValCharacterInputConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterInputConfigData*>(UValCharacterInputConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValControllerInputConfigData
// (None)

class UClass* UValControllerInputConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValControllerInputConfigData");

	return Clss;
}


// ValControllerInputConfigData Valhalla.Default__ValControllerInputConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValControllerInputConfigData* UValControllerInputConfigData::GetDefaultObj()
{
	static class UValControllerInputConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValControllerInputConfigData*>(UValControllerInputConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValMasteriesConfigData
// (None)

class UClass* UValMasteriesConfigData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValMasteriesConfigData");

	return Clss;
}


// ValMasteriesConfigData Valhalla.Default__ValMasteriesConfigData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValMasteriesConfigData* UValMasteriesConfigData::GetDefaultObj()
{
	static class UValMasteriesConfigData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValMasteriesConfigData*>(UValMasteriesConfigData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStatModMap
// (None)

class UClass* UValStatModMap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStatModMap");

	return Clss;
}


// ValStatModMap Valhalla.Default__ValStatModMap
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStatModMap* UValStatModMap::GetDefaultObj()
{
	static class UValStatModMap* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStatModMap*>(UValStatModMap::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValUIGameMinimapMarker
// (None)

class UClass* UValUIGameMinimapMarker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUIGameMinimapMarker");

	return Clss;
}


// ValUIGameMinimapMarker Valhalla.Default__ValUIGameMinimapMarker
// (Public, ClassDefaultObject, ArchetypeObject)

class UValUIGameMinimapMarker* UValUIGameMinimapMarker::GetDefaultObj()
{
	static class UValUIGameMinimapMarker* Default = nullptr;

	if (!Default)
		Default = static_cast<UValUIGameMinimapMarker*>(UValUIGameMinimapMarker::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUIGameMinimapMarker.UpdateLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ObjectiveLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValUIGameMinimapMarker::UpdateLocation(class UObject* WorldContextObject, const struct CoreUObject_Vector& ObjectiveLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIGameMinimapMarker", "UpdateLocation");

	Params::UValUIGameMinimapMarker_UpdateLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectiveLocation = ObjectiveLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUIGameMinimapMarker.UpdateActorLocation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ObjectiveActor                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValUIGameMinimapMarker::UpdateActorLocation(class UObject* WorldContextObject, class AActor* ObjectiveActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIGameMinimapMarker", "UpdateActorLocation");

	Params::UValUIGameMinimapMarker_UpdateActorLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectiveActor = ObjectiveActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUIGameMinimapMarker.UpdateActive
// (Event, Protected, BlueprintEvent)
// Parameters:

void UValUIGameMinimapMarker::UpdateActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIGameMinimapMarker", "UpdateActive");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValUIGameMinimapMarker.IsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValUIGameMinimapMarker::IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIGameMinimapMarker", "IsActive");

	Params::UValUIGameMinimapMarker_IsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.UIJiggle
// (None)

class UClass* UUIJiggle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("UIJiggle");

	return Clss;
}


// UIJiggle Valhalla.Default__UIJiggle
// (Public, ClassDefaultObject, ArchetypeObject)

class UUIJiggle* UUIJiggle::GetDefaultObj()
{
	static class UUIJiggle* Default = nullptr;

	if (!Default)
		Default = static_cast<UUIJiggle*>(UUIJiggle::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValUIManagerSubsystem
// (None)

class UClass* UValUIManagerSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUIManagerSubsystem");

	return Clss;
}


// ValUIManagerSubsystem Valhalla.Default__ValUIManagerSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UValUIManagerSubsystem* UValUIManagerSubsystem::GetDefaultObj()
{
	static class UValUIManagerSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UValUIManagerSubsystem*>(UValUIManagerSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValUpgradableAbility
// (None)

class UClass* IValUpgradableAbility::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUpgradableAbility");

	return Clss;
}


// ValUpgradableAbility Valhalla.Default__ValUpgradableAbility
// (Public, ClassDefaultObject, ArchetypeObject)

class IValUpgradableAbility* IValUpgradableAbility::GetDefaultObj()
{
	static class IValUpgradableAbility* Default = nullptr;

	if (!Default)
		Default = static_cast<IValUpgradableAbility*>(IValUpgradableAbility::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUpgradableAbility.SetAbilityRange
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::SetAbilityRange(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "SetAbilityRange");

	Params::IValUpgradableAbility_SetAbilityRange_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUpgradableAbility.SetAbilityProjectileSpeed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::SetAbilityProjectileSpeed(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "SetAbilityProjectileSpeed");

	Params::IValUpgradableAbility_SetAbilityProjectileSpeed_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUpgradableAbility.SetAbilityDuration
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::SetAbilityDuration(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "SetAbilityDuration");

	Params::IValUpgradableAbility_SetAbilityDuration_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUpgradableAbility.SetAbilityDeployTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::SetAbilityDeployTime(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "SetAbilityDeployTime");

	Params::IValUpgradableAbility_SetAbilityDeployTime_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUpgradableAbility.SetAbilityCastTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::SetAbilityCastTime(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "SetAbilityCastTime");

	Params::IValUpgradableAbility_SetAbilityCastTime_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUpgradableAbility.GetAbilityRange
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityRange");

	Params::IValUpgradableAbility_GetAbilityRange_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityProjectileSpeed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityProjectileSpeed(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityProjectileSpeed");

	Params::IValUpgradableAbility_GetAbilityProjectileSpeed_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityEffectsToApply
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UGameplayEffect>>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UGameplayEffect>> IValUpgradableAbility::GetAbilityEffectsToApply()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityEffectsToApply");

	Params::IValUpgradableAbility_GetAbilityEffectsToApply_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityDuration
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityDuration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityDuration");

	Params::IValUpgradableAbility_GetAbilityDuration_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityDeployTime
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityDeployTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityDeployTime");

	Params::IValUpgradableAbility_GetAbilityDeployTime_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityCooldownModifier
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityCooldownModifier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityCooldownModifier");

	Params::IValUpgradableAbility_GetAbilityCooldownModifier_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.GetAbilityCastTime
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IValUpgradableAbility::GetAbilityCastTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "GetAbilityCastTime");

	Params::IValUpgradableAbility_GetAbilityCastTime_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUpgradableAbility.AddAbilityEffectToApply
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UGameplayEffect> Value                                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValUpgradableAbility::AddAbilityEffectToApply(TSubclassOf<class UGameplayEffect> Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUpgradableAbility", "AddAbilityEffectToApply");

	Params::IValUpgradableAbility_AddAbilityEffectToApply_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValUtopiaBotSpawner
// (Actor)

class UClass* AValUtopiaBotSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaBotSpawner");

	return Clss;
}


// ValUtopiaBotSpawner Valhalla.Default__ValUtopiaBotSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaBotSpawner* AValUtopiaBotSpawner::GetDefaultObj()
{
	static class AValUtopiaBotSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaBotSpawner*>(AValUtopiaBotSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaBotSpawner.SpawnBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValUtopiaBotSpawner::SpawnBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaBotSpawner", "SpawnBot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaBotSpawner.Activate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Active                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaBotSpawner::Activate(bool Active)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaBotSpawner", "Activate");

	Params::AValUtopiaBotSpawner_Activate_Params Parms{};

	Parms.Active = Active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValUtopiaMission
// (Actor)

class UClass* AValUtopiaMission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaMission");

	return Clss;
}


// ValUtopiaMission Valhalla.Default__ValUtopiaMission
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaMission* AValUtopiaMission::GetDefaultObj()
{
	static class AValUtopiaMission* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaMission*>(AValUtopiaMission::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaMission.TickDownPreRoundTimer
// (Final, Native, Protected)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaMission::TickDownPreRoundTimer(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "TickDownPreRoundTimer");

	Params::AValUtopiaMission_TickDownPreRoundTimer_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.TickDownMissionTimer
// (Final, Native, Protected)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaMission::TickDownMissionTimer(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "TickDownMissionTimer");

	Params::AValUtopiaMission_TickDownMissionTimer_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.StartMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValUtopiaMission::StartMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "StartMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaMission.SetTeamScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              TeamNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamScore                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Found                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaMission::SetTeamScore(int32 TeamNumber, int32 TeamScore, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "SetTeamScore");

	Params::AValUtopiaMission_SetTeamScore_Params Parms{};

	Parms.TeamNumber = TeamNumber;
	Parms.TeamScore = TeamScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Found != nullptr)
		*Found = Parms.Found;

}


// Function Valhalla.ValUtopiaMission.SelectPlayerStart
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>              ValidPlayerStarts                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValUtopiaMission::SelectPlayerStart(TArray<class AActor*>& ValidPlayerStarts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "SelectPlayerStart");

	Params::AValUtopiaMission_SelectPlayerStart_Params Parms{};

	Parms.ValidPlayerStarts = ValidPlayerStarts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.OnStartMission
// (Event, Public, BlueprintEvent)
// Parameters:

void AValUtopiaMission::OnStartMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "OnStartMission");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValUtopiaMission.OnMissionTimerFinished
// (Event, Public, BlueprintEvent)
// Parameters:

void AValUtopiaMission::OnMissionTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "OnMissionTimerFinished");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValUtopiaMission.OnMissionTimeOverridden
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              OldTime                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewTime                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaMission::OnMissionTimeOverridden(float OldTime, float NewTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "OnMissionTimeOverridden");

	Params::AValUtopiaMission_OnMissionTimeOverridden_Params Parms{};

	Parms.OldTime = OldTime;
	Parms.NewTime = NewTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUtopiaMission.OnEndMission
// (Event, Public, BlueprintEvent)
// Parameters:

void AValUtopiaMission::OnEndMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "OnEndMission");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValUtopiaMission.OnBeginPreRound
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              PreRoundTime                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaMission::OnBeginPreRound(float PreRoundTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "OnBeginPreRound");

	Params::AValUtopiaMission_OnBeginPreRound_Params Parms{};

	Parms.PreRoundTime = PreRoundTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUtopiaMission.IsValidMission
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaMission::IsValidMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "IsValidMission");

	Params::AValUtopiaMission_IsValidMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.IsPlayerAssignedToMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*           Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaMission::IsPlayerAssignedToMission(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "IsPlayerAssignedToMission");

	Params::AValUtopiaMission_IsPlayerAssignedToMission_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.HasTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaMission::HasTeam(int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "HasTeam");

	Params::AValUtopiaMission_HasTeam_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetWinningTeam
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValTeamState*>       LosingTeams                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AValTeamState*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValTeamState* AValUtopiaMission::GetWinningTeam(TArray<class AValTeamState*>* LosingTeams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetWinningTeam");

	Params::AValUtopiaMission_GetWinningTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LosingTeams != nullptr)
		*LosingTeams = std::move(Parms.LosingTeams);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetTeamScore
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              TeamNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Found                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValUtopiaMission::GetTeamScore(int32 TeamNumber, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetTeamScore");

	Params::AValUtopiaMission_GetTeamScore_Params Parms{};

	Parms.TeamNumber = TeamNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Found != nullptr)
		*Found = Parms.Found;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetTeamNums
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AValUtopiaMission::GetTeamNums()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetTeamNums");

	Params::AValUtopiaMission_GetTeamNums_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValTeamState*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValTeamState* AValUtopiaMission::GetTeam(int32 TeamNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetTeam");

	Params::AValUtopiaMission_GetTeam_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetNumRequiredTeams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValUtopiaMission::GetNumRequiredTeams()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetNumRequiredTeams");

	Params::AValUtopiaMission_GetNumRequiredTeams_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaMission.GetEnemyTeams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AValTeamState*               OtherTeam                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AValTeamState*>       EnemyTeams                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValUtopiaMission::GetEnemyTeams(class AValTeamState* OtherTeam, TArray<class AValTeamState*>* EnemyTeams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetEnemyTeams");

	Params::AValUtopiaMission_GetEnemyTeams_Params Parms{};

	Parms.OtherTeam = OtherTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EnemyTeams != nullptr)
		*EnemyTeams = std::move(Parms.EnemyTeams);

}


// Function Valhalla.ValUtopiaMission.GetDataRowName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        RowName                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaMission::GetDataRowName(class FName* RowName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetDataRowName");

	Params::AValUtopiaMission_GetDataRowName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RowName != nullptr)
		*RowName = Parms.RowName;

}


// Function Valhalla.ValUtopiaMission.GetAssignedPlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValPlayerController*>OutPlayers                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValUtopiaMission::GetAssignedPlayers(TArray<class AValPlayerController*>* OutPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "GetAssignedPlayers");

	Params::AValUtopiaMission_GetAssignedPlayers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutPlayers != nullptr)
		*OutPlayers = std::move(Parms.OutPlayers);

}


// Function Valhalla.ValUtopiaMission.EndMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValUtopiaMission::EndMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "EndMission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaMission.BeginPreRound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              PreRoundTime                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaMission::BeginPreRound(float PreRoundTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMission", "BeginPreRound");

	Params::AValUtopiaMission_BeginPreRound_Params Parms{};

	Parms.PreRoundTime = PreRoundTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValUtopiaMissionState
// (Actor)

class UClass* AValUtopiaMissionState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaMissionState");

	return Clss;
}


// ValUtopiaMissionState Valhalla.Default__ValUtopiaMissionState
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaMissionState* AValUtopiaMissionState::GetDefaultObj()
{
	static class AValUtopiaMissionState* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaMissionState*>(AValUtopiaMissionState::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaMissionState.OnRep_MissionPhase
// (Final, Native, Public)
// Parameters:

void AValUtopiaMissionState::OnRep_MissionPhase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMissionState", "OnRep_MissionPhase");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValUtopiaMissionState_Domination
// (Actor)

class UClass* AValUtopiaMissionState_Domination::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaMissionState_Domination");

	return Clss;
}


// ValUtopiaMissionState_Domination Valhalla.Default__ValUtopiaMissionState_Domination
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaMissionState_Domination* AValUtopiaMissionState_Domination::GetDefaultObj()
{
	static class AValUtopiaMissionState_Domination* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaMissionState_Domination*>(AValUtopiaMissionState_Domination::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaMissionState_Domination.OnRep_ObjectivePointDataArray
// (Final, Native, Public)
// Parameters:

void AValUtopiaMissionState_Domination::OnRep_ObjectivePointDataArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaMissionState_Domination", "OnRep_ObjectivePointDataArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValUtopiaObjectivePoint
// (Actor)

class UClass* AValUtopiaObjectivePoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaObjectivePoint");

	return Clss;
}


// ValUtopiaObjectivePoint Valhalla.Default__ValUtopiaObjectivePoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaObjectivePoint* AValUtopiaObjectivePoint::GetDefaultObj()
{
	static class AValUtopiaObjectivePoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaObjectivePoint*>(AValUtopiaObjectivePoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaObjectivePoint.SetHasBeenUsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               HasBeenUsed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaObjectivePoint::SetHasBeenUsed(bool HasBeenUsed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaObjectivePoint", "SetHasBeenUsed");

	Params::AValUtopiaObjectivePoint_SetHasBeenUsed_Params Parms{};

	Parms.HasBeenUsed = HasBeenUsed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaObjectivePoint.SetFogRadius
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaObjectivePoint::SetFogRadius(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaObjectivePoint", "SetFogRadius");

	Params::AValUtopiaObjectivePoint_SetFogRadius_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaObjectivePoint.GetPlayerStarts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValPlayerStart*>     ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class AValPlayerStart*> AValUtopiaObjectivePoint::GetPlayerStarts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaObjectivePoint", "GetPlayerStarts");

	Params::AValUtopiaObjectivePoint_GetPlayerStarts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaObjectivePoint.GetHasBeenUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaObjectivePoint::GetHasBeenUsed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaObjectivePoint", "GetHasBeenUsed");

	Params::AValUtopiaObjectivePoint_GetHasBeenUsed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaObjectivePoint.EnableFog
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaObjectivePoint::EnableFog(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaObjectivePoint", "EnableFog");

	Params::AValUtopiaObjectivePoint_EnableFog_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValVendingMachine
// (Actor)

class UClass* AValVendingMachine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendingMachine");

	return Clss;
}


// ValVendingMachine Valhalla.Default__ValVendingMachine
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendingMachine* AValVendingMachine::GetDefaultObj()
{
	static class AValVendingMachine* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendingMachine*>(AValVendingMachine::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendingMachine.SetShouldUseScrapCosts
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendingMachine::SetShouldUseScrapCosts(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "SetShouldUseScrapCosts");

	Params::AValVendingMachine_SetShouldUseScrapCosts_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendingMachine.SetScrapCosts
// (Final, Native, Public)
// Parameters:
// TMap<enum class EFabricatorShopType, int32>UpdatedCosts                                                     (Parm, NativeAccessSpecifierPublic)

void AValVendingMachine::SetScrapCosts(TMap<enum class EFabricatorShopType, int32> UpdatedCosts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "SetScrapCosts");

	Params::AValVendingMachine_SetScrapCosts_Params Parms{};

	Parms.UpdatedCosts = UpdatedCosts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendingMachine.ServerOnInteract
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValVendingMachine::ServerOnInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "ServerOnInteract");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValVendingMachine.PredictInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendingMachine::PredictInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "PredictInteract");

	Params::AValVendingMachine_PredictInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendingMachine.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendingMachine::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "Interact");

	Params::AValVendingMachine_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendingMachine.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValVendingMachine::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "GetInteractText");

	Params::AValVendingMachine_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendingMachine.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValVendingMachine::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "GetInteractComponent");

	Params::AValVendingMachine_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendingMachine.ClientOnInteract
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValVendingMachine::ClientOnInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "ClientOnInteract");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValVendingMachine.CheckCanInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendingMachine::CheckCanInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "CheckCanInteract");

	Params::AValVendingMachine_CheckCanInteract_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendingMachine.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendingMachine::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendingMachine", "CanInteract");

	Params::AValVendingMachine_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendorBase
// (Actor)

class UClass* AValVendorBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorBase");

	return Clss;
}


// ValVendorBase Valhalla.Default__ValVendorBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendorBase* AValVendorBase::GetDefaultObj()
{
	static class AValVendorBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendorBase*>(AValVendorBase::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorBase.ShouldEnforceCurrencyRequirements
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::ShouldEnforceCurrencyRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ShouldEnforceCurrencyRequirements");

	Params::AValVendorBase_ShouldEnforceCurrencyRequirements_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.ShouldEnforceCraftingRequirements
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::ShouldEnforceCraftingRequirements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ShouldEnforceCraftingRequirements");

	Params::AValVendorBase_ShouldEnforceCraftingRequirements_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.ServerTryToSellFromFilter
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_SoftClassPath   StashFilter                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorBase::ServerTryToSellFromFilter(const struct CoreUObject_SoftClassPath& StashFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ServerTryToSellFromFilter");

	Params::AValVendorBase_ServerTryToSellFromFilter_Params Parms{};

	Parms.StashFilter = StashFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.ServerSellItems
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            OrderReferenceId                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>InventoryItems                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorBase::ServerSellItems(struct CoreUObject_Guid& OrderReferenceId, TArray<struct Valhalla_InventoryItem>& InventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ServerSellItems");

	Params::AValVendorBase_ServerSellItems_Params Parms{};

	Parms.OrderReferenceId = OrderReferenceId;
	Parms.InventoryItems = InventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.ServerSalvageItem
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct CoreUObject_Guid            OrderReferenceId                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorBase::ServerSalvageItem(struct CoreUObject_Guid& OrderReferenceId, struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ServerSalvageItem");

	Params::AValVendorBase_ServerSalvageItem_Params Parms{};

	Parms.OrderReferenceId = OrderReferenceId;
	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.ServerPurchaseItem
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct Valhalla_VendorItem         RequestedItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorBase::ServerPurchaseItem(struct Valhalla_VendorItem& RequestedItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ServerPurchaseItem");

	Params::AValVendorBase_ServerPurchaseItem_Params Parms{};

	Parms.RequestedItem = RequestedItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.SellItems
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            OrderReferenceId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_InventoryItem>InventoryItems                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorBase::SellItems(struct CoreUObject_Guid& OrderReferenceId, TArray<struct Valhalla_InventoryItem>& InventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "SellItems");

	Params::AValVendorBase_SellItems_Params Parms{};

	Parms.OrderReferenceId = OrderReferenceId;
	Parms.InventoryItems = InventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.SellItem
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            OrderReferenceId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorBase::SellItem(struct CoreUObject_Guid& OrderReferenceId, struct Valhalla_InventoryItem& InventoryItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "SellItem");

	Params::AValVendorBase_SellItem_Params Parms{};

	Parms.OrderReferenceId = OrderReferenceId;
	Parms.InventoryItem = InventoryItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.SalvageItem
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Guid            OrderReferenceId                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorBase::SalvageItem(struct CoreUObject_Guid& OrderReferenceId, struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "SalvageItem");

	Params::AValVendorBase_SalvageItem_Params Parms{};

	Parms.OrderReferenceId = OrderReferenceId;
	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.PurchaseItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_VendorItem         RequestedItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorBase::PurchaseItem(struct Valhalla_VendorItem& RequestedItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "PurchaseItem");

	Params::AValVendorBase_PurchaseItem_Params Parms{};

	Parms.RequestedItem = RequestedItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.OnVendorItemsLoaded
// (Native, Protected)
// Parameters:

void AValVendorBase::OnVendorItemsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "OnVendorItemsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.OnVendorItemsLoadComplete
// (Native, Protected)
// Parameters:

void AValVendorBase::OnVendorItemsLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "OnVendorItemsLoadComplete");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.OnRep_RulesetClass
// (Native, Protected)
// Parameters:

void AValVendorBase::OnRep_RulesetClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "OnRep_RulesetClass");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.OnRep_DynamicItems
// (Native, Protected)
// Parameters:

void AValVendorBase::OnRep_DynamicItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "OnRep_DynamicItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.MeetsCurrencyRequirements
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::MeetsCurrencyRequirements(struct Valhalla_VendorItem& InVendorItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "MeetsCurrencyRequirements");

	Params::AValVendorBase_MeetsCurrencyRequirements_Params Parms{};

	Parms.InVendorItem = InVendorItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.MeetsCraftingRequirements
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::MeetsCraftingRequirements(struct Valhalla_VendorItem& InVendorItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "MeetsCraftingRequirements");

	Params::AValVendorBase_MeetsCraftingRequirements_Params Parms{};

	Parms.InVendorItem = InVendorItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.ItemShouldBeFilteredOut
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::ItemShouldBeFilteredOut(struct Valhalla_VendorItem& InVendorItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ItemShouldBeFilteredOut");

	Params::AValVendorBase_ItemShouldBeFilteredOut_Params Parms{};

	Parms.InVendorItem = InVendorItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetVendorItems
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_VendorItem> OutItems                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValVendorBase::GetVendorItems(TArray<struct Valhalla_VendorItem>* OutItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetVendorItems");

	Params::AValVendorBase_GetVendorItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutItems != nullptr)
		*OutItems = std::move(Parms.OutItems);

}


// Function Valhalla.ValVendorBase.GetVendorId
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AValVendorBase::GetVendorId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetVendorId");

	Params::AValVendorBase_GetVendorId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetVendorDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValVendorBase::GetVendorDisplayName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetVendorDisplayName");

	Params::AValVendorBase_GetVendorDisplayName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetVendorDescription
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValVendorBase::GetVendorDescription()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetVendorDescription");

	Params::AValVendorBase_GetVendorDescription_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetSortedVendorItems
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EItemSortOrder          SortType                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_VendorItem> OutItems                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValVendorBase::GetSortedVendorItems(enum class EItemSortOrder SortType, TArray<struct Valhalla_VendorItem>* OutItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetSortedVendorItems");

	Params::AValVendorBase_GetSortedVendorItems_Params Parms{};

	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutItems != nullptr)
		*OutItems = std::move(Parms.OutItems);

}


// Function Valhalla.ValVendorBase.GetSellPrice
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      InInventoryItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ShopItemPrice      ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ShopItemPrice AValVendorBase::GetSellPrice(struct Valhalla_InventoryItem& InInventoryItem, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetSellPrice");

	Params::AValVendorBase_GetSellPrice_Params Parms{};

	Parms.InInventoryItem = InInventoryItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetPreferredCurrencyItemId
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorBase::GetPreferredCurrencyItemId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetPreferredCurrencyItemId");

	Params::AValVendorBase_GetPreferredCurrencyItemId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetPlayerInventory
// (Final, Native, Public)
// Parameters:
// class UValPlayerInventory*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerInventory* AValVendorBase::GetPlayerInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetPlayerInventory");

	Params::AValVendorBase_GetPlayerInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetItemSalvageRecipeById
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, int32>                 OutRecipe                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::GetItemSalvageRecipeById(int32 ItemId, enum class ERarity Rarity, TMap<int32, int32>* OutRecipe)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetItemSalvageRecipeById");

	Params::AValVendorBase_GetItemSalvageRecipeById_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRecipe != nullptr)
		*OutRecipe = Parms.OutRecipe;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetItemSalvageRecipe
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_VendorItem         Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<int32, int32>                 OutRecipe                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::GetItemSalvageRecipe(struct Valhalla_VendorItem& Item, TMap<int32, int32>* OutRecipe)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetItemSalvageRecipe");

	Params::AValVendorBase_GetItemSalvageRecipe_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRecipe != nullptr)
		*OutRecipe = Parms.OutRecipe;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetItemCraftingRecipe
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_VendorItem         Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, int32>                 OutRecipe                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::GetItemCraftingRecipe(struct Valhalla_VendorItem& Item, int32 Quantity, TMap<int32, int32>* OutRecipe)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetItemCraftingRecipe");

	Params::AValVendorBase_GetItemCraftingRecipe_Params Parms{};

	Parms.Item = Item;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRecipe != nullptr)
		*OutRecipe = Parms.OutRecipe;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetInventorySellPrice
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Guid            InventoryId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorBase::GetInventorySellPrice(struct CoreUObject_Guid& InventoryId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetInventorySellPrice");

	Params::AValVendorBase_GetInventorySellPrice_Params Parms{};

	Parms.InventoryId = InventoryId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetInventoryItemQuantity
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorBase::GetInventoryItemQuantity(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetInventoryItemQuantity");

	Params::AValVendorBase_GetInventoryItemQuantity_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetInventoryItemFromVendorItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_InventoryItem      OutInventoryItem                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AValVendorBase::GetInventoryItemFromVendorItem(struct Valhalla_VendorItem& InVendorItem, struct Valhalla_InventoryItem* OutInventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetInventoryItemFromVendorItem");

	Params::AValVendorBase_GetInventoryItemFromVendorItem_Params Parms{};

	Parms.InVendorItem = InVendorItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutInventoryItem != nullptr)
		*OutInventoryItem = std::move(Parms.OutInventoryItem);

}


// Function Valhalla.ValVendorBase.GetCurrencyOwned
// (Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_ShopItemPrice      ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ShopItemPrice AValVendorBase::GetCurrencyOwned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetCurrencyOwned");

	Params::AValVendorBase_GetCurrencyOwned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.GetCraftingRecipeLimit
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<int32, int32>                 CraftingRecipe                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Limit                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::GetCraftingRecipeLimit(TMap<int32, int32>& CraftingRecipe, int32* Limit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "GetCraftingRecipeLimit");

	Params::AValVendorBase_GetCraftingRecipeLimit_Params Parms{};

	Parms.CraftingRecipe = CraftingRecipe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Limit != nullptr)
		*Limit = Parms.Limit;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.CreateFilters
// (Final, Native, Protected)
// Parameters:

void AValVendorBase::CreateFilters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "CreateFilters");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.ClientTryToSellFromFilter
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValVendorStashFilter*       StashFilter                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::ClientTryToSellFromFilter(class UValVendorStashFilter* StashFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ClientTryToSellFromFilter");

	Params::AValVendorBase_ClientTryToSellFromFilter_Params Parms{};

	Parms.StashFilter = StashFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.ClientNotifyPurchaseFail
// (Net, NetReliable, Native, Event, Protected, NetClient, BlueprintCallable)
// Parameters:
// enum class EPurchaseFailReason     FailReason                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorBase::ClientNotifyPurchaseFail(enum class EPurchaseFailReason FailReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "ClientNotifyPurchaseFail");

	Params::AValVendorBase_ClientNotifyPurchaseFail_Params Parms{};

	Parms.FailReason = FailReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorBase.CanSell
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_InventoryItem      InInventoryItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::CanSell(struct Valhalla_InventoryItem& InInventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "CanSell");

	Params::AValVendorBase_CanSell_Params Parms{};

	Parms.InInventoryItem = InInventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.CanPurchase
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EPurchaseFailReason     OutFailReason                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorBase::CanPurchase(struct Valhalla_VendorItem& InVendorItem, enum class EPurchaseFailReason* OutFailReason, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "CanPurchase");

	Params::AValVendorBase_CanPurchase_Params Parms{};

	Parms.InVendorItem = InVendorItem;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutFailReason != nullptr)
		*OutFailReason = Parms.OutFailReason;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.CalcNumSellable
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_InventoryItem      InInventoryItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorBase::CalcNumSellable(struct Valhalla_InventoryItem& InInventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "CalcNumSellable");

	Params::AValVendorBase_CalcNumSellable_Params Parms{};

	Parms.InInventoryItem = InInventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorBase.CalcNumPurchasable
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_VendorItem         InVendorItem                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorBase::CalcNumPurchasable(struct Valhalla_VendorItem& InVendorItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorBase", "CalcNumPurchasable");

	Params::AValVendorBase_CalcNumPurchasable_Params Parms{};

	Parms.InVendorItem = InVendorItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendor
// (Actor)

class UClass* AValVendor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendor");

	return Clss;
}


// ValVendor Valhalla.Default__ValVendor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendor* AValVendor::GetDefaultObj()
{
	static class AValVendor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendor*>(AValVendor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendor.UpdateItemLockStatus
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    LevelType                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendor::UpdateItemLockStatus(const struct GameplayTags_GameplayTag& LevelType, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "UpdateItemLockStatus");

	Params::AValVendor_UpdateItemLockStatus_Params Parms{};

	Parms.LevelType = LevelType;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendor.ShouldRegenerateAfterPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendor::ShouldRegenerateAfterPurchase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "ShouldRegenerateAfterPurchase");

	Params::AValVendor_ShouldRegenerateAfterPurchase_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendor.ShouldHideItemProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendor::ShouldHideItemProperties()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "ShouldHideItemProperties");

	Params::AValVendor_ShouldHideItemProperties_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendor.OnRep_ExpirationDate
// (Final, Native, Protected)
// Parameters:

void AValVendor::OnRep_ExpirationDate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "OnRep_ExpirationDate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendor.OnInventoryUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TArray<int32>                      ItemIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendor::OnInventoryUpdated(TArray<int32>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "OnInventoryUpdated");

	Params::AValVendor_OnInventoryUpdated_Params Parms{};

	Parms.ItemIds = ItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendor.OnInventoryLoaded
// (Final, Native, Protected)
// Parameters:

void AValVendor::OnInventoryLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "OnInventoryLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendor.GetItemGenerationMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EItemGenerationMode     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EItemGenerationMode AValVendor::GetItemGenerationMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "GetItemGenerationMode");

	Params::AValVendor_GetItemGenerationMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendor.GetExpirationDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_DateTime        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_DateTime AValVendor::GetExpirationDate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "GetExpirationDate");

	Params::AValVendor_GetExpirationDate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendor.BindToExperienceManager
// (Native, Protected)
// Parameters:
// class AValExperienceManager*       ExperienceManager                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendor::BindToExperienceManager(class AValExperienceManager* ExperienceManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendor", "BindToExperienceManager");

	Params::AValVendor_BindToExperienceManager_Params Parms{};

	Parms.ExperienceManager = ExperienceManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValVendorManager
// (Actor)

class UClass* AValVendorManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorManager");

	return Clss;
}


// ValVendorManager Valhalla.Default__ValVendorManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendorManager* AValVendorManager::GetDefaultObj()
{
	static class AValVendorManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendorManager*>(AValVendorManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorManager.UpgradeItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorManager::UpgradeItem(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "UpgradeItem");

	Params::AValVendorManager_UpgradeItem_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.SetCurrentlyFocusedVendor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValVendorBase*              FocusedVendor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorManager::SetCurrentlyFocusedVendor(class AValVendorBase* FocusedVendor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "SetCurrentlyFocusedVendor");

	Params::AValVendorManager_SetCurrentlyFocusedVendor_Params Parms{};

	Parms.FocusedVendor = FocusedVendor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.ServerUpgradeItem
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorManager::ServerUpgradeItem(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "ServerUpgradeItem");

	Params::AValVendorManager_ServerUpgradeItem_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.OnRep_Vendors
// (Final, Native, Protected)
// Parameters:

void AValVendorManager::OnRep_Vendors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "OnRep_Vendors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.OnRecipeConfigReady
// (Native, Protected)
// Parameters:

void AValVendorManager::OnRecipeConfigReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "OnRecipeConfigReady");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.IsStashFull
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorManager::IsStashFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "IsStashFull");

	Params::AValVendorManager_IsStashFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.IsManagerReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorManager::IsManagerReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "IsManagerReady");

	Params::AValVendorManager_IsManagerReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.GetVendors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValVendorBase*>      Vendors                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValVendorManager::GetVendors(TArray<class AValVendorBase*>* Vendors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetVendors");

	Params::AValVendorManager_GetVendors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Vendors != nullptr)
		*Vendors = std::move(Parms.Vendors);

}


// Function Valhalla.ValVendorManager.GetVendorById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      VendorId                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValVendorBase*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValVendorBase* AValVendorManager::GetVendorById(const class FString& VendorId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetVendorById");

	Params::AValVendorManager_GetVendorById_Params Parms{};

	Parms.VendorId = VendorId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.GetUpgradeRecipe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct Valhalla_UpgradeRecipe      OutUpgradeRecipe                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorManager::GetUpgradeRecipe(struct Valhalla_InventoryItem& InventoryItem, struct Valhalla_UpgradeRecipe* OutUpgradeRecipe)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetUpgradeRecipe");

	Params::AValVendorManager_GetUpgradeRecipe_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutUpgradeRecipe != nullptr)
		*OutUpgradeRecipe = std::move(Parms.OutUpgradeRecipe);

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.GetItemModAssetById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemModAsset*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemModAsset* AValVendorManager::GetItemModAssetById(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetItemModAssetById");

	Params::AValVendorManager_GetItemModAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.GetItemAssetById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemAsset* AValVendorManager::GetItemAssetById(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetItemAssetById");

	Params::AValVendorManager_GetItemAssetById_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.GetCurrentlyFocusedVendor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValVendorBase*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValVendorBase* AValVendorManager::GetCurrentlyFocusedVendor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "GetCurrentlyFocusedVendor");

	Params::AValVendorManager_GetCurrentlyFocusedVendor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.ClientVendorResponse
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct CoreUObject_Guid            ClientRefId                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EVendorResponse         Response                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValVendorManager::ClientVendorResponse(struct CoreUObject_Guid& ClientRefId, enum class EVendorResponse Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "ClientVendorResponse");

	Params::AValVendorManager_ClientVendorResponse_Params Parms{};

	Parms.ClientRefId = ClientRefId;
	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorManager.CanAffordUpgrade
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorManager::CanAffordUpgrade(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "CanAffordUpgrade");

	Params::AValVendorManager_CanAffordUpgrade_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.CalcNumQuerySetsMatchable
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_EquipmentQuery>Queries                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorManager::CalcNumQuerySetsMatchable(TArray<struct Valhalla_EquipmentQuery>& Queries)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "CalcNumQuerySetsMatchable");

	Params::AValVendorManager_CalcNumQuerySetsMatchable_Params Parms{};

	Parms.Queries = Queries;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorManager.CalcNumItemsOwnedFromQuery
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_EquipmentQuery     Query                                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValVendorManager::CalcNumItemsOwnedFromQuery(struct Valhalla_EquipmentQuery& Query)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorManager", "CalcNumItemsOwnedFromQuery");

	Params::AValVendorManager_CalcNumItemsOwnedFromQuery_Params Parms{};

	Parms.Query = Query;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendorFilter
// (None)

class UClass* UValVendorFilter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorFilter");

	return Clss;
}


// ValVendorFilter Valhalla.Default__ValVendorFilter
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVendorFilter* UValVendorFilter::GetDefaultObj()
{
	static class UValVendorFilter* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVendorFilter*>(UValVendorFilter::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorFilter.ToggleEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValVendorFilter::ToggleEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorFilter", "ToggleEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorFilter.ShouldBeFilteredOut
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct Valhalla_VendorItem         Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValVendorFilter::ShouldBeFilteredOut(struct Valhalla_VendorItem& Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorFilter", "ShouldBeFilteredOut");

	Params::UValVendorFilter_ShouldBeFilteredOut_Params Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorFilter.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Enabled                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValVendorFilter::SetEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorFilter", "SetEnabled");

	Params::UValVendorFilter_SetEnabled_Params Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorFilter.GetVendorOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValVendorBase*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValVendorBase* UValVendorFilter::GetVendorOwner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorFilter", "GetVendorOwner");

	Params::UValVendorFilter_GetVendorOwner_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorFilter.GetEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValVendorFilter::GetEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorFilter", "GetEnabled");

	Params::UValVendorFilter_GetEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendorRulesetBase
// (None)

class UClass* UValVendorRulesetBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorRulesetBase");

	return Clss;
}


// ValVendorRulesetBase Valhalla.Default__ValVendorRulesetBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVendorRulesetBase* UValVendorRulesetBase::GetDefaultObj()
{
	static class UValVendorRulesetBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVendorRulesetBase*>(UValVendorRulesetBase::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValVendorRuleset
// (None)

class UClass* UValVendorRuleset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorRuleset");

	return Clss;
}


// ValVendorRuleset Valhalla.Default__ValVendorRuleset
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVendorRuleset* UValVendorRuleset::GetDefaultObj()
{
	static class UValVendorRuleset* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVendorRuleset*>(UValVendorRuleset::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorRuleset.GetItemPoolNames
// (Final, Native, Public, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UValVendorRuleset::GetItemPoolNames()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorRuleset", "GetItemPoolNames");

	Params::UValVendorRuleset_GetItemPoolNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendorStaticConfig
// (None)

class UClass* UValVendorStaticConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorStaticConfig");

	return Clss;
}


// ValVendorStaticConfig Valhalla.Default__ValVendorStaticConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVendorStaticConfig* UValVendorStaticConfig::GetDefaultObj()
{
	static class UValVendorStaticConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVendorStaticConfig*>(UValVendorStaticConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValVendorStatic
// (Actor)

class UClass* AValVendorStatic::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorStatic");

	return Clss;
}


// ValVendorStatic Valhalla.Default__ValVendorStatic
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendorStatic* AValVendorStatic::GetDefaultObj()
{
	static class AValVendorStatic* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendorStatic*>(AValVendorStatic::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorStatic.PopulateVendorItemsFromBackend
// (Final, Native, Protected)
// Parameters:

void AValVendorStatic::PopulateVendorItemsFromBackend()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "PopulateVendorItemsFromBackend");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorStatic.OnBackendVendorsLoaded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                              GroupId                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      VendorIds                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorStatic::OnBackendVendorsLoaded(int32 GroupId, TArray<int32>& VendorIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "OnBackendVendorsLoaded");

	Params::AValVendorStatic_OnBackendVendorsLoaded_Params Parms{};

	Parms.GroupId = GroupId;
	Parms.VendorIds = VendorIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorStatic.OnBackendSellerLoaded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                              GroupId                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      VendorIds                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValVendorStatic::OnBackendSellerLoaded(int32 GroupId, TArray<int32>& VendorIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "OnBackendSellerLoaded");

	Params::AValVendorStatic_OnBackendSellerLoaded_Params Parms{};

	Parms.GroupId = GroupId;
	Parms.VendorIds = VendorIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorStatic.LoadBackendVendors
// (Final, Native, Protected)
// Parameters:

void AValVendorStatic::LoadBackendVendors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "LoadBackendVendors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorStatic.LoadBackendSeller
// (Final, Native, Protected)
// Parameters:

void AValVendorStatic::LoadBackendSeller()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "LoadBackendSeller");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValVendorStatic.GetVendorList
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<int32>                      VendorList                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorStatic::GetVendorList(TArray<int32>* VendorList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "GetVendorList");

	Params::AValVendorStatic_GetVendorList_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (VendorList != nullptr)
		*VendorList = std::move(Parms.VendorList);

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorStatic.GetVendorItemIds
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                              VendorId                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UShopItem*>           OutShopItems                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValVendorStatic::GetVendorItemIds(int32 VendorId, TArray<class UShopItem*>* OutShopItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "GetVendorItemIds");

	Params::AValVendorStatic_GetVendorItemIds_Params Parms{};

	Parms.VendorId = VendorId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutShopItems != nullptr)
		*OutShopItems = std::move(Parms.OutShopItems);

}


// Function Valhalla.ValVendorStatic.GetSellRecipeBundleIds
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<int32>                      IDs                                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValVendorStatic::GetSellRecipeBundleIds(TArray<int32>* IDs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "GetSellRecipeBundleIds");

	Params::AValVendorStatic_GetSellRecipeBundleIds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IDs != nullptr)
		*IDs = std::move(Parms.IDs);

	return Parms.ReturnValue;

}


// Function Valhalla.ValVendorStatic.BuildSellMap
// (Final, Native, Protected)
// Parameters:

void AValVendorStatic::BuildSellMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStatic", "BuildSellMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ShopItem
// (None)

class UClass* UShopItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ShopItem");

	return Clss;
}


// ShopItem Valhalla.Default__ShopItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UShopItem* UShopItem::GetDefaultObj()
{
	static class UShopItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UShopItem*>(UShopItem::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ShopItem.IsClientClaimable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopItem::IsClientClaimable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "IsClientClaimable");

	Params::UShopItem_IsClientClaimable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetVendorId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetVendorId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetVendorId");

	Params::UShopItem_GetVendorId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetType");

	Params::UShopItem_GetType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetSubType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetSubType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetSubType");

	Params::UShopItem_GetSubType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetSortOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetSortOrder()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetSortOrder");

	Params::UShopItem_GetSortOrder_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetRecipeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetRecipeType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetRecipeType");

	Params::UShopItem_GetRecipeType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetQuantity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetQuantity");

	Params::UShopItem_GetQuantity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetPrices
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_ShopItemPrice>PriceList                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UShopItem::GetPrices(TArray<struct Valhalla_ShopItemPrice>* PriceList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetPrices");

	Params::UShopItem_GetPrices_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PriceList != nullptr)
		*PriceList = std::move(Parms.PriceList);

}


// Function Valhalla.ShopItem.GetPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              CurrencyType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ShopItemPrice      Price                                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopItem::GetPrice(int32 CurrencyType, struct Valhalla_ShopItemPrice* Price)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetPrice");

	Params::UShopItem_GetPrice_Params Parms{};

	Parms.CurrencyType = CurrencyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Price != nullptr)
		*Price = std::move(Parms.Price);

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetPortalRulesetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetPortalRulesetId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetPortalRulesetId");

	Params::UShopItem_GetPortalRulesetId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetLootId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetLootId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetLootId");

	Params::UShopItem_GetLootId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetItemId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetItemId");

	Params::UShopItem_GetItemId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopItem.GetBundleId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopItem::GetBundleId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopItem", "GetBundleId");

	Params::UShopItem_GetBundleId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ShopVendor
// (None)

class UClass* UShopVendor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ShopVendor");

	return Clss;
}


// ShopVendor Valhalla.Default__ShopVendor
// (Public, ClassDefaultObject, ArchetypeObject)

class UShopVendor* UShopVendor::GetDefaultObj()
{
	static class UShopVendor* Default = nullptr;

	if (!Default)
		Default = static_cast<UShopVendor*>(UShopVendor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ShopVendor.GetVendorId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UShopVendor::GetVendorId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopVendor", "GetVendorId");

	Params::UShopVendor_GetVendorId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ShopVendor.GetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UShopItem*>           ItemList                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UShopVendor::GetItems(TArray<class UShopItem*>* ItemList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ShopVendor", "GetItems");

	Params::UShopVendor_GetItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemList != nullptr)
		*ItemList = std::move(Parms.ItemList);

}


// Class Valhalla.ValVendorStashFilter
// (None)

class UClass* UValVendorStashFilter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorStashFilter");

	return Clss;
}


// ValVendorStashFilter Valhalla.Default__ValVendorStashFilter
// (Public, ClassDefaultObject, ArchetypeObject)

class UValVendorStashFilter* UValVendorStashFilter::GetDefaultObj()
{
	static class UValVendorStashFilter* Default = nullptr;

	if (!Default)
		Default = static_cast<UValVendorStashFilter*>(UValVendorStashFilter::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValVendorStashFilter.MatchesFilter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct Valhalla_InventoryItem      Item                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UValItemAsset*               Asset                                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValVendorStashFilter::MatchesFilter(struct Valhalla_InventoryItem& Item, class UValItemAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValVendorStashFilter", "MatchesFilter");

	Params::UValVendorStashFilter_MatchesFilter_Params Parms{};

	Parms.Item = Item;
	Parms.Asset = Asset;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class Valhalla.ValVendorVolume
// (Actor)

class UClass* AValVendorVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValVendorVolume");

	return Clss;
}


// ValVendorVolume Valhalla.Default__ValVendorVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AValVendorVolume* AValVendorVolume::GetDefaultObj()
{
	static class AValVendorVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AValVendorVolume*>(AValVendorVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValViewBobInterface
// (None)

class UClass* IValViewBobInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValViewBobInterface");

	return Clss;
}


// ValViewBobInterface Valhalla.Default__ValViewBobInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IValViewBobInterface* IValViewBobInterface::GetDefaultObj()
{
	static class IValViewBobInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IValViewBobInterface*>(IValViewBobInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValViewBobInterface.GetWalkBob
// (Native, Public, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector IValViewBobInterface::GetWalkBob()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValViewBobInterface", "GetWalkBob");

	Params::IValViewBobInterface_GetWalkBob_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValViewBobInterface.GetIsAiming
// (Native, Public, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IValViewBobInterface::GetIsAiming()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValViewBobInterface", "GetIsAiming");

	Params::IValViewBobInterface_GetIsAiming_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValWaypoint
// (Actor)

class UClass* AValWaypoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValWaypoint");

	return Clss;
}


// ValWaypoint Valhalla.Default__ValWaypoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AValWaypoint* AValWaypoint::GetDefaultObj()
{
	static class AValWaypoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AValWaypoint*>(AValWaypoint::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValWaypoint.SetMinOverlayVisibilityDistanceSq
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              MinVisibilityDistanceSq                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWaypoint::SetMinOverlayVisibilityDistanceSq(float MinVisibilityDistanceSq)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWaypoint", "SetMinOverlayVisibilityDistanceSq");

	Params::AValWaypoint_SetMinOverlayVisibilityDistanceSq_Params Parms{};

	Parms.MinVisibilityDistanceSq = MinVisibilityDistanceSq;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValWaypoint.SetLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        Label                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWaypoint::SetLabel(class FName& Label)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWaypoint", "SetLabel");

	Params::AValWaypoint_SetLabel_Params Parms{};

	Parms.Label = Label;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValWaypoint.SetDebugText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      DebugText                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWaypoint::SetDebugText(const class FString& DebugText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWaypoint", "SetDebugText");

	Params::AValWaypoint_SetDebugText_Params Parms{};

	Parms.DebugText = DebugText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValWaypoint.SetColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_LinearColor     Color                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWaypoint::SetColor(struct CoreUObject_LinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWaypoint", "SetColor");

	Params::AValWaypoint_SetColor_Params Parms{};

	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValLocalWorldAudioEvent
// (Actor)

class UClass* AValLocalWorldAudioEvent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLocalWorldAudioEvent");

	return Clss;
}


// ValLocalWorldAudioEvent Valhalla.Default__ValLocalWorldAudioEvent
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLocalWorldAudioEvent* AValLocalWorldAudioEvent::GetDefaultObj()
{
	static class AValLocalWorldAudioEvent* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLocalWorldAudioEvent*>(AValLocalWorldAudioEvent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLocalWorldAudioEvent.HandleAudio
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                               bFriendly                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ReferrenceTag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLocalWorldAudioEvent::HandleAudio(bool bFriendly, struct GameplayTags_GameplayTag& ReferrenceTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLocalWorldAudioEvent", "HandleAudio");

	Params::AValLocalWorldAudioEvent_HandleAudio_Params Parms{};

	Parms.bFriendly = bFriendly;
	Parms.ReferrenceTag = ReferrenceTag;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ValWorldAudioEvent
// (Actor)

class UClass* AValWorldAudioEvent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValWorldAudioEvent");

	return Clss;
}


// ValWorldAudioEvent Valhalla.Default__ValWorldAudioEvent
// (Public, ClassDefaultObject, ArchetypeObject)

class AValWorldAudioEvent* AValWorldAudioEvent::GetDefaultObj()
{
	static class AValWorldAudioEvent* Default = nullptr;

	if (!Default)
		Default = static_cast<AValWorldAudioEvent*>(AValWorldAudioEvent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValWorldAudioEvent.ClientSendEvent
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// int32                              Team                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_Vector_NetQuantize   Location                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ReferenceTag                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWorldAudioEvent::ClientSendEvent(int32 Team, const struct Engine_Vector_NetQuantize& Location, struct GameplayTags_GameplayTag& ReferenceTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldAudioEvent", "ClientSendEvent");

	Params::AValWorldAudioEvent_ClientSendEvent_Params Parms{};

	Parms.Team = Team;
	Parms.Location = Location;
	Parms.ReferenceTag = ReferenceTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValWorldMeshComposer
// (Actor)

class UClass* AValWorldMeshComposer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValWorldMeshComposer");

	return Clss;
}


// ValWorldMeshComposer Valhalla.Default__ValWorldMeshComposer
// (Public, ClassDefaultObject, ArchetypeObject)

class AValWorldMeshComposer* AValWorldMeshComposer::GetDefaultObj()
{
	static class AValWorldMeshComposer* Default = nullptr;

	if (!Default)
		Default = static_cast<AValWorldMeshComposer*>(AValWorldMeshComposer::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValWorldMeshComposer.HasValidRoomCoords
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValWorldMeshComposer::HasValidRoomCoords()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "HasValidRoomCoords");

	Params::AValWorldMeshComposer_HasValidRoomCoords_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValWorldMeshComposer.GetRoomCoordY
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValWorldMeshComposer::GetRoomCoordY()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "GetRoomCoordY");

	Params::AValWorldMeshComposer_GetRoomCoordY_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValWorldMeshComposer.GetRoomCoordX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValWorldMeshComposer::GetRoomCoordX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "GetRoomCoordX");

	Params::AValWorldMeshComposer_GetRoomCoordX_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValWorldMeshComposer.CreateStaticMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh*                 NewMesh                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AValWorldMeshComposer::CreateStaticMeshComponent(class UStaticMesh* NewMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "CreateStaticMeshComponent");

	Params::AValWorldMeshComposer_CreateStaticMeshComponent_Params Parms{};

	Parms.NewMesh = NewMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValWorldMeshComposer.ComposerSpawnActor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>          Class                                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Transform       SpawnTransform                                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SpawnIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValWorldMeshComposer::ComposerSpawnActor(class UObject* WorldContextObject, TSubclassOf<class AActor> Class, const struct CoreUObject_Transform& SpawnTransform, int32 SpawnIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "ComposerSpawnActor");

	Params::AValWorldMeshComposer_ComposerSpawnActor_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Class = Class;
	Parms.SpawnTransform = SpawnTransform;
	Parms.SpawnIndex = SpawnIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValWorldMeshComposer.ApplyNetSafeName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*             Comp                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValWorldMeshComposer::ApplyNetSafeName(class UActorComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldMeshComposer", "ApplyNetSafeName");

	Params::AValWorldMeshComposer_ApplyNetSafeName_Params Parms{};

	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValWorldSettings
// (Actor)

class UClass* AValWorldSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValWorldSettings");

	return Clss;
}


// ValWorldSettings Valhalla.Default__ValWorldSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class AValWorldSettings* AValWorldSettings::GetDefaultObj()
{
	static class AValWorldSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<AValWorldSettings*>(AValWorldSettings::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValWorldSettings.SetDefaultGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AGameModeBase>   NewGameMode                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValWorldSettings::SetDefaultGameMode(TSubclassOf<class AGameModeBase> NewGameMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValWorldSettings", "SetDefaultGameMode");

	Params::AValWorldSettings_SetDefaultGameMode_Params Parms{};

	Parms.NewGameMode = NewGameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValXpTable
// (None)

class UClass* UValXpTable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValXpTable");

	return Clss;
}


// ValXpTable Valhalla.Default__ValXpTable
// (Public, ClassDefaultObject, ArchetypeObject)

class UValXpTable* UValXpTable::GetDefaultObj()
{
	static class UValXpTable* Default = nullptr;

	if (!Default)
		Default = static_cast<UValXpTable*>(UValXpTable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValXpTable.GetXpTableFromId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ID                                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValXpTable*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValXpTable* UValXpTable::GetXpTableFromId(class FName& ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXpTable", "GetXpTableFromId");

	Params::UValXpTable_GetXpTableFromId_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValXpTable.GetXpAt
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValXpTable::GetXpAt(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXpTable", "GetXpAt");

	Params::UValXpTable_GetXpAt_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValXpTable.GetMaxLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValXpTable::GetMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXpTable", "GetMaxLevel");

	Params::UValXpTable_GetMaxLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValXpTable.GetLevelAt
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Xp                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValXpTable::GetLevelAt(int32 Xp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXpTable", "GetLevelAt");

	Params::UValXpTable_GetLevelAt_Params Parms{};

	Parms.Xp = Xp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValXrayScannable
// (None)

class UClass* IValXrayScannable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValXrayScannable");

	return Clss;
}


// ValXrayScannable Valhalla.Default__ValXrayScannable
// (Public, ClassDefaultObject, ArchetypeObject)

class IValXrayScannable* IValXrayScannable::GetDefaultObj()
{
	static class IValXrayScannable* Default = nullptr;

	if (!Default)
		Default = static_cast<IValXrayScannable*>(IValXrayScannable::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValXrayScannable.BPOnStopDirectLight
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                      Instigator                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValXrayScannable::BPOnStopDirectLight(class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXrayScannable", "BPOnStopDirectLight");

	Params::IValXrayScannable_BPOnStopDirectLight_Params Parms{};

	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValXrayScannable.BPOnStartDirectLight
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                      Instigator                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IValXrayScannable::BPOnStartDirectLight(class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValXrayScannable", "BPOnStartDirectLight");

	Params::IValXrayScannable_BPOnStartDirectLight_Params Parms{};

	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Class Valhalla.ViewBobComponent
// (SceneComponent)

class UClass* UViewBobComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ViewBobComponent");

	return Clss;
}


// ViewBobComponent Valhalla.Default__ViewBobComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UViewBobComponent* UViewBobComponent::GetDefaultObj()
{
	static class UViewBobComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UViewBobComponent*>(UViewBobComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEQSContext_CoverActors
// (None)

class UClass* UValEQSContext_CoverActors::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEQSContext_CoverActors");

	return Clss;
}


// ValEQSContext_CoverActors Valhalla.Default__ValEQSContext_CoverActors
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEQSContext_CoverActors* UValEQSContext_CoverActors::GetDefaultObj()
{
	static class UValEQSContext_CoverActors* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEQSContext_CoverActors*>(UValEQSContext_CoverActors::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAIAudioCueAgent
// (None)

class UClass* UValAIAudioCueAgent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIAudioCueAgent");

	return Clss;
}


// ValAIAudioCueAgent Valhalla.Default__ValAIAudioCueAgent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIAudioCueAgent* UValAIAudioCueAgent::GetDefaultObj()
{
	static class UValAIAudioCueAgent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIAudioCueAgent*>(UValAIAudioCueAgent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAIAudioCueAgent.RemoveEventTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCheckCues                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::RemoveEventTag(struct GameplayTags_GameplayTag& Tag, bool bCheckCues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "RemoveEventTag");

	Params::UValAIAudioCueAgent_RemoveEventTag_Params Parms{};

	Parms.Tag = Tag;
	Parms.bCheckCues = bCheckCues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.RegisterCueCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    CueTag                                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Callback                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::RegisterCueCallback(const struct GameplayTags_GameplayTag& CueTag, FDelegateProperty_ Callback)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "RegisterCueCallback");

	Params::UValAIAudioCueAgent_RegisterCueCallback_Params Parms{};

	Parms.CueTag = CueTag;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.OnAudioFinishedPlaying
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// enum class EAkCallbackType         CallbackType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*             CallbackInfo                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::OnAudioFinishedPlaying(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "OnAudioFinishedPlaying");

	Params::UValAIAudioCueAgent_OnAudioFinishedPlaying_Params Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.OnAmbientTimer
// (Final, Native, Protected)
// Parameters:

void UValAIAudioCueAgent::OnAmbientTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "OnAmbientTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               PSourceBot                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::Initialize(class AValCharacter* PSourceBot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "Initialize");

	Params::UValAIAudioCueAgent_Initialize_Params Parms{};

	Parms.PSourceBot = PSourceBot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.CheckCues
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValAIAudioCueAgent::CheckCues()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "CheckCues");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.ChangeEventTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerTagsToAdd                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTagContainerTagsToRemove                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bCheckCues                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::ChangeEventTags(struct GameplayTags_GameplayTagContainer& TagsToAdd, struct GameplayTags_GameplayTagContainer& TagsToRemove, bool bCheckCues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "ChangeEventTags");

	Params::UValAIAudioCueAgent_ChangeEventTags_Params Parms{};

	Parms.TagsToAdd = TagsToAdd;
	Parms.TagsToRemove = TagsToRemove;
	Parms.bCheckCues = bCheckCues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAIAudioCueAgent.AddEventTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCheckCues                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAIAudioCueAgent::AddEventTag(struct GameplayTags_GameplayTag& Tag, bool bCheckCues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAIAudioCueAgent", "AddEventTag");

	Params::UValAIAudioCueAgent_AddEventTag_Params Parms{};

	Parms.Tag = Tag;
	Parms.bCheckCues = bCheckCues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAIAudioCueTagCache
// (None)

class UClass* UValAIAudioCueTagCache::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAIAudioCueTagCache");

	return Clss;
}


// ValAIAudioCueTagCache Valhalla.Default__ValAIAudioCueTagCache
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAIAudioCueTagCache* UValAIAudioCueTagCache::GetDefaultObj()
{
	static class UValAIAudioCueTagCache* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAIAudioCueTagCache*>(UValAIAudioCueTagCache::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValCharacterAnimInstance
// (None)

class UClass* UValCharacterAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacterAnimInstance");

	return Clss;
}


// ValCharacterAnimInstance Valhalla.Default__ValCharacterAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UValCharacterAnimInstance* UValCharacterAnimInstance::GetDefaultObj()
{
	static class UValCharacterAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UValCharacterAnimInstance*>(UValCharacterAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacterAnimInstance.TimerFunc_PullOut3PWeapon
// (Final, Native, Protected)
// Parameters:

void UValCharacterAnimInstance::TimerFunc_PullOut3PWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "TimerFunc_PullOut3PWeapon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopTurn180Animation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopTurn180Animation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopTurn180Animation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopLeapAttackAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopLeapAttackAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopLeapAttackAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopLeapAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopLeapAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopLeapAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopLatchLoopAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopLatchLoopAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopLatchLoopAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopLandedAttackAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopLandedAttackAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopLandedAttackAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopClientTurn180Animation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopClientTurn180Animation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopClientTurn180Animation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StopClientLeapAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::StopClientLeapAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StopClientLeapAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.StateSkiingChanged
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bSkiing                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::StateSkiingChanged(bool bSkiing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "StateSkiingChanged");

	Params::UValCharacterAnimInstance_StateSkiingChanged_Params Parms{};

	Parms.bSkiing = bSkiing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.ResetAccumulatedTime
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::ResetAccumulatedTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "ResetAccumulatedTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayWhatWasThatAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayWhatWasThatAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayWhatWasThatAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayWeaponFired
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayWeaponFired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayWeaponFired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayVaultingAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayVaultingAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayVaultingAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayTurn180Animation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayTurn180Animation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayTurn180Animation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayTransformAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayTransformAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayTransformAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlaySkydiveLandingRecoveryAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterAnimInstance::PlaySkydiveLandingRecoveryAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlaySkydiveLandingRecoveryAnimation");

	Params::UValCharacterAnimInstance_PlaySkydiveLandingRecoveryAnimation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.PlayRightWallJumpMontage
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayRightWallJumpMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayRightWallJumpMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayPreVaultingAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayPreVaultingAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayPreVaultingAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayPostWeaponMissed
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayPostWeaponMissed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayPostWeaponMissed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayPostWeaponFired
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayPostWeaponFired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayPostWeaponFired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayMortarMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayMortarMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayMortarMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLostThreatAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLostThreatAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLostThreatAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLeftWallJumpMontage
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLeftWallJumpMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLeftWallJumpMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLeapAttackAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLeapAttackAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLeapAttackAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLeapAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLeapAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLeapAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLatchLoopAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLatchLoopAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLatchLoopAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLatchInterruptAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLatchInterruptAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLatchInterruptAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLatchEndAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLatchEndAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLatchEndAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLatchBeginAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLatchBeginAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLatchBeginAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLanding
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLanding()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLanding");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayLandedAttackAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayLandedAttackAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayLandedAttackAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayHitReactAnimation
// (Final, Native, Protected)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::PlayHitReactAnimation(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayHitReactAnimation");

	Params::UValCharacterAnimInstance_PlayHitReactAnimation_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayClientTurn180Animation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayClientTurn180Animation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayClientTurn180Animation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayClientLeapAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayClientLeapAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayClientLeapAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayChaseIntroAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayChaseIntroAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayChaseIntroAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayCeilingJumpMontage
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayCeilingJumpMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayCeilingJumpMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayBuildUpAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayBuildUpAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayBuildUpAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayBotSpawnAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::PlayBotSpawnAnimation(float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayBotSpawnAnimation");

	Params::UValCharacterAnimInstance_PlayBotSpawnAnimation_Params Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayBotHitReactionAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::PlayBotHitReactionAnimation(float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayBotHitReactionAnimation");

	Params::UValCharacterAnimInstance_PlayBotHitReactionAnimation_Params Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayBotDodgeAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bToLeft                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::PlayBotDodgeAnimation(bool bToLeft)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayBotDodgeAnimation");

	Params::UValCharacterAnimInstance_PlayBotDodgeAnimation_Params Parms{};

	Parms.bToLeft = bToLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayBotDespawnAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayBotDespawnAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayBotDespawnAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.PlayAlertAnimation
// (Native, Public, BlueprintCallable)
// Parameters:

void UValCharacterAnimInstance::PlayAlertAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "PlayAlertAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnTransform
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnTransform(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnTransform");

	Params::UValCharacterAnimInstance_OnTransform_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnShowDeviceAudioVisual
// (Native, Protected)
// Parameters:
// class UValDeviceAudioVisual*       DeviceAV                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnShowDeviceAudioVisual(class UValDeviceAudioVisual* DeviceAV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnShowDeviceAudioVisual");

	Params::UValCharacterAnimInstance_OnShowDeviceAudioVisual_Params Parms{};

	Parms.DeviceAV = DeviceAV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnReload
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnReload(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnReload");

	Params::UValCharacterAnimInstance_OnReload_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnQuickMelee
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnQuickMelee(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnQuickMelee");

	Params::UValCharacterAnimInstance_OnQuickMelee_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnNonCombatTagChanged
// (Final, Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    Tag                                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnNonCombatTagChanged(const struct GameplayTags_GameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnNonCombatTagChanged");

	Params::UValCharacterAnimInstance_OnNonCombatTagChanged_Params Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnMontageEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnMontageEnded");

	Params::UValCharacterAnimInstance_OnMontageEnded_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnMontageBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnMontageBlendingOut");

	Params::UValCharacterAnimInstance_OnMontageBlendingOut_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.OnBuildUp
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::OnBuildUp(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "OnBuildUp");

	Params::UValCharacterAnimInstance_OnBuildUp_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.IsVaultingMontagePlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterAnimInstance::IsVaultingMontagePlaying()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "IsVaultingMontagePlaying");

	Params::UValCharacterAnimInstance_IsVaultingMontagePlaying_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.HasSpawnAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValCharacterAnimInstance::HasSpawnAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "HasSpawnAnimation");

	Params::UValCharacterAnimInstance_HasSpawnAnimation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.Handle3PWeaponSwap
// (Final, Native, Public)
// Parameters:
// struct Valhalla_ValCharacterSwappingInfoInfo                                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::Handle3PWeaponSwap(const struct Valhalla_ValCharacterSwappingInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "Handle3PWeaponSwap");

	Params::UValCharacterAnimInstance_Handle3PWeaponSwap_Params Parms{};

	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacterAnimInstance.GetTurn180AnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetTurn180AnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetTurn180AnimationLength");

	Params::UValCharacterAnimInstance_GetTurn180AnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetReloadMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetReloadMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetReloadMontages");

	Params::UValCharacterAnimInstance_GetReloadMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetQuickMeleeMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetQuickMeleeMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetQuickMeleeMontages");

	Params::UValCharacterAnimInstance_GetQuickMeleeMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetPostFireMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetPostFireMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetPostFireMontages");

	Params::UValCharacterAnimInstance_GetPostFireMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetPostFireMontageLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetPostFireMontageLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetPostFireMontageLength");

	Params::UValCharacterAnimInstance_GetPostFireMontageLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMortarMontageLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetMortarMontageLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMortarMontageLength");

	Params::UValCharacterAnimInstance_GetMortarMontageLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMortarAttackRecoverySequenceLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetMortarAttackRecoverySequenceLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMortarAttackRecoverySequenceLength");

	Params::UValCharacterAnimInstance_GetMortarAttackRecoverySequenceLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMortarAnticipationSequenceLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetMortarAnticipationSequenceLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMortarAnticipationSequenceLength");

	Params::UValCharacterAnimInstance_GetMortarAnticipationSequenceLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMontageLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetMontageLength(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMontageLength");

	Params::UValCharacterAnimInstance_GetMontageLength_Params Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMissedPostFireMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetMissedPostFireMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMissedPostFireMontages");

	Params::UValCharacterAnimInstance_GetMissedPostFireMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetMissedPostFireMontageLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetMissedPostFireMontageLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetMissedPostFireMontageLength");

	Params::UValCharacterAnimInstance_GetMissedPostFireMontageLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLeapAttackAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLeapAttackAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLeapAttackAnimationLength");

	Params::UValCharacterAnimInstance_GetLeapAttackAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLeapAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLeapAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLeapAnimationLength");

	Params::UValCharacterAnimInstance_GetLeapAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLatchInterruptAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLatchInterruptAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLatchInterruptAnimationLength");

	Params::UValCharacterAnimInstance_GetLatchInterruptAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLatchEndAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLatchEndAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLatchEndAnimationLength");

	Params::UValCharacterAnimInstance_GetLatchEndAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLatchBeginAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLatchBeginAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLatchBeginAnimationLength");

	Params::UValCharacterAnimInstance_GetLatchBeginAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetLandedAttackAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetLandedAttackAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetLandedAttackAnimationLength");

	Params::UValCharacterAnimInstance_GetLandedAttackAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetHolsterMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetHolsterMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetHolsterMontages");

	Params::UValCharacterAnimInstance_GetHolsterMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetFireMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetFireMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetFireMontages");

	Params::UValCharacterAnimInstance_GetFireMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetDrawMontages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAnimMontage*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAnimMontage*> UValCharacterAnimInstance::GetDrawMontages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetDrawMontages");

	Params::UValCharacterAnimInstance_GetDrawMontages_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetChaseIntroAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetChaseIntroAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetChaseIntroAnimationLength");

	Params::UValCharacterAnimInstance_GetChaseIntroAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetBotSpawnAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetBotSpawnAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetBotSpawnAnimationLength");

	Params::UValCharacterAnimInstance_GetBotSpawnAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetBotHitReactionAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetBotHitReactionAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetBotHitReactionAnimationLength");

	Params::UValCharacterAnimInstance_GetBotHitReactionAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetBotDodgeAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               bToLeft                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetBotDodgeAnimationLength(bool bToLeft)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetBotDodgeAnimationLength");

	Params::UValCharacterAnimInstance_GetBotDodgeAnimationLength_Params Parms{};

	Parms.bToLeft = bToLeft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.GetBotDespawnAnimationLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::GetBotDespawnAnimationLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "GetBotDespawnAnimationLength");

	Params::UValCharacterAnimInstance_GetBotDespawnAnimationLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.CalculateWallJumpMaxLength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValCharacterAnimInstance::CalculateWallJumpMaxLength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "CalculateWallJumpMaxLength");

	Params::UValCharacterAnimInstance_CalculateWallJumpMaxLength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacterAnimInstance.AddLocalRotationToRotator
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Rotator         DeltaRotation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         StartingRotation                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UValCharacterAnimInstance::AddLocalRotationToRotator(const struct CoreUObject_Rotator& DeltaRotation, struct CoreUObject_Rotator& StartingRotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacterAnimInstance", "AddLocalRotationToRotator");

	Params::UValCharacterAnimInstance_AddLocalRotationToRotator_Params Parms{};

	Parms.DeltaRotation = DeltaRotation;
	Parms.StartingRotation = StartingRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAkPortalComponent
// (SceneComponent)

class UClass* UValAkPortalComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkPortalComponent");

	return Clss;
}


// ValAkPortalComponent Valhalla.Default__ValAkPortalComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkPortalComponent* UValAkPortalComponent::GetDefaultObj()
{
	static class UValAkPortalComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkPortalComponent*>(UValAkPortalComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkPortalComponent.SetPortalState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsOpened                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAkPortalComponent::SetPortalState(bool bIsOpened)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkPortalComponent", "SetPortalState");

	Params::UValAkPortalComponent_SetPortalState_Params Parms{};

	Parms.bIsOpened = bIsOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkPortalComponent.MarkUpdateRoomsAndTempLoad
// (Final, Native, Protected)
// Parameters:

void UValAkPortalComponent::MarkUpdateRoomsAndTempLoad()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkPortalComponent", "MarkUpdateRoomsAndTempLoad");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkPortalComponent.MarkUpdateRooms
// (Final, Native, Protected)
// Parameters:

void UValAkPortalComponent::MarkUpdateRooms()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkPortalComponent", "MarkUpdateRooms");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAkComponent
// (SceneComponent)

class UClass* UValAkComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkComponent");

	return Clss;
}


// ValAkComponent Valhalla.Default__ValAkComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkComponent* UValAkComponent::GetDefaultObj()
{
	static class UValAkComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkComponent*>(UValAkComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkGeometryComponent
// (SceneComponent)

class UClass* UValAkGeometryComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkGeometryComponent");

	return Clss;
}


// ValAkGeometryComponent Valhalla.Default__ValAkGeometryComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkGeometryComponent* UValAkGeometryComponent::GetDefaultObj()
{
	static class UValAkGeometryComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkGeometryComponent*>(UValAkGeometryComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkRoomEventModifier
// (SceneComponent)

class UClass* UValAkRoomEventModifier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoomEventModifier");

	return Clss;
}


// ValAkRoomEventModifier Valhalla.Default__ValAkRoomEventModifier
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkRoomEventModifier* UValAkRoomEventModifier::GetDefaultObj()
{
	static class UValAkRoomEventModifier* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkRoomEventModifier*>(UValAkRoomEventModifier::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkRoomEventModifier.ManualFindAkRoom
// (Final, Native, Protected)
// Parameters:

void UValAkRoomEventModifier::ManualFindAkRoom()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomEventModifier", "ManualFindAkRoom");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAudioComponent
// (SceneComponent)

class UClass* UValAudioComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAudioComponent");

	return Clss;
}


// ValAudioComponent Valhalla.Default__ValAudioComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAudioComponent* UValAudioComponent::GetDefaultObj()
{
	static class UValAudioComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAudioComponent*>(UValAudioComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAudioComponent.PostEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                  Event                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAudioComponent::PostEvent(class USoundBase* Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioComponent", "PostEvent");

	Params::UValAudioComponent_PostEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAudioComponent.OnPlaybackCompleted
// (Final, Native, Protected)
// Parameters:

void UValAudioComponent::OnPlaybackCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAudioComponent", "OnPlaybackCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSpatialAudioManagerComponent
// (None)

class UClass* UValSpatialAudioManagerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSpatialAudioManagerComponent");

	return Clss;
}


// ValSpatialAudioManagerComponent Valhalla.Default__ValSpatialAudioManagerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSpatialAudioManagerComponent* UValSpatialAudioManagerComponent::GetDefaultObj()
{
	static class UValSpatialAudioManagerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSpatialAudioManagerComponent*>(UValSpatialAudioManagerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSpatialAudioManagerComponent.TryToAddAkRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValAkRoom*                  Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCreateDummy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSpatialAudioManagerComponent::TryToAddAkRoom(class AValAkRoom* Room, bool bCreateDummy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "TryToAddAkRoom");

	Params::UValSpatialAudioManagerComponent_TryToAddAkRoom_Params Parms{};

	Parms.Room = Room;
	Parms.bCreateDummy = bCreateDummy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSpatialAudioManagerComponent.TryToAddAkObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Object                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValSpatialAudioManagerComponent::TryToAddAkObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "TryToAddAkObject");

	Params::UValSpatialAudioManagerComponent_TryToAddAkObject_Params Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSpatialAudioManagerComponent.IsRoomLoaded
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_IntPoint        Point                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValSpatialAudioManagerComponent::IsRoomLoaded(struct CoreUObject_IntPoint& Point)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "IsRoomLoaded");

	Params::UValSpatialAudioManagerComponent_IsRoomLoaded_Params Parms{};

	Parms.Point = Point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSpatialAudioManagerComponent.IsPointLoaded
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValSpatialAudioManagerComponent::IsPointLoaded(struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "IsPointLoaded");

	Params::UValSpatialAudioManagerComponent_IsPointLoaded_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSpatialAudioManagerComponent.DungeonGeneratorCallback_AllRoomsLoaded
// (Final, Native, Protected)
// Parameters:

void UValSpatialAudioManagerComponent::DungeonGeneratorCallback_AllRoomsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "DungeonGeneratorCallback_AllRoomsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSpatialAudioManagerComponent.ConvertToPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint UValSpatialAudioManagerComponent::ConvertToPoint(struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSpatialAudioManagerComponent", "ConvertToPoint");

	Params::UValSpatialAudioManagerComponent_ConvertToPoint_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValTempAkComponent
// (SceneComponent)

class UClass* UValTempAkComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTempAkComponent");

	return Clss;
}


// ValTempAkComponent Valhalla.Default__ValTempAkComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTempAkComponent* UValTempAkComponent::GetDefaultObj()
{
	static class UValTempAkComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTempAkComponent*>(UValTempAkComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValTempAkComponent.StopEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bDontDestroy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValTempAkComponent::StopEvent(bool bDontDestroy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTempAkComponent", "StopEvent");

	Params::UValTempAkComponent_StopEvent_Params Parms{};

	Parms.bDontDestroy = bDontDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTempAkComponent.SetRTPCValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkRtpc*                     RTPCToSet                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InterpolationTimeMs                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValTempAkComponent::SetRTPCValue(class UAkRtpc* RTPCToSet, float Value, int32 InterpolationTimeMs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTempAkComponent", "SetRTPCValue");

	Params::UValTempAkComponent_SetRTPCValue_Params Parms{};

	Parms.RTPCToSet = RTPCToSet;
	Parms.Value = Value;
	Parms.InterpolationTimeMs = InterpolationTimeMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTempAkComponent.PostEventTemporary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*               AkEvent                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*             MetaComponent                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                  Metasound                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDontDestroy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValTempAkComponent::PostEventTemporary(class UAkAudioEvent* AkEvent, class UAudioComponent* MetaComponent, class USoundBase* Metasound, bool bDontDestroy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTempAkComponent", "PostEventTemporary");

	Params::UValTempAkComponent_PostEventTemporary_Params Parms{};

	Parms.AkEvent = AkEvent;
	Parms.MetaComponent = MetaComponent;
	Parms.Metasound = Metasound;
	Parms.bDontDestroy = bDontDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValTempAkComponent.OnEventFinished
// (Final, Native, Protected)
// Parameters:
// enum class EAkCallbackType         CallbackType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*             CallbackInfo                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValTempAkComponent::OnEventFinished(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTempAkComponent", "OnEventFinished");

	Params::UValTempAkComponent_OnEventFinished_Params Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAkAmbienceRoomObject
// (SceneComponent)

class UClass* UValAkAmbienceRoomObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkAmbienceRoomObject");

	return Clss;
}


// ValAkAmbienceRoomObject Valhalla.Default__ValAkAmbienceRoomObject
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkAmbienceRoomObject* UValAkAmbienceRoomObject::GetDefaultObj()
{
	static class UValAkAmbienceRoomObject* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkAmbienceRoomObject*>(UValAkAmbienceRoomObject::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkBlueprintLibrary
// (None)

class UClass* UValAkBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkBlueprintLibrary");

	return Clss;
}


// ValAkBlueprintLibrary Valhalla.Default__ValAkBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkBlueprintLibrary* UValAkBlueprintLibrary::GetDefaultObj()
{
	static class UValAkBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkBlueprintLibrary*>(UValAkBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkBlueprintLibrary.SpawnAndAttachAkComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToAttachTo                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Rotator         Orientation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UAkAudioEvent*               AkEvent                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAutoPost                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      EventName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAutoDestroy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkComponent*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAkComponent* UValAkBlueprintLibrary::SpawnAndAttachAkComponent(class AActor* ActorToAttachTo, const struct CoreUObject_Vector& Location, const struct CoreUObject_Rotator& Orientation, class UAkAudioEvent* AkEvent, bool bAutoPost, const class FString& EventName, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "SpawnAndAttachAkComponent");

	Params::UValAkBlueprintLibrary_SpawnAndAttachAkComponent_Params Parms{};

	Parms.ActorToAttachTo = ActorToAttachTo;
	Parms.Location = Location;
	Parms.Orientation = Orientation;
	Parms.AkEvent = AkEvent;
	Parms.bAutoPost = bAutoPost;
	Parms.EventName = EventName;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAkBlueprintLibrary.PostMetaEventAtLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                  Sound                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDestroyWhenFinished                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAutoPlay                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAudioComponent*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAudioComponent* UValAkBlueprintLibrary::PostMetaEventAtLocation(class UObject* WorldContextObject, struct CoreUObject_Vector& Location, class USoundBase* Sound, bool bDestroyWhenFinished, bool bAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "PostMetaEventAtLocation");

	Params::UValAkBlueprintLibrary_PostMetaEventAtLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Location = Location;
	Parms.Sound = Sound;
	Parms.bDestroyWhenFinished = bDestroyWhenFinished;
	Parms.bAutoPlay = bAutoPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAkBlueprintLibrary.PostEventWithObstruction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*               Event                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAkBlueprintLibrary::PostEventWithObstruction(class UAkAudioEvent* Event, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "PostEventWithObstruction");

	Params::UValAkBlueprintLibrary_PostEventWithObstruction_Params Parms{};

	Parms.Event = Event;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkBlueprintLibrary.GetLocalSpatialAudioManagerComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValSpatialAudioManagerComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValSpatialAudioManagerComponent* UValAkBlueprintLibrary::GetLocalSpatialAudioManagerComponent(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "GetLocalSpatialAudioManagerComponent");

	Params::UValAkBlueprintLibrary_GetLocalSpatialAudioManagerComponent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAkBlueprintLibrary.CreateAndAttachValAkPortalComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*         ParentComponent                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAkPortalComponent*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAkPortalComponent* UValAkBlueprintLibrary::CreateAndAttachValAkPortalComponent(class UPrimitiveComponent* ParentComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "CreateAndAttachValAkPortalComponent");

	Params::UValAkBlueprintLibrary_CreateAndAttachValAkPortalComponent_Params Parms{};

	Parms.ParentComponent = ParentComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValAkBlueprintLibrary.AudioThreatOnShotAtPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Instigator                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAkBlueprintLibrary::AudioThreatOnShotAtPlayer(class AActor* Instigator, float Distance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "AudioThreatOnShotAtPlayer");

	Params::UValAkBlueprintLibrary_AudioThreatOnShotAtPlayer_Params Parms{};

	Parms.Instigator = Instigator;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkBlueprintLibrary.AddAkPortalToPrimitiveComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*         Parent                                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValAkBlueprintLibrary::AddAkPortalToPrimitiveComponent(class UPrimitiveComponent* Parent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkBlueprintLibrary", "AddAkPortalToPrimitiveComponent");

	Params::UValAkBlueprintLibrary_AddAkPortalToPrimitiveComponent_Params Parms{};

	Parms.Parent = Parent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAkGeometryActor
// (Actor)

class UClass* AValAkGeometryActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkGeometryActor");

	return Clss;
}


// ValAkGeometryActor Valhalla.Default__ValAkGeometryActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAkGeometryActor* AValAkGeometryActor::GetDefaultObj()
{
	static class AValAkGeometryActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAkGeometryActor*>(AValAkGeometryActor::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkRoom
// (Actor)

class UClass* AValAkRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoom");

	return Clss;
}


// ValAkRoom Valhalla.Default__ValAkRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAkRoom* AValAkRoom::GetDefaultObj()
{
	static class AValAkRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAkRoom*>(AValAkRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkRoom.SetReverbBus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAuxBus*                   AuxBus                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAkRoom::SetReverbBus(class UAkAuxBus* AuxBus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoom", "SetReverbBus");

	Params::AValAkRoom_SetReverbBus_Params Parms{};

	Parms.AuxBus = AuxBus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoom.SetAkPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValAkRoom::SetAkPriority(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoom", "SetAkPriority");

	Params::AValAkRoom_SetAkPriority_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoom.MarkSetupCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValAkRoom::MarkSetupCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoom", "MarkSetupCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValAkRoomDynamic
// (Actor)

class UClass* AValAkRoomDynamic::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoomDynamic");

	return Clss;
}


// ValAkRoomDynamic Valhalla.Default__ValAkRoomDynamic
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAkRoomDynamic* AValAkRoomDynamic::GetDefaultObj()
{
	static class AValAkRoomDynamic* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAkRoomDynamic*>(AValAkRoomDynamic::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkRoomStatic
// (Actor)

class UClass* AValAkRoomStatic::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoomStatic");

	return Clss;
}


// ValAkRoomStatic Valhalla.Default__ValAkRoomStatic
// (Public, ClassDefaultObject, ArchetypeObject)

class AValAkRoomStatic* AValAkRoomStatic::GetDefaultObj()
{
	static class AValAkRoomStatic* Default = nullptr;

	if (!Default)
		Default = static_cast<AValAkRoomStatic*>(AValAkRoomStatic::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValAkRoomStaticHelper
// (SceneComponent)

class UClass* UValAkRoomStaticHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValAkRoomStaticHelper");

	return Clss;
}


// ValAkRoomStaticHelper Valhalla.Default__ValAkRoomStaticHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UValAkRoomStaticHelper* UValAkRoomStaticHelper::GetDefaultObj()
{
	static class UValAkRoomStaticHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UValAkRoomStaticHelper*>(UValAkRoomStaticHelper::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValAkRoomStaticHelper.TryManualActivateRoom
// (Final, Native, Protected)
// Parameters:

void UValAkRoomStaticHelper::TryManualActivateRoom()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomStaticHelper", "TryManualActivateRoom");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoomStaticHelper.CreateRoom
// (Final, Native, Protected)
// Parameters:

void UValAkRoomStaticHelper::CreateRoom()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomStaticHelper", "CreateRoom");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValAkRoomStaticHelper.ActivateHelper
// (Final, Native, Public)
// Parameters:

void UValAkRoomStaticHelper::ActivateHelper()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValAkRoomStaticHelper", "ActivateHelper");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDummyRoomCollection
// (None)

class UClass* UValDummyRoomCollection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDummyRoomCollection");

	return Clss;
}


// ValDummyRoomCollection Valhalla.Default__ValDummyRoomCollection
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDummyRoomCollection* UValDummyRoomCollection::GetDefaultObj()
{
	static class UValDummyRoomCollection* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDummyRoomCollection*>(UValDummyRoomCollection::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValQueueScheduleManager
// (None)

class UClass* UValQueueScheduleManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValQueueScheduleManager");

	return Clss;
}


// ValQueueScheduleManager Valhalla.Default__ValQueueScheduleManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValQueueScheduleManager* UValQueueScheduleManager::GetDefaultObj()
{
	static class UValQueueScheduleManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValQueueScheduleManager*>(UValQueueScheduleManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValQueueScheduleManager.SetActiveRegionId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      RegionId                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValQueueScheduleManager::SetActiveRegionId(const class FString& RegionId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueScheduleManager", "SetActiveRegionId");

	Params::UValQueueScheduleManager_SetActiveRegionId_Params Parms{};

	Parms.RegionId = RegionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValQueueScheduleManager.HasQueueSchedule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValQueueScheduleManager::HasQueueSchedule()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueScheduleManager", "HasQueueSchedule");

	Params::UValQueueScheduleManager_HasQueueSchedule_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueScheduleManager.GetQueueSchedule
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_QueueScheduleConfigOutQueueSchedule                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValQueueScheduleManager::GetQueueSchedule(struct Valhalla_QueueScheduleConfig* OutQueueSchedule)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueScheduleManager", "GetQueueSchedule");

	Params::UValQueueScheduleManager_GetQueueSchedule_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutQueueSchedule != nullptr)
		*OutQueueSchedule = std::move(Parms.OutQueueSchedule);

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueScheduleManager.GetCurrentTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_DateTime        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_DateTime UValQueueScheduleManager::GetCurrentTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueScheduleManager", "GetCurrentTime");

	Params::UValQueueScheduleManager_GetCurrentTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValQueueScheduleManager.GetActiveQueues
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, struct Valhalla_ResolvedBucketSchedule>ResolvedBuckets                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// TMap<class FString, struct Valhalla_ResolvedNonUniformCycleInfo>ResolvedCycles                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValQueueScheduleManager::GetActiveQueues(TMap<class FString, struct Valhalla_ResolvedBucketSchedule>* ResolvedBuckets, TMap<class FString, struct Valhalla_ResolvedNonUniformCycleInfo>* ResolvedCycles)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValQueueScheduleManager", "GetActiveQueues");

	Params::UValQueueScheduleManager_GetActiveQueues_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ResolvedBuckets != nullptr)
		*ResolvedBuckets = Parms.ResolvedBuckets;

	if (ResolvedCycles != nullptr)
		*ResolvedCycles = Parms.ResolvedCycles;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDynamicTickComponent
// (None)

class UClass* UValDynamicTickComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDynamicTickComponent");

	return Clss;
}


// ValDynamicTickComponent Valhalla.Default__ValDynamicTickComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValDynamicTickComponent* UValDynamicTickComponent::GetDefaultObj()
{
	static class UValDynamicTickComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValDynamicTickComponent*>(UValDynamicTickComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValDungeonLayout
// (Actor)

class UClass* AValDungeonLayout::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonLayout");

	return Clss;
}


// ValDungeonLayout Valhalla.Default__ValDungeonLayout
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDungeonLayout* AValDungeonLayout::GetDefaultObj()
{
	static class AValDungeonLayout* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDungeonLayout*>(AValDungeonLayout::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDungeonLayout.ValidateAllRooms
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValDungeonLayout::ValidateAllRooms()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "ValidateAllRooms");

	Params::AValDungeonLayout_ValidateAllRooms_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.UpdateNeighbors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCheckMaxDoors                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPropagate                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bUseDirection                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::UpdateNeighbors(class UValDungeonRoomData* Room, bool bCheckMaxDoors, bool bPropagate, bool bUseDirection, int32 Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "UpdateNeighbors");

	Params::AValDungeonLayout_UpdateNeighbors_Params Parms{};

	Parms.Room = Room;
	Parms.bCheckMaxDoors = bCheckMaxDoors;
	Parms.bPropagate = bPropagate;
	Parms.bUseDirection = bUseDirection;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.SetSpawnRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::SetSpawnRoom(class UValDungeonRoomData* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "SetSpawnRoom");

	Params::AValDungeonLayout_SetSpawnRoom_Params Parms{};

	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.RemoveRoom
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bRecalculateBounds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bReload                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bRecreateCorridorsIfNeeded                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bUpdateNeighbors                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::RemoveRoom(const struct CoreUObject_IntPoint& Coords, bool bRecalculateBounds, bool bReload, bool bRecreateCorridorsIfNeeded, bool bUpdateNeighbors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "RemoveRoom");

	Params::AValDungeonLayout_RemoveRoom_Params Parms{};

	Parms.Coords = Coords;
	Parms.bRecalculateBounds = bRecalculateBounds;
	Parms.bReload = bReload;
	Parms.bRecreateCorridorsIfNeeded = bRecreateCorridorsIfNeeded;
	Parms.bUpdateNeighbors = bUpdateNeighbors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.RemoveAllRooms
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bReload                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::RemoveAllRooms(bool bReload)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "RemoveAllRooms");

	Params::AValDungeonLayout_RemoveAllRooms_Params Parms{};

	Parms.bReload = bReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.RemoveAllCorridors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UValDungeonRoomData*> RoomsWithEncounters                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValDungeonLayout::RemoveAllCorridors(TArray<class UValDungeonRoomData*>* RoomsWithEncounters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "RemoveAllCorridors");

	Params::AValDungeonLayout_RemoveAllCorridors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RoomsWithEncounters != nullptr)
		*RoomsWithEncounters = std::move(Parms.RoomsWithEncounters);

}


// Function Valhalla.ValDungeonLayout.RecreateAllCorridors
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonLayout::RecreateAllCorridors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "RecreateAllCorridors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.RecaulateBounds
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValDungeonLayout::RecaulateBounds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "RecaulateBounds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.OnSaved
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonLayout::OnSaved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "OnSaved");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.MarkAsDirty
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonLayout::MarkAsDirty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "MarkAsDirty");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.IsSpaceValidForAdd
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCanTouchEncounterRoom                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIgnoreCorridors                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDungeonRoomData*         IgnoreSelf                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::IsSpaceValidForAdd(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, bool bCanTouchEncounterRoom, bool bIgnoreCorridors, class UValDungeonRoomData* IgnoreSelf)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "IsSpaceValidForAdd");

	Params::AValDungeonLayout_IsSpaceValidForAdd_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.bCanTouchEncounterRoom = bCanTouchEncounterRoom;
	Parms.bIgnoreCorridors = bIgnoreCorridors;
	Parms.IgnoreSelf = IgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.IsSpaceFree
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bCanTouchEncounterRoom                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIgnoreCorridors                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDungeonRoomData*         IgnoreSelf                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::IsSpaceFree(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, bool bCanTouchEncounterRoom, bool bIgnoreCorridors, class UValDungeonRoomData* IgnoreSelf)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "IsSpaceFree");

	Params::AValDungeonLayout_IsSpaceFree_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.bCanTouchEncounterRoom = bCanTouchEncounterRoom;
	Parms.bIgnoreCorridors = bIgnoreCorridors;
	Parms.IgnoreSelf = IgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.IsRoomACorridor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         RoomData                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::IsRoomACorridor(class UValDungeonRoomData* RoomData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "IsRoomACorridor");

	Params::AValDungeonLayout_IsRoomACorridor_Params Parms{};

	Parms.RoomData = RoomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.IsInBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::IsInBounds(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "IsInBounds");

	Params::AValDungeonLayout_IsInBounds_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.IsDirty
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::IsDirty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "IsDirty");

	Params::AValDungeonLayout_IsDirty_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetSurroundingCoords
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct CoreUObject_IntPoint>Results                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bExcludeCorners                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::GetSurroundingCoords(TArray<struct CoreUObject_IntPoint>& Results, const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, bool bExcludeCorners)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetSurroundingCoords");

	Params::AValDungeonLayout_GetSurroundingCoords_Params Parms{};

	Parms.Results = Results;
	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.bExcludeCorners = bExcludeCorners;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.GetSpawnRoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDungeonRoomData*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDungeonRoomData* AValDungeonLayout::GetSpawnRoom()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetSpawnRoom");

	Params::AValDungeonLayout_GetSpawnRoom_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetRoomSpacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValDungeonLayout::GetRoomSpacing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetRoomSpacing");

	Params::AValDungeonLayout_GetRoomSpacing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetRoomsAtCoords
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValDungeonRoomData*> OutRooms                                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValDungeonLayout::GetRoomsAtCoords(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, TArray<class UValDungeonRoomData*>& OutRooms)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetRoomsAtCoords");

	Params::AValDungeonLayout_GetRoomsAtCoords_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.OutRooms = OutRooms;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.GetRoomCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      DatabaseId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValDungeonLayout::GetRoomCount(const class FString& DatabaseId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetRoomCount");

	Params::AValDungeonLayout_GetRoomCount_Params Parms{};

	Parms.DatabaseId = DatabaseId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetRoomCenterRounded
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValDungeonRoomData*         Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint AValDungeonLayout::GetRoomCenterRounded(class UValDungeonRoomData* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetRoomCenterRounded");

	Params::AValDungeonLayout_GetRoomCenterRounded_Params Parms{};

	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetRoomAtCoord
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDungeonRoomData*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDungeonRoomData* AValDungeonLayout::GetRoomAtCoord(const struct CoreUObject_IntPoint& Coords)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetRoomAtCoord");

	Params::AValDungeonLayout_GetRoomAtCoord_Params Parms{};

	Parms.Coords = Coords;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetReverseLink
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_NeighborLink       Link                                                             (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct Valhalla_NeighborLink       ReverseLink                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::GetReverseLink(struct Valhalla_NeighborLink& Link, struct Valhalla_NeighborLink* ReverseLink)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetReverseLink");

	Params::AValDungeonLayout_GetReverseLink_Params Parms{};

	Parms.Link = Link;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReverseLink != nullptr)
		*ReverseLink = std::move(Parms.ReverseLink);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetPotentialDoorCoords
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct CoreUObject_IntPoint>Results                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bClearArray                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInBoundsOnly                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::GetPotentialDoorCoords(TArray<struct CoreUObject_IntPoint>& Results, const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, bool bClearArray, bool bInBoundsOnly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetPotentialDoorCoords");

	Params::AValDungeonLayout_GetPotentialDoorCoords_Params Parms{};

	Parms.Results = Results;
	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.bClearArray = bClearArray;
	Parms.bInBoundsOnly = bInBoundsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.GetLayoutBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Box2D           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Box2D AValDungeonLayout::GetLayoutBounds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetLayoutBounds");

	Params::AValDungeonLayout_GetLayoutBounds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetCorridorLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         RoomData                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValDungeonLayout::GetCorridorLength(class UValDungeonRoomData* RoomData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetCorridorLength");

	Params::AValDungeonLayout_GetCorridorLength_Params Parms{};

	Parms.RoomData = RoomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.GetCoordsInRange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct CoreUObject_IntPoint>Results                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::GetCoordsInRange(TArray<struct CoreUObject_IntPoint>& Results, const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetCoordsInRange");

	Params::AValDungeonLayout_GetCoordsInRange_Params Parms{};

	Parms.Results = Results;
	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.GetCoordCenterRounded
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint AValDungeonLayout::GetCoordCenterRounded(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "GetCoordCenterRounded");

	Params::AValDungeonLayout_GetCoordCenterRounded_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.ConnectRoomWithCorridors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::ConnectRoomWithCorridors(class UValDungeonRoomData* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "ConnectRoomWithCorridors");

	Params::AValDungeonLayout_ConnectRoomWithCorridors_Params Parms{};

	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.CanRoomBeRemoved
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::CanRoomBeRemoved(const struct CoreUObject_IntPoint& Coords)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "CanRoomBeRemoved");

	Params::AValDungeonLayout_CanRoomBeRemoved_Params Parms{};

	Parms.Coords = Coords;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.CanPathToSpawnRoom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Start                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValDungeonRoomData*> RoomsToIgnore                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::CanPathToSpawnRoom(class UValDungeonRoomData* Start, TArray<class UValDungeonRoomData*>* RoomsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "CanPathToSpawnRoom");

	Params::AValDungeonLayout_CanPathToSpawnRoom_Params Parms{};

	Parms.Start = Start;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RoomsToIgnore != nullptr)
		*RoomsToIgnore = std::move(Parms.RoomsToIgnore);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.CanPathToRoom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Start                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDungeonRoomData*         Destination                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValDungeonRoomData*> Visited                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UValDungeonRoomData*> RoomsToIgnore                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::CanPathToRoom(class UValDungeonRoomData* Start, class UValDungeonRoomData* Destination, TArray<class UValDungeonRoomData*>* Visited, TArray<class UValDungeonRoomData*>* RoomsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "CanPathToRoom");

	Params::AValDungeonLayout_CanPathToRoom_Params Parms{};

	Parms.Start = Start;
	Parms.Destination = Destination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Visited != nullptr)
		*Visited = std::move(Parms.Visited);

	if (RoomsToIgnore != nullptr)
		*RoomsToIgnore = std::move(Parms.RoomsToIgnore);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.CanPathToEndRoom
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         Start                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValDungeonRoomData*> RoomsToIgnore                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::CanPathToEndRoom(class UValDungeonRoomData* Start, TArray<class UValDungeonRoomData*>* RoomsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "CanPathToEndRoom");

	Params::AValDungeonLayout_CanPathToEndRoom_Params Parms{};

	Parms.Start = Start;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RoomsToIgnore != nullptr)
		*RoomsToIgnore = std::move(Parms.RoomsToIgnore);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.CanDoorsConnect
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::CanDoorsConnect(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "CanDoorsConnect");

	Params::AValDungeonLayout_CanDoorsConnect_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.BeginAsyncLoad
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonLayout::BeginAsyncLoad()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "BeginAsyncLoad");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.AsyncLoadFinished
// (Native, Protected)
// Parameters:

void AValDungeonLayout::AsyncLoadFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "AsyncLoadFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonLayout.AreAllRoomsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonLayout::AreAllRoomsValid()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "AreAllRoomsValid");

	Params::AValDungeonLayout_AreAllRoomsValid_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.AddRoom
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct Valhalla_DungeonRoomAddParamsParams                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AValDungeonRoom*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValDungeonRoom* AValDungeonLayout::AddRoom(struct Valhalla_DungeonRoomAddParams& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "AddRoom");

	Params::AValDungeonLayout_AddRoom_Params Parms{};

	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonLayout.AddOrRemoveFromMap
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        Coords                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        Dimensions                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDungeonRoomData*         Room                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonLayout::AddOrRemoveFromMap(const struct CoreUObject_IntPoint& Coords, const struct CoreUObject_IntPoint& Dimensions, class UValDungeonRoomData* Room)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonLayout", "AddOrRemoveFromMap");

	Params::AValDungeonLayout_AddOrRemoveFromMap_Params Parms{};

	Parms.Coords = Coords;
	Parms.Dimensions = Dimensions;
	Parms.Room = Room;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDungeonGenerator
// (Actor)

class UClass* AValDungeonGenerator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonGenerator");

	return Clss;
}


// ValDungeonGenerator Valhalla.Default__ValDungeonGenerator
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDungeonGenerator* AValDungeonGenerator::GetDefaultObj()
{
	static class AValDungeonGenerator* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDungeonGenerator*>(AValDungeonGenerator::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDungeonGenerator.SpawnNodes
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValDungeonGenerator::SpawnNodes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "SpawnNodes");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.SetRoomCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              RoomCountMin                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RoomCountMax                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonGenerator::SetRoomCount(int32 RoomCountMin, int32 RoomCountMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "SetRoomCount");

	Params::AValDungeonGenerator_SetRoomCount_Params Parms{};

	Parms.RoomCountMin = RoomCountMin;
	Parms.RoomCountMax = RoomCountMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.SetMiniBossCountMax
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewMiniBossCountMax                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonGenerator::SetMiniBossCountMax(int32 NewMiniBossCountMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "SetMiniBossCountMax");

	Params::AValDungeonGenerator_SetMiniBossCountMax_Params Parms{};

	Parms.NewMiniBossCountMax = NewMiniBossCountMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.PruneDeadEnds
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonGenerator::PruneDeadEnds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "PruneDeadEnds");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.PickMiniBossRooms
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonGenerator::PickMiniBossRooms()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "PickMiniBossRooms");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.PickEndRoom
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonGenerator::PickEndRoom()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "PickEndRoom");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.OnRoomLoaded
// (Native, Protected)
// Parameters:
// class AValDungeonRoom*             LoadedRoom                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonGenerator::OnRoomLoaded(class AValDungeonRoom* LoadedRoom)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "OnRoomLoaded");

	Params::AValDungeonGenerator_OnRoomLoaded_Params Parms{};

	Parms.LoadedRoom = LoadedRoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.OnDungeonSeed
// (Native, Protected)
// Parameters:
// int32                              DungeonSeed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonGenerator::OnDungeonSeed(int32 DungeonSeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "OnDungeonSeed");

	Params::AValDungeonGenerator_OnDungeonSeed_Params Parms{};

	Parms.DungeonSeed = DungeonSeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.GenerateRooms
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               bSpawnOnFinish                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFreeNeighborDataOnFinish                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonGenerator::GenerateRooms(bool bSpawnOnFinish, bool bFreeNeighborDataOnFinish)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "GenerateRooms");

	Params::AValDungeonGenerator_GenerateRooms_Params Parms{};

	Parms.bSpawnOnFinish = bSpawnOnFinish;
	Parms.bFreeNeighborDataOnFinish = bFreeNeighborDataOnFinish;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.FillHoles
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDungeonGenerator::FillHoles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "FillHoles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonGenerator.ConvertToWorldCoordinates
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_IntPoint        InCoord                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValDungeonGenerator::ConvertToWorldCoordinates(const struct CoreUObject_IntPoint& InCoord)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "ConvertToWorldCoordinates");

	Params::AValDungeonGenerator_ConvertToWorldCoordinates_Params Parms{};

	Parms.InCoord = InCoord;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonGenerator.ConvertToGridCoordinates
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          InLocation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint AValDungeonGenerator::ConvertToGridCoordinates(const struct CoreUObject_Vector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "ConvertToGridCoordinates");

	Params::AValDungeonGenerator_ConvertToGridCoordinates_Params Parms{};

	Parms.InLocation = InLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonGenerator.AllRoomsLoaded
// (Native, Protected)
// Parameters:

void AValDungeonGenerator::AllRoomsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonGenerator", "AllRoomsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDungeonRoom
// (Actor)

class UClass* AValDungeonRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonRoom");

	return Clss;
}


// ValDungeonRoom Valhalla.Default__ValDungeonRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDungeonRoom* AValDungeonRoom::GetDefaultObj()
{
	static class AValDungeonRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDungeonRoom*>(AValDungeonRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDungeonRoom.SetRoomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDungeonRoomData*         NewRoomData                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonRoom::SetRoomData(class UValDungeonRoomData* NewRoomData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonRoom", "SetRoomData");

	Params::AValDungeonRoom_SetRoomData_Params Parms{};

	Parms.NewRoomData = NewRoomData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonRoom.GetRoomData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDungeonRoomData*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDungeonRoomData* AValDungeonRoom::GetRoomData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonRoom", "GetRoomData");

	Params::AValDungeonRoom_GetRoomData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonRoom.EventContentsLoaded
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValDungeonRoom::EventContentsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonRoom", "EventContentsLoaded");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDungeonRoom.DetermineContents
// (Final, Native, Public)
// Parameters:

void AValDungeonRoom::DetermineContents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonRoom", "DetermineContents");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonRoom.ContentsLoaded
// (Final, Native, Protected)
// Parameters:

void AValDungeonRoom::ContentsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonRoom", "ContentsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValActivityTracker_MissionTurnIn
// (None)

class UClass* UValActivityTracker_MissionTurnIn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValActivityTracker_MissionTurnIn");

	return Clss;
}


// ValActivityTracker_MissionTurnIn Valhalla.Default__ValActivityTracker_MissionTurnIn
// (Public, ClassDefaultObject, ArchetypeObject)

class UValActivityTracker_MissionTurnIn* UValActivityTracker_MissionTurnIn::GetDefaultObj()
{
	static class UValActivityTracker_MissionTurnIn* Default = nullptr;

	if (!Default)
		Default = static_cast<UValActivityTracker_MissionTurnIn*>(UValActivityTracker_MissionTurnIn::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValActivityTracker_MissionTurnIn.OnMissionProgressed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct GameplayTags_GameplayTag    MissionTag                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker_MissionTurnIn::OnMissionProgressed(struct GameplayTags_GameplayTag& MissionTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_MissionTurnIn", "OnMissionProgressed");

	Params::UValActivityTracker_MissionTurnIn_OnMissionProgressed_Params Parms{};

	Parms.MissionTag = MissionTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValActivityTracker_MissionTurnIn.OnMissionCompleted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct GameplayTags_GameplayTag    MissionTag                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValActivityTracker_MissionTurnIn::OnMissionCompleted(struct GameplayTags_GameplayTag& MissionTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValActivityTracker_MissionTurnIn", "OnMissionCompleted");

	Params::UValActivityTracker_MissionTurnIn_OnMissionCompleted_Params Parms{};

	Parms.MissionTag = MissionTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValStatsEndpoint
// (None)

class UClass* UValStatsEndpoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStatsEndpoint");

	return Clss;
}


// ValStatsEndpoint Valhalla.Default__ValStatsEndpoint
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStatsEndpoint* UValStatsEndpoint::GetDefaultObj()
{
	static class UValStatsEndpoint* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStatsEndpoint*>(UValStatsEndpoint::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStatsEndpoint_HiRez
// (None)

class UClass* UValStatsEndpoint_HiRez::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStatsEndpoint_HiRez");

	return Clss;
}


// ValStatsEndpoint_HiRez Valhalla.Default__ValStatsEndpoint_HiRez
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStatsEndpoint_HiRez* UValStatsEndpoint_HiRez::GetDefaultObj()
{
	static class UValStatsEndpoint_HiRez* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStatsEndpoint_HiRez*>(UValStatsEndpoint_HiRez::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValStatsManager
// (None)

class UClass* UValStatsManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValStatsManager");

	return Clss;
}


// ValStatsManager Valhalla.Default__ValStatsManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValStatsManager* UValStatsManager::GetDefaultObj()
{
	static class UValStatsManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValStatsManager*>(UValStatsManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValStatsManager.IncrementTeamingStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                OwningState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                OtherState                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESoloTeamingStat        Stat                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              IncrementBy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValStatsManager::IncrementTeamingStat(class APlayerState* OwningState, class APlayerState* OtherState, enum class ESoloTeamingStat Stat, int32 IncrementBy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValStatsManager", "IncrementTeamingStat");

	Params::UValStatsManager_IncrementTeamingStat_Params Parms{};

	Parms.OwningState = OwningState;
	Parms.OtherState = OtherState;
	Parms.Stat = Stat;
	Parms.IncrementBy = IncrementBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValStatsManager.IncrementPlayerStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                PlayerState                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPlayerStats            Stat                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              IncrementBy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValStatsManager::IncrementPlayerStat(class APlayerState* PlayerState, enum class EPlayerStats Stat, int32 IncrementBy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValStatsManager", "IncrementPlayerStat");

	Params::UValStatsManager_IncrementPlayerStat_Params Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Stat = Stat;
	Parms.IncrementBy = IncrementBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValStatsManager.IncrementMatchStat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EMatchStats             Stat                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              IncrementBy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValStatsManager::IncrementMatchStat(enum class EMatchStats Stat, int32 IncrementBy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValStatsManager", "IncrementMatchStat");

	Params::UValStatsManager_IncrementMatchStat_Params Parms{};

	Parms.Stat = Stat;
	Parms.IncrementBy = IncrementBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValSecurityLevel
// (None)

class UClass* UValSecurityLevel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSecurityLevel");

	return Clss;
}


// ValSecurityLevel Valhalla.Default__ValSecurityLevel
// (Public, ClassDefaultObject, ArchetypeObject)

class UValSecurityLevel* UValSecurityLevel::GetDefaultObj()
{
	static class UValSecurityLevel* Default = nullptr;

	if (!Default)
		Default = static_cast<UValSecurityLevel*>(UValSecurityLevel::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTaskParameters
// (None)

class UClass* UValPlayerFinalizationTaskParameters::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTaskParameters");

	return Clss;
}


// ValPlayerFinalizationTaskParameters Valhalla.Default__ValPlayerFinalizationTaskParameters
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTaskParameters* UValPlayerFinalizationTaskParameters::GetDefaultObj()
{
	static class UValPlayerFinalizationTaskParameters* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTaskParameters*>(UValPlayerFinalizationTaskParameters::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTask
// (None)

class UClass* UValPlayerFinalizationTask::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTask");

	return Clss;
}


// ValPlayerFinalizationTask Valhalla.Default__ValPlayerFinalizationTask
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTask* UValPlayerFinalizationTask::GetDefaultObj()
{
	static class UValPlayerFinalizationTask* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTask*>(UValPlayerFinalizationTask::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTaskComponent
// (None)

class UClass* UValPlayerFinalizationTaskComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTaskComponent");

	return Clss;
}


// ValPlayerFinalizationTaskComponent Valhalla.Default__ValPlayerFinalizationTaskComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTaskComponent* UValPlayerFinalizationTaskComponent::GetDefaultObj()
{
	static class UValPlayerFinalizationTaskComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTaskComponent*>(UValPlayerFinalizationTaskComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerFinalizationTaskComponent.HasFinalizedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*           Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerFinalizationTaskComponent::HasFinalizedPlayer(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerFinalizationTaskComponent", "HasFinalizedPlayer");

	Params::UValPlayerFinalizationTaskComponent_HasFinalizedPlayer_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerFinalizationTaskComponent.HasFinalizationTasksForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*           Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerFinalizationTaskComponent::HasFinalizationTasksForPlayer(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerFinalizationTaskComponent", "HasFinalizationTasksForPlayer");

	Params::UValPlayerFinalizationTaskComponent_HasFinalizationTasksForPlayer_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerFinalizationTaskComponent.FinalizePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*           EndingPlayer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValPlayerFinalizationTaskComponent::FinalizePlayer(class APlayerController* EndingPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerFinalizationTaskComponent", "FinalizePlayer");

	Params::UValPlayerFinalizationTaskComponent_FinalizePlayer_Params Parms{};

	Parms.EndingPlayer = EndingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerFinalizationTaskComponent.CreateTask
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UValPlayerFinalizationTask>TaskClass                                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*           Owner                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValPlayerFinalizationTask*>TaskContainer                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UValPlayerFinalizationTask*  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPlayerFinalizationTask* UValPlayerFinalizationTaskComponent::CreateTask(TSubclassOf<class UValPlayerFinalizationTask> TaskClass, class APlayerController* Owner, TArray<class UValPlayerFinalizationTask*>* TaskContainer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerFinalizationTaskComponent", "CreateTask");

	Params::UValPlayerFinalizationTaskComponent_CreateTask_Params Parms{};

	Parms.TaskClass = TaskClass;
	Parms.Owner = Owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TaskContainer != nullptr)
		*TaskContainer = std::move(Parms.TaskContainer);

	return Parms.ReturnValue;

}


// Function Valhalla.ValPlayerFinalizationTaskComponent.CreateFinalizationTasksForPlayer
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class APlayerController*           EndingPlayer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UValPlayerFinalizationTask*>OutTasks                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValPlayerFinalizationTaskComponent::CreateFinalizationTasksForPlayer(class APlayerController* EndingPlayer, TArray<class UValPlayerFinalizationTask*>* OutTasks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerFinalizationTaskComponent", "CreateFinalizationTasksForPlayer");

	Params::UValPlayerFinalizationTaskComponent_CreateFinalizationTasksForPlayer_Params Parms{};

	Parms.EndingPlayer = EndingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTasks != nullptr)
		*OutTasks = std::move(Parms.OutTasks);

}


// Class Valhalla.ValPlayerFinalizationTaskComponent_SpaceDungeon
// (None)

class UClass* UValPlayerFinalizationTaskComponent_SpaceDungeon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTaskComponent_SpaceDungeon");

	return Clss;
}


// ValPlayerFinalizationTaskComponent_SpaceDungeon Valhalla.Default__ValPlayerFinalizationTaskComponent_SpaceDungeon
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTaskComponent_SpaceDungeon* UValPlayerFinalizationTaskComponent_SpaceDungeon::GetDefaultObj()
{
	static class UValPlayerFinalizationTaskComponent_SpaceDungeon* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTaskComponent_SpaceDungeon*>(UValPlayerFinalizationTaskComponent_SpaceDungeon::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTaskComponent_Topaz
// (None)

class UClass* UValPlayerFinalizationTaskComponent_Topaz::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTaskComponent_Topaz");

	return Clss;
}


// ValPlayerFinalizationTaskComponent_Topaz Valhalla.Default__ValPlayerFinalizationTaskComponent_Topaz
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTaskComponent_Topaz* UValPlayerFinalizationTaskComponent_Topaz::GetDefaultObj()
{
	static class UValPlayerFinalizationTaskComponent_Topaz* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTaskComponent_Topaz*>(UValPlayerFinalizationTaskComponent_Topaz::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTask_Flush
// (None)

class UClass* UValPlayerFinalizationTask_Flush::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTask_Flush");

	return Clss;
}


// ValPlayerFinalizationTask_Flush Valhalla.Default__ValPlayerFinalizationTask_Flush
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTask_Flush* UValPlayerFinalizationTask_Flush::GetDefaultObj()
{
	static class UValPlayerFinalizationTask_Flush* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTask_Flush*>(UValPlayerFinalizationTask_Flush::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTask_Secure
// (None)

class UClass* UValPlayerFinalizationTask_Secure::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTask_Secure");

	return Clss;
}


// ValPlayerFinalizationTask_Secure Valhalla.Default__ValPlayerFinalizationTask_Secure
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTask_Secure* UValPlayerFinalizationTask_Secure::GetDefaultObj()
{
	static class UValPlayerFinalizationTask_Secure* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTask_Secure*>(UValPlayerFinalizationTask_Secure::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerFinalizationTask_Wait
// (None)

class UClass* UValPlayerFinalizationTask_Wait::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerFinalizationTask_Wait");

	return Clss;
}


// ValPlayerFinalizationTask_Wait Valhalla.Default__ValPlayerFinalizationTask_Wait
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerFinalizationTask_Wait* UValPlayerFinalizationTask_Wait::GetDefaultObj()
{
	static class UValPlayerFinalizationTask_Wait* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerFinalizationTask_Wait*>(UValPlayerFinalizationTask_Wait::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_SimpleWait
// (None)

class UClass* UValPlayerJoinTask_SimpleWait::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_SimpleWait");

	return Clss;
}


// ValPlayerJoinTask_SimpleWait Valhalla.Default__ValPlayerJoinTask_SimpleWait
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_SimpleWait* UValPlayerJoinTask_SimpleWait::GetDefaultObj()
{
	static class UValPlayerJoinTask_SimpleWait* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_SimpleWait*>(UValPlayerJoinTask_SimpleWait::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPlayerJoinTask_SimpleWait.SetTaskDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewDuration                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlayerJoinTask_SimpleWait::SetTaskDuration(float NewDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_SimpleWait", "SetTaskDuration");

	Params::UValPlayerJoinTask_SimpleWait_SetTaskDuration_Params Parms{};

	Parms.NewDuration = NewDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerJoinTask_SimpleWait.SetCompleteAsSuccess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               CompleteSuccessfully                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValPlayerJoinTask_SimpleWait::SetCompleteAsSuccess(bool CompleteSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_SimpleWait", "SetCompleteAsSuccess");

	Params::UValPlayerJoinTask_SimpleWait_SetCompleteAsSuccess_Params Parms{};

	Parms.CompleteSuccessfully = CompleteSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPlayerJoinTask_SimpleWait.OnTimer
// (Final, Native, Protected)
// Parameters:

void UValPlayerJoinTask_SimpleWait::OnTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPlayerJoinTask_SimpleWait", "OnTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValPlayerJoinTaskComponent_Raid
// (None)

class UClass* UValPlayerJoinTaskComponent_Raid::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTaskComponent_Raid");

	return Clss;
}


// ValPlayerJoinTaskComponent_Raid Valhalla.Default__ValPlayerJoinTaskComponent_Raid
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTaskComponent_Raid* UValPlayerJoinTaskComponent_Raid::GetDefaultObj()
{
	static class UValPlayerJoinTaskComponent_Raid* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTaskComponent_Raid*>(UValPlayerJoinTaskComponent_Raid::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTaskComponent_SpaceDungeon
// (None)

class UClass* UValPlayerJoinTaskComponent_SpaceDungeon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTaskComponent_SpaceDungeon");

	return Clss;
}


// ValPlayerJoinTaskComponent_SpaceDungeon Valhalla.Default__ValPlayerJoinTaskComponent_SpaceDungeon
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTaskComponent_SpaceDungeon* UValPlayerJoinTaskComponent_SpaceDungeon::GetDefaultObj()
{
	static class UValPlayerJoinTaskComponent_SpaceDungeon* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTaskComponent_SpaceDungeon*>(UValPlayerJoinTaskComponent_SpaceDungeon::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTaskComponent_Topaz
// (None)

class UClass* UValPlayerJoinTaskComponent_Topaz::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTaskComponent_Topaz");

	return Clss;
}


// ValPlayerJoinTaskComponent_Topaz Valhalla.Default__ValPlayerJoinTaskComponent_Topaz
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTaskComponent_Topaz* UValPlayerJoinTaskComponent_Topaz::GetDefaultObj()
{
	static class UValPlayerJoinTaskComponent_Topaz* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTaskComponent_Topaz*>(UValPlayerJoinTaskComponent_Topaz::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_AntiCheat
// (None)

class UClass* UValPlayerJoinTask_AntiCheat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_AntiCheat");

	return Clss;
}


// ValPlayerJoinTask_AntiCheat Valhalla.Default__ValPlayerJoinTask_AntiCheat
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_AntiCheat* UValPlayerJoinTask_AntiCheat::GetDefaultObj()
{
	static class UValPlayerJoinTask_AntiCheat* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_AntiCheat*>(UValPlayerJoinTask_AntiCheat::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_CheckPartyFill
// (None)

class UClass* UValPlayerJoinTask_CheckPartyFill::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_CheckPartyFill");

	return Clss;
}


// ValPlayerJoinTask_CheckPartyFill Valhalla.Default__ValPlayerJoinTask_CheckPartyFill
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_CheckPartyFill* UValPlayerJoinTask_CheckPartyFill::GetDefaultObj()
{
	static class UValPlayerJoinTask_CheckPartyFill* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_CheckPartyFill*>(UValPlayerJoinTask_CheckPartyFill::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_DisplayName
// (None)

class UClass* UValPlayerJoinTask_DisplayName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_DisplayName");

	return Clss;
}


// ValPlayerJoinTask_DisplayName Valhalla.Default__ValPlayerJoinTask_DisplayName
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_DisplayName* UValPlayerJoinTask_DisplayName::GetDefaultObj()
{
	static class UValPlayerJoinTask_DisplayName* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_DisplayName*>(UValPlayerJoinTask_DisplayName::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_MctsInventory
// (None)

class UClass* UValPlayerJoinTask_MctsInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_MctsInventory");

	return Clss;
}


// ValPlayerJoinTask_MctsInventory Valhalla.Default__ValPlayerJoinTask_MctsInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_MctsInventory* UValPlayerJoinTask_MctsInventory::GetDefaultObj()
{
	static class UValPlayerJoinTask_MctsInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_MctsInventory*>(UValPlayerJoinTask_MctsInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_MctsLoadout
// (None)

class UClass* UValPlayerJoinTask_MctsLoadout::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_MctsLoadout");

	return Clss;
}


// ValPlayerJoinTask_MctsLoadout Valhalla.Default__ValPlayerJoinTask_MctsLoadout
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_MctsLoadout* UValPlayerJoinTask_MctsLoadout::GetDefaultObj()
{
	static class UValPlayerJoinTask_MctsLoadout* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_MctsLoadout*>(UValPlayerJoinTask_MctsLoadout::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_ValidateEOSUser
// (None)

class UClass* UValPlayerJoinTask_ValidateEOSUser::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_ValidateEOSUser");

	return Clss;
}


// ValPlayerJoinTask_ValidateEOSUser Valhalla.Default__ValPlayerJoinTask_ValidateEOSUser
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_ValidateEOSUser* UValPlayerJoinTask_ValidateEOSUser::GetDefaultObj()
{
	static class UValPlayerJoinTask_ValidateEOSUser* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_ValidateEOSUser*>(UValPlayerJoinTask_ValidateEOSUser::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValPlayerJoinTask_ValidEquipment
// (None)

class UClass* UValPlayerJoinTask_ValidEquipment::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerJoinTask_ValidEquipment");

	return Clss;
}


// ValPlayerJoinTask_ValidEquipment Valhalla.Default__ValPlayerJoinTask_ValidEquipment
// (Public, ClassDefaultObject, ArchetypeObject)

class UValPlayerJoinTask_ValidEquipment* UValPlayerJoinTask_ValidEquipment::GetDefaultObj()
{
	static class UValPlayerJoinTask_ValidEquipment* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerJoinTask_ValidEquipment*>(UValPlayerJoinTask_ValidEquipment::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGameMode_Lobby
// (Actor)

class UClass* AValGameMode_Lobby::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Lobby");

	return Clss;
}


// ValGameMode_Lobby Valhalla.Default__ValGameMode_Lobby
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Lobby* AValGameMode_Lobby::GetDefaultObj()
{
	static class AValGameMode_Lobby* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Lobby*>(AValGameMode_Lobby::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameMode_Lobby.GetLobbyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ELobbyState             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ELobbyState AValGameMode_Lobby::GetLobbyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameMode_Lobby", "GetLobbyState");

	Params::AValGameMode_Lobby_GetLobbyState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameSingleton
// (None)

class UClass* UValGameSingleton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameSingleton");

	return Clss;
}


// ValGameSingleton Valhalla.Default__ValGameSingleton
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameSingleton* UValGameSingleton::GetDefaultObj()
{
	static class UValGameSingleton* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameSingleton*>(UValGameSingleton::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameSingleton.GetZoneDamageSourceTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetZoneDamageSourceTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetZoneDamageSourceTag");

	Params::UValGameSingleton_GetZoneDamageSourceTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetSwappableAbilityQuickHolsterTime
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameSingleton::GetSwappableAbilityQuickHolsterTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetSwappableAbilityQuickHolsterTime");

	Params::UValGameSingleton_GetSwappableAbilityQuickHolsterTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetSwappableAbilityQuickDrawTime
// (Final, Native, Public, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameSingleton::GetSwappableAbilityQuickDrawTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetSwappableAbilityQuickDrawTime");

	Params::UValGameSingleton_GetSwappableAbilityQuickDrawTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetShieldDamageTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetShieldDamageTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetShieldDamageTag");

	Params::UValGameSingleton_GetShieldDamageTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetShieldBrokeDamageTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetShieldBrokeDamageTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetShieldBrokeDamageTag");

	Params::UValGameSingleton_GetShieldBrokeDamageTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetPodDamageSourceTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetPodDamageSourceTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetPodDamageSourceTag");

	Params::UValGameSingleton_GetPodDamageSourceTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetLevelName
// (Final, Native, Public, HasOutParams)
// Parameters:
// enum class ELevelType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Name                                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameSingleton::GetLevelName(enum class ELevelType Type, class FName* Name)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetLevelName");

	Params::UValGameSingleton_GetLevelName_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Name != nullptr)
		*Name = Parms.Name;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetLevelData
// (Final, Native, Public, HasOutParams)
// Parameters:
// enum class ELevelType              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_LevelData          Data                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameSingleton::GetLevelData(enum class ELevelType Type, struct Valhalla_LevelData* Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetLevelData");

	Params::UValGameSingleton_GetLevelData_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetIgnoreOnDamagedTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetIgnoreOnDamagedTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetIgnoreOnDamagedTag");

	Params::UValGameSingleton_GetIgnoreOnDamagedTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetIgnoreNotifyDamageTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetIgnoreNotifyDamageTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetIgnoreNotifyDamageTag");

	Params::UValGameSingleton_GetIgnoreNotifyDamageTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetIgnoreHeadshotsTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetIgnoreHeadshotsTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetIgnoreHeadshotsTag");

	Params::UValGameSingleton_GetIgnoreHeadshotsTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetHealthDamageTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetHealthDamageTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetHealthDamageTag");

	Params::UValGameSingleton_GetHealthDamageTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetHeadshotDamageTag
// (Final, Native, Public, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag UValGameSingleton::GetHeadshotDamageTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetHeadshotDamageTag");

	Params::UValGameSingleton_GetHeadshotDamageTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameSingleton.GetEffectRemovalClass
// (Final, Native, Public)
// Parameters:
// TSubclassOf<class UGameplayEffect> ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEffect> UValGameSingleton::GetEffectRemovalClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameSingleton", "GetEffectRemovalClass");

	Params::UValGameSingleton_GetEffectRemovalClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameState_Frontier
// (Actor)

class UClass* AValGameState_Frontier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameState_Frontier");

	return Clss;
}


// ValGameState_Frontier Valhalla.Default__ValGameState_Frontier
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameState_Frontier* AValGameState_Frontier::GetDefaultObj()
{
	static class AValGameState_Frontier* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameState_Frontier*>(AValGameState_Frontier::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameState_Frontier.UpdateCapturingTeam
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::UpdateCapturingTeam(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "UpdateCapturingTeam");

	Params::AValGameState_Frontier_UpdateCapturingTeam_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValGameState_Frontier.SetRespawnPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AValRespawnPoint*>    InRespawnPoints                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetRespawnPoints(const TArray<class AValRespawnPoint*>& InRespawnPoints)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetRespawnPoints");

	Params::AValGameState_Frontier_SetRespawnPoints_Params Parms{};

	Parms.InRespawnPoints = InRespawnPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetPOI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_BuildingPOI        POIData                                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetPOI(int32 Index, const struct Valhalla_BuildingPOI& POIData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetPOI");

	Params::AValGameState_Frontier_SetPOI_Params Parms{};

	Parms.Index = Index;
	Parms.POIData = POIData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryLootCrateThresholds
// (Final, Native, Public)
// Parameters:
// TArray<float>                      Values                                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryLootCrateThresholds(const TArray<float>& Values)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryLootCrateThresholds");

	Params::AValGameState_Frontier_SetLegendaryLootCrateThresholds_Params Parms{};

	Parms.Values = Values;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryArtifactRevealed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToReveal                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryArtifactRevealed(const struct Valhalla_LegendaryArtifactData& ArtifactToReveal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryArtifactRevealed");

	Params::AValGameState_Frontier_SetLegendaryArtifactRevealed_Params Parms{};

	Parms.ArtifactToReveal = ArtifactToReveal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryArtifactHeld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToRemove                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AValPlayerState*             OwningPlayer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryArtifactHeld(const struct Valhalla_LegendaryArtifactData& ArtifactToRemove, class AValPlayerState* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryArtifactHeld");

	Params::AValGameState_Frontier_SetLegendaryArtifactHeld_Params Parms{};

	Parms.ArtifactToRemove = ArtifactToRemove;
	Parms.OwningPlayer = OwningPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryArtifactExtracting
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToAdd                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AValObjective_LootExtractionSite*ExtractionSite                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryArtifactExtracting(const struct Valhalla_LegendaryArtifactData& ArtifactToAdd, class AValObjective_LootExtractionSite* ExtractionSite)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryArtifactExtracting");

	Params::AValGameState_Frontier_SetLegendaryArtifactExtracting_Params Parms{};

	Parms.ArtifactToAdd = ArtifactToAdd;
	Parms.ExtractionSite = ExtractionSite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryArtifactExtracted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToRemove                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AValPlayerState*             OwningPlayer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryArtifactExtracted(const struct Valhalla_LegendaryArtifactData& ArtifactToRemove, class AValPlayerState* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryArtifactExtracted");

	Params::AValGameState_Frontier_SetLegendaryArtifactExtracted_Params Parms{};

	Parms.ArtifactToRemove = ArtifactToRemove;
	Parms.OwningPlayer = OwningPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetLegendaryArtifactDropped
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToRemove                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AValPickup_Item*             ArtifactItem                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetLegendaryArtifactDropped(const struct Valhalla_LegendaryArtifactData& ArtifactToRemove, class AValPickup_Item* ArtifactItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetLegendaryArtifactDropped");

	Params::AValGameState_Frontier_SetLegendaryArtifactDropped_Params Parms{};

	Parms.ArtifactToRemove = ArtifactToRemove;
	Parms.ArtifactItem = ArtifactItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetFogSpawnRadius
// (Final, Native, Public)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetFogSpawnRadius(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetFogSpawnRadius");

	Params::AValGameState_Frontier_SetFogSpawnRadius_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetFogEnabled
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetFogEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetFogEnabled");

	Params::AValGameState_Frontier_SetFogEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetCurrentFogPhase
// (Final, Native, Public)
// Parameters:
// struct Valhalla_FogPhase           Value                                                            (Parm, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetCurrentFogPhase(const struct Valhalla_FogPhase& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetCurrentFogPhase");

	Params::AValGameState_Frontier_SetCurrentFogPhase_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetActiveRoyaleFog
// (Final, Native, Public)
// Parameters:
// class AValRoyaleFogVolume*         RoyaleFog                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetActiveRoyaleFog(class AValRoyaleFogVolume* RoyaleFog)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetActiveRoyaleFog");

	Params::AValGameState_Frontier_SetActiveRoyaleFog_Params Parms{};

	Parms.RoyaleFog = RoyaleFog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.SetActiveClasses
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTagContainerActiveClasses                                                    (Parm, NativeAccessSpecifierPublic)

void AValGameState_Frontier::SetActiveClasses(const struct GameplayTags_GameplayTagContainer& ActiveClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "SetActiveClasses");

	Params::AValGameState_Frontier_SetActiveClasses_Params Parms{};

	Parms.ActiveClasses = ActiveClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.RemovePlayerWithLegendary
// (Final, Native, Public)
// Parameters:
// class AActor*                      Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::RemovePlayerWithLegendary(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "RemovePlayerWithLegendary");

	Params::AValGameState_Frontier_RemovePlayerWithLegendary_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.RemoveActorFromPortal
// (Final, Native, Public)
// Parameters:
// int32                              TeamNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::RemoveActorFromPortal(int32 TeamNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "RemoveActorFromPortal");

	Params::AValGameState_Frontier_RemoveActorFromPortal_Params Parms{};

	Parms.TeamNumber = TeamNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.RegisterPOI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::RegisterPOI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "RegisterPOI");

	Params::AValGameState_Frontier_RegisterPOI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.OnTrapIsSetOff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Trap                                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Victim                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::OnTrapIsSetOff(class AActor* Trap, class AActor* Victim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnTrapIsSetOff");

	Params::AValGameState_Frontier_OnTrapIsSetOff_Params Parms{};

	Parms.Trap = Trap;
	Parms.Victim = Victim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TrainingState
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_TrainingState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TrainingState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TrainingBotsRemaining
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_TrainingBotsRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TrainingBotsRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TotalArtifactsAvailable
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_TotalArtifactsAvailable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TotalArtifactsAvailable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TimeUntilSpectate
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_TimeUntilSpectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TimeUntilSpectate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TeamsRemaining
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_TeamsRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TeamsRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_TeamClassData
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_TeamClassData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_TeamClassData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_SpawnedLegendaryArtifacts
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_SpawnedLegendaryArtifacts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_SpawnedLegendaryArtifacts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_SelectedTrees
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_SelectedTrees()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_SelectedTrees");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_SelectedItems
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_SelectedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_SelectedItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_RoyaleFog
// (Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_RoyaleFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_RoyaleFog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_RespawnPoints
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_RespawnPoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_RespawnPoints");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_PortalState
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_PortalState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_PortalState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_PortalActivationDelay
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_PortalActivationDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_PortalActivationDelay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_PlayersWithLegendaries
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_PlayersWithLegendaries()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_PlayersWithLegendaries");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_PlayersRemaining
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_PlayersRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_PlayersRemaining");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_PlayerRevealDelay
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_PlayerRevealDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_PlayerRevealDelay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_OpenedLegendaryCrates
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_OpenedLegendaryCrates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_OpenedLegendaryCrates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_MissionsEnabled
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_MissionsEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_MissionsEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_MissionScores
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_MissionScores()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_MissionScores");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_LootState
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_LootState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_LootState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_FogSpawnRadius
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_FogSpawnRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_FogSpawnRadius");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_FogEnabled
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_FogEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_FogEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_FinaleMissionsRequired
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_FinaleMissionsRequired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_FinaleMissionsRequired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ExtractionEndedEarly
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_ExtractionEndedEarly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ExtractionEndedEarly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_DepositState
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_DepositState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_DepositState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_CurrentFogPhase
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_CurrentFogPhase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_CurrentFogPhase");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_Contested
// (Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_Contested()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_Contested");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_CapturingTeam
// (Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_CapturingTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_CapturingTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_CaptureProgress
// (Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_CaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_CaptureProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_BuildingPOIs
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_BuildingPOIs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_BuildingPOIs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ArtifactsExtracted
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_ArtifactsExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ArtifactsExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ArtifactRevealDelay
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_ArtifactRevealDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ArtifactRevealDelay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ActivePortals
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_ActivePortals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ActivePortals");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ActiveLootExtractions
// (Final, Native, Public)
// Parameters:

void AValGameState_Frontier::OnRep_ActiveLootExtractions()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ActiveLootExtractions");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ActiveLoot
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_ActiveLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ActiveLoot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnRep_ActiveClasses
// (Final, Native, Protected)
// Parameters:

void AValGameState_Frontier::OnRep_ActiveClasses()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnRep_ActiveClasses");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.OnPOICrateOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::OnPOICrateOpened(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "OnPOICrateOpened");

	Params::AValGameState_Frontier_OnPOICrateOpened_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}

/*
// Function Valhalla.ValGameState_Frontier.IsClassAvailable
// (Final, Native, Public)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Class                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::IsClassAvailable(int32 TeamId, const struct GameplayTags_GameplayTag& Class)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "IsClassAvailable");

	Params::AValGameState_Frontier_IsClassAvailable_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.Class = Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}
*/

// Function Valhalla.ValGameState_Frontier.InitializeClassData
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<int32>                      TeamIds                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TMap<struct GameplayTags_GameplayTag, int32>MaxClassCounts                                                   (Parm, NativeAccessSpecifierPublic)

void AValGameState_Frontier::InitializeClassData(TArray<int32>& TeamIds, TMap<struct GameplayTags_GameplayTag, int32> MaxClassCounts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "InitializeClassData");

	Params::AValGameState_Frontier_InitializeClassData_Params Parms{};

	Parms.TeamIds = TeamIds;
	Parms.MaxClassCounts = MaxClassCounts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}

/*
// Function Valhalla.ValGameState_Frontier.IncrementClassCount
// (Final, Native, Protected)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Class                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::IncrementClassCount(int32 TeamId, const struct GameplayTags_GameplayTag& Class)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "IncrementClassCount");

	Params::AValGameState_Frontier_IncrementClassCount_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.Class = Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}
*/

// Function Valhalla.ValGameState_Frontier.GetUseKoTH
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetUseKoTH()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetUseKoTH");

	Params::AValGameState_Frontier_GetUseKoTH_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTrainingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ETrainingState          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ETrainingState AValGameState_Frontier::GetTrainingState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTrainingState");

	Params::AValGameState_Frontier_GetTrainingState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTrainingBotsRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetTrainingBotsRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTrainingBotsRemaining");

	Params::AValGameState_Frontier_GetTrainingBotsRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTotalArtifactsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetTotalArtifactsAvailable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTotalArtifactsAvailable");

	Params::AValGameState_Frontier_GetTotalArtifactsAvailable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTimeUntilSpectate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetTimeUntilSpectate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTimeUntilSpectate");

	Params::AValGameState_Frontier_GetTimeUntilSpectate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTeamsRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetTeamsRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTeamsRemaining");

	Params::AValGameState_Frontier_GetTeamsRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTeamCounts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int32, int32>                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, int32> AValGameState_Frontier::GetTeamCounts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTeamCounts");

	Params::AValGameState_Frontier_GetTeamCounts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetTeamClassCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_TeamClassList      OutTeamClassCount                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetTeamClassCount(int32 TeamId, struct Valhalla_TeamClassList* OutTeamClassCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetTeamClassCount");

	Params::AValGameState_Frontier_GetTeamClassCount_Params Parms{};

	Parms.TeamId = TeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTeamClassCount != nullptr)
		*OutTeamClassCount = std::move(Parms.OutTeamClassCount);

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetSpawnedArtifactLocations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_LegendaryArtifactData>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_LegendaryArtifactData> AValGameState_Frontier::GetSpawnedArtifactLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetSpawnedArtifactLocations");

	Params::AValGameState_Frontier_GetSpawnedArtifactLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetRevealedPlayerLocations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct Engine_Vector_NetQuantize10>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Engine_Vector_NetQuantize10> AValGameState_Frontier::GetRevealedPlayerLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetRevealedPlayerLocations");

	Params::AValGameState_Frontier_GetRevealedPlayerLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetRespawnPoints
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValRespawnPoint*>    OutRespawnPoints                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetRespawnPoints(TArray<class AValRespawnPoint*>* OutRespawnPoints)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetRespawnPoints");

	Params::AValGameState_Frontier_GetRespawnPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRespawnPoints != nullptr)
		*OutRespawnPoints = std::move(Parms.OutRespawnPoints);

}


// Function Valhalla.ValGameState_Frontier.GetPortalState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EGameObjectiveState     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EGameObjectiveState AValGameState_Frontier::GetPortalState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetPortalState");

	Params::AValGameState_Frontier_GetPortalState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetPortalActivationDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameState_Frontier::GetPortalActivationDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetPortalActivationDelay");

	Params::AValGameState_Frontier_GetPortalActivationDelay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetPlayersRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetPlayersRemaining()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetPlayersRemaining");

	Params::AValGameState_Frontier_GetPlayersRemaining_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetNextChestLegendary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetNextChestLegendary()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetNextChestLegendary");

	Params::AValGameState_Frontier_GetNextChestLegendary_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetMissionsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetMissionsEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetMissionsEnabled");

	Params::AValGameState_Frontier_GetMissionsEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetMissionScore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              TeamNum                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Score                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetMissionScore(int32 TeamNum, int32* Score)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetMissionScore");

	Params::AValGameState_Frontier_GetMissionScore_Params Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Score != nullptr)
		*Score = Parms.Score;

}


// Function Valhalla.ValGameState_Frontier.GetLootState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EGameObjectiveState     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EGameObjectiveState AValGameState_Frontier::GetLootState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetLootState");

	Params::AValGameState_Frontier_GetLootState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetLegendaryLootPerCrate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetLegendaryLootPerCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetLegendaryLootPerCrate");

	Params::AValGameState_Frontier_GetLegendaryLootPerCrate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetFogSpawnRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameState_Frontier::GetFogSpawnRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetFogSpawnRadius");

	Params::AValGameState_Frontier_GetFogSpawnRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetFogEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetFogEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetFogEnabled");

	Params::AValGameState_Frontier_GetFogEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetFinaleMissionsRequired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetFinaleMissionsRequired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetFinaleMissionsRequired");

	Params::AValGameState_Frontier_GetFinaleMissionsRequired_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetDepositState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EGameObjectiveState     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EGameObjectiveState AValGameState_Frontier::GetDepositState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetDepositState");

	Params::AValGameState_Frontier_GetDepositState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetCurrentFogPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct Valhalla_FogPhase           ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct Valhalla_FogPhase AValGameState_Frontier::GetCurrentFogPhase()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetCurrentFogPhase");

	Params::AValGameState_Frontier_GetCurrentFogPhase_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetContested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Frontier::GetContested()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetContested");

	Params::AValGameState_Frontier_GetContested_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetCapturingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetCapturingTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetCapturingTeam");

	Params::AValGameState_Frontier_GetCapturingTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetCaptureProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValGameState_Frontier::GetCaptureProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetCaptureProgress");

	Params::AValGameState_Frontier_GetCaptureProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetBuildingPOIs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_BuildingPOI>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct Valhalla_BuildingPOI> AValGameState_Frontier::GetBuildingPOIs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetBuildingPOIs");

	Params::AValGameState_Frontier_GetBuildingPOIs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetAvailableTrees
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AValGameState_Frontier::GetAvailableTrees()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetAvailableTrees");

	Params::AValGameState_Frontier_GetAvailableTrees_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetAvailableItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> AValGameState_Frontier::GetAvailableItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetAvailableItems");

	Params::AValGameState_Frontier_GetAvailableItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetArtifactsExtracted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Frontier::GetArtifactsExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetArtifactsExtracted");

	Params::AValGameState_Frontier_GetArtifactsExtracted_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetActiveRoyaleFog
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValRoyaleFogVolume*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValRoyaleFogVolume* AValGameState_Frontier::GetActiveRoyaleFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActiveRoyaleFog");

	Params::AValGameState_Frontier_GetActiveRoyaleFog_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Frontier.GetActiveRespawnPoints
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValRespawnPoint*>    OutRespawnPoints                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetActiveRespawnPoints(TArray<class AValRespawnPoint*>* OutRespawnPoints)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActiveRespawnPoints");

	Params::AValGameState_Frontier_GetActiveRespawnPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRespawnPoints != nullptr)
		*OutRespawnPoints = std::move(Parms.OutRespawnPoints);

}


// Function Valhalla.ValGameState_Frontier.GetActivePortals
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValObjective_Portal*>ActivePortals                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetActivePortals(TArray<class AValObjective_Portal*>* ActivePortals)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActivePortals");

	Params::AValGameState_Frontier_GetActivePortals_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ActivePortals != nullptr)
		*ActivePortals = std::move(Parms.ActivePortals);

}


// Function Valhalla.ValGameState_Frontier.GetActiveLootExtractions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValObjective_LootExtractionSite*>OutLootExtractions                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetActiveLootExtractions(TArray<class AValObjective_LootExtractionSite*>* OutLootExtractions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActiveLootExtractions");

	Params::AValGameState_Frontier_GetActiveLootExtractions_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLootExtractions != nullptr)
		*OutLootExtractions = std::move(Parms.OutLootExtractions);

}


// Function Valhalla.ValGameState_Frontier.GetActiveLoot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValObjective_Loot*>  ActiveLoot                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetActiveLoot(TArray<class AValObjective_Loot*>* ActiveLoot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActiveLoot");

	Params::AValGameState_Frontier_GetActiveLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ActiveLoot != nullptr)
		*ActiveLoot = std::move(Parms.ActiveLoot);

}


// Function Valhalla.ValGameState_Frontier.GetActiveClasses
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTagContainerOutActiveClasses                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AValGameState_Frontier::GetActiveClasses(struct GameplayTags_GameplayTagContainer* OutActiveClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "GetActiveClasses");

	Params::AValGameState_Frontier_GetActiveClasses_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutActiveClasses != nullptr)
		*OutActiveClasses = std::move(Parms.OutActiveClasses);

}

/*
// Function Valhalla.ValGameState_Frontier.DecrementClassCount
// (Final, Native, Protected)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Class                                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::DecrementClassCount(int32 TeamId, const struct GameplayTags_GameplayTag& Class)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "DecrementClassCount");

	Params::AValGameState_Frontier_DecrementClassCount_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.Class = Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}
*/

// Function Valhalla.ValGameState_Frontier.ChangeClass
// (Final, Native, Public)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    OldClass                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    NewClass                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::ChangeClass(int32 TeamId, const struct GameplayTags_GameplayTag& OldClass, const struct GameplayTags_GameplayTag& NewClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "ChangeClass");

	Params::AValGameState_Frontier_ChangeClass_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.OldClass = OldClass;
	Parms.NewClass = NewClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.AddSpawnedLegendaryArtifact
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_LegendaryArtifactDataArtifactToAdd                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AValGameState_Frontier::AddSpawnedLegendaryArtifact(const struct Valhalla_LegendaryArtifactData& ArtifactToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "AddSpawnedLegendaryArtifact");

	Params::AValGameState_Frontier_AddSpawnedLegendaryArtifact_Params Parms{};

	Parms.ArtifactToAdd = ArtifactToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.AddPlayerWithLegendary
// (Final, Native, Public)
// Parameters:
// class AActor*                      Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::AddPlayerWithLegendary(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "AddPlayerWithLegendary");

	Params::AValGameState_Frontier_AddPlayerWithLegendary_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Frontier.AddActorToPortal
// (Final, Native, Public)
// Parameters:
// int32                              TeamNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Frontier::AddActorToPortal(int32 TeamNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Frontier", "AddActorToPortal");

	Params::AValGameState_Frontier_AddActorToPortal_Params Parms{};

	Parms.TeamNumber = TeamNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameState_Dungeon
// (Actor)

class UClass* AValGameState_Dungeon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameState_Dungeon");

	return Clss;
}


// ValGameState_Dungeon Valhalla.Default__ValGameState_Dungeon
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameState_Dungeon* AValGameState_Dungeon::GetDefaultObj()
{
	static class AValGameState_Dungeon* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameState_Dungeon*>(AValGameState_Dungeon::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameState_Dungeon.UnloadStreamLevelCompleted
// (Final, Native, Protected)
// Parameters:

void AValGameState_Dungeon::UnloadStreamLevelCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "UnloadStreamLevelCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.SetPlayerEmissivesEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bPlayerEmissivesEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::SetPlayerEmissivesEnabled(bool bPlayerEmissivesEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "SetPlayerEmissivesEnabled");

	Params::AValGameState_Dungeon_SetPlayerEmissivesEnabled_Params Parms{};

	Parms.bPlayerEmissivesEnabled = bPlayerEmissivesEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.SetDungeonSeed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewSeed                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::SetDungeonSeed(int32 NewSeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "SetDungeonSeed");

	Params::AValGameState_Dungeon_SetDungeonSeed_Params Parms{};

	Parms.NewSeed = NewSeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.RegisterObjectToCell
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     CellObject                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_IntPoint        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_IntPoint AValGameState_Dungeon::RegisterObjectToCell(class UObject* CellObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "RegisterObjectToCell");

	Params::AValGameState_Dungeon_RegisterObjectToCell_Params Parms{};

	Parms.CellObject = CellObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.RegisterObjectForMeshSwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     CellObject                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                 StaticMesh                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::RegisterObjectForMeshSwap(class UObject* CellObject, class UStaticMesh* StaticMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "RegisterObjectForMeshSwap");

	Params::AValGameState_Dungeon_RegisterObjectForMeshSwap_Params Parms{};

	Parms.CellObject = CellObject;
	Parms.StaticMesh = StaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.RegisterCellObject
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        CellCenter                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     CellObject                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::RegisterCellObject(struct CoreUObject_IntPoint& CellCenter, class UObject* CellObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "RegisterCellObject");

	Params::AValGameState_Dungeon_RegisterCellObject_Params Parms{};

	Parms.CellCenter = CellCenter;
	Parms.CellObject = CellObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.OnRep_PlayerEmissivesEnabled
// (Native, Public)
// Parameters:

void AValGameState_Dungeon::OnRep_PlayerEmissivesEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "OnRep_PlayerEmissivesEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.OnRep_HackablePanelLocations
// (Native, Protected)
// Parameters:

void AValGameState_Dungeon::OnRep_HackablePanelLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "OnRep_HackablePanelLocations");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.OnRep_GridBasedFog
// (Native, Protected)
// Parameters:

void AValGameState_Dungeon::OnRep_GridBasedFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "OnRep_GridBasedFog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.OnRep_DungeonSeed
// (Native, Protected)
// Parameters:

void AValGameState_Dungeon::OnRep_DungeonSeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "OnRep_DungeonSeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.OnRep_ActiveDungeonPortals
// (Native, Protected)
// Parameters:

void AValGameState_Dungeon::OnRep_ActiveDungeonPortals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "OnRep_ActiveDungeonPortals");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.IsLocationInFog
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          InLocation                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BufferDistance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::IsLocationInFog(struct CoreUObject_Vector& InLocation, float BufferDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "IsLocationInFog");

	Params::AValGameState_Dungeon_IsLocationInFog_Params Parms{};

	Parms.InLocation = InLocation;
	Parms.BufferDistance = BufferDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.HideCellObjects
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct CoreUObject_IntPoint        CellBucketKey                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::HideCellObjects(struct CoreUObject_IntPoint& CellBucketKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "HideCellObjects");

	Params::AValGameState_Dungeon_HideCellObjects_Params Parms{};

	Parms.CellBucketKey = CellBucketKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.HideActorObject
// (Final, Native, Public)
// Parameters:
// class AActor*                      ActorObject                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EChannelToRemove        ChannelToRemove                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::HideActorObject(class AActor* ActorObject, enum class EChannelToRemove ChannelToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "HideActorObject");

	Params::AValGameState_Dungeon_HideActorObject_Params Parms{};

	Parms.ActorObject = ActorObject;
	Parms.ChannelToRemove = ChannelToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.GetShowDungeonPortalsWorldUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::GetShowDungeonPortalsWorldUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetShowDungeonPortalsWorldUI");

	Params::AValGameState_Dungeon_GetShowDungeonPortalsWorldUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.GetPlayerEmissivesEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::GetPlayerEmissivesEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetPlayerEmissivesEnabled");

	Params::AValGameState_Dungeon_GetPlayerEmissivesEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.GetNamedSeededRand
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        SeededRandName                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutValue                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::GetNamedSeededRand(class FName& SeededRandName, int32* OutValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetNamedSeededRand");

	Params::AValGameState_Dungeon_GetNamedSeededRand_Params Parms{};

	Parms.SeededRandName = SeededRandName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.GetHackablePanelLocations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct CoreUObject_Vector2f>Locations                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::GetHackablePanelLocations(TArray<struct CoreUObject_Vector2f>* Locations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetHackablePanelLocations");

	Params::AValGameState_Dungeon_GetHackablePanelLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Locations != nullptr)
		*Locations = std::move(Parms.Locations);

}


// Function Valhalla.ValGameState_Dungeon.GetGridBasedFog
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::GetGridBasedFog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetGridBasedFog");

	Params::AValGameState_Dungeon_GetGridBasedFog_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.GetDungeonSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValGameState_Dungeon::GetDungeonSeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetDungeonSeed");

	Params::AValGameState_Dungeon_GetDungeonSeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.GetActiveDungeonPortals
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AValDungeonPortal*>   ActiveDungeonPortals                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Dungeon::GetActiveDungeonPortals(TArray<class AValDungeonPortal*>* ActiveDungeonPortals)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "GetActiveDungeonPortals");

	Params::AValGameState_Dungeon_GetActiveDungeonPortals_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ActiveDungeonPortals != nullptr)
		*ActiveDungeonPortals = std::move(Parms.ActiveDungeonPortals);

}


// Function Valhalla.ValGameState_Dungeon.DeregisterCellObject
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        CellCenter                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     CellObject                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Dungeon::DeregisterCellObject(struct CoreUObject_IntPoint& CellCenter, class UObject* CellObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "DeregisterCellObject");

	Params::AValGameState_Dungeon_DeregisterCellObject_Params Parms{};

	Parms.CellCenter = CellCenter;
	Parms.CellObject = CellObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Dungeon.CheckForFogDestroyedObjects
// (Final, Native, Public)
// Parameters:

void AValGameState_Dungeon::CheckForFogDestroyedObjects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "CheckForFogDestroyedObjects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Dungeon.BatchRemoveCollision
// (Final, Native, Public)
// Parameters:

void AValGameState_Dungeon::BatchRemoveCollision()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Dungeon", "BatchRemoveCollision");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameState_Lobby
// (Actor)

class UClass* AValGameState_Lobby::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameState_Lobby");

	return Clss;
}


// ValGameState_Lobby Valhalla.Default__ValGameState_Lobby
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameState_Lobby* AValGameState_Lobby::GetDefaultObj()
{
	static class AValGameState_Lobby* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameState_Lobby*>(AValGameState_Lobby::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameState_Lobby.OnRep_WeaponCosmeticConfigs
// (Final, Native, Protected)
// Parameters:

void AValGameState_Lobby::OnRep_WeaponCosmeticConfigs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "OnRep_WeaponCosmeticConfigs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Lobby.OnRep_MasteriesConfig
// (Final, Native, Protected)
// Parameters:

void AValGameState_Lobby::OnRep_MasteriesConfig()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "OnRep_MasteriesConfig");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Lobby.OnRep_LoadoutPassiveSlots
// (Final, Native, Protected)
// Parameters:

void AValGameState_Lobby::OnRep_LoadoutPassiveSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "OnRep_LoadoutPassiveSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Lobby.OnRep_LoadoutPassives
// (Final, Native, Protected)
// Parameters:

void AValGameState_Lobby::OnRep_LoadoutPassives()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "OnRep_LoadoutPassives");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Lobby.OnRep_LoadoutAbilities
// (Final, Native, Protected)
// Parameters:

void AValGameState_Lobby::OnRep_LoadoutAbilities()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "OnRep_LoadoutAbilities");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameState_Lobby.IsMasteryConfigLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValGameState_Lobby::IsMasteryConfigLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "IsMasteryConfigLoaded");

	Params::AValGameState_Lobby_IsMasteryConfigLoaded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Lobby.GetWeaponCosmeticConfigs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_WeaponCosmeticConfig>WeaponCosmeticConfigs                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Lobby::GetWeaponCosmeticConfigs(TArray<struct Valhalla_WeaponCosmeticConfig>* WeaponCosmeticConfigs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetWeaponCosmeticConfigs");

	Params::AValGameState_Lobby_GetWeaponCosmeticConfigs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WeaponCosmeticConfigs != nullptr)
		*WeaponCosmeticConfigs = std::move(Parms.WeaponCosmeticConfigs);

}


// Function Valhalla.ValGameState_Lobby.GetPassivesAffectingAbilityByID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              AbilityID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ValAbilityAffectingPassiveInfo>AffectingPassivesArray                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Lobby::GetPassivesAffectingAbilityByID(int32 AbilityID, TArray<struct Valhalla_ValAbilityAffectingPassiveInfo>* AffectingPassivesArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetPassivesAffectingAbilityByID");

	Params::AValGameState_Lobby_GetPassivesAffectingAbilityByID_Params Parms{};

	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AffectingPassivesArray != nullptr)
		*AffectingPassivesArray = std::move(Parms.AffectingPassivesArray);

}


// Function Valhalla.ValGameState_Lobby.GetMasteryItemAssetForLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EPlayerProperty         MasteryType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Level                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValItemAsset*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValItemAsset* AValGameState_Lobby::GetMasteryItemAssetForLevel(enum class EPlayerProperty MasteryType, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetMasteryItemAssetForLevel");

	Params::AValGameState_Lobby_GetMasteryItemAssetForLevel_Params Parms{};

	Parms.MasteryType = MasteryType;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameState_Lobby.GetLoadoutPassiveSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_AbilityConfig>LoadoutPassiveSlots                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Lobby::GetLoadoutPassiveSlots(TArray<struct Valhalla_AbilityConfig>* LoadoutPassiveSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetLoadoutPassiveSlots");

	Params::AValGameState_Lobby_GetLoadoutPassiveSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LoadoutPassiveSlots != nullptr)
		*LoadoutPassiveSlots = std::move(Parms.LoadoutPassiveSlots);

}


// Function Valhalla.ValGameState_Lobby.GetLoadoutPassives
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_AbilityConfig>LoadoutPassives                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Lobby::GetLoadoutPassives(TArray<struct Valhalla_AbilityConfig>* LoadoutPassives)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetLoadoutPassives");

	Params::AValGameState_Lobby_GetLoadoutPassives_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LoadoutPassives != nullptr)
		*LoadoutPassives = std::move(Parms.LoadoutPassives);

}


// Function Valhalla.ValGameState_Lobby.GetLoadoutAbilities
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct Valhalla_AbilityConfig>LoadoutAbilities                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValGameState_Lobby::GetLoadoutAbilities(TArray<struct Valhalla_AbilityConfig>* LoadoutAbilities)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetLoadoutAbilities");

	Params::AValGameState_Lobby_GetLoadoutAbilities_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LoadoutAbilities != nullptr)
		*LoadoutAbilities = std::move(Parms.LoadoutAbilities);

}


// Function Valhalla.ValGameState_Lobby.GetCallToActionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AValCallToActionManager*     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCallToActionManager* AValGameState_Lobby::GetCallToActionManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameState_Lobby", "GetCallToActionManager");

	Params::AValGameState_Lobby_GetCallToActionManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValGameUserSettings
// (None)

class UClass* UValGameUserSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameUserSettings");

	return Clss;
}


// ValGameUserSettings Valhalla.Default__ValGameUserSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameUserSettings* UValGameUserSettings::GetDefaultObj()
{
	static class UValGameUserSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameUserSettings*>(UValGameUserSettings::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValGameUserSettings.UpdatePlayerContract
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_PlayerContract     Contract                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameUserSettings::UpdatePlayerContract(struct Valhalla_PlayerContract& Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "UpdatePlayerContract");

	Params::UValGameUserSettings_UpdatePlayerContract_Params Parms{};

	Parms.Contract = Contract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetVoiceChatVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetVoiceChatVolume(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetVoiceChatVolume");

	Params::UValGameUserSettings_SetVoiceChatVolume_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetVoiceChatOutputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      SelectedVoiceChatOutputDevice                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetVoiceChatOutputDevice(const class FString& SelectedVoiceChatOutputDevice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetVoiceChatOutputDevice");

	Params::UValGameUserSettings_SetVoiceChatOutputDevice_Params Parms{};

	Parms.SelectedVoiceChatOutputDevice = SelectedVoiceChatOutputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetVoiceChatInputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      SelectedVoiceChatInputDevice                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetVoiceChatInputDevice(const class FString& SelectedVoiceChatInputDevice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetVoiceChatInputDevice");

	Params::UValGameUserSettings_SetVoiceChatInputDevice_Params Parms{};

	Parms.SelectedVoiceChatInputDevice = SelectedVoiceChatInputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetVoiceChatEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetVoiceChatEnabled");

	Params::UValGameUserSettings_SetVoiceChatEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetSquadsQueueSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetSquadsQueueSelected(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetSquadsQueueSelected");

	Params::UValGameUserSettings_SetSquadsQueueSelected_Params Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetShowQADebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetShowQADebug(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetShowQADebug");

	Params::UValGameUserSettings_SetShowQADebug_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetShowDamageNumbers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetShowDamageNumbers(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetShowDamageNumbers");

	Params::UValGameUserSettings_SetShowDamageNumbers_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetShowAccuracyInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetShowAccuracyInfo(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetShowAccuracyInfo");

	Params::UValGameUserSettings_SetShowAccuracyInfo_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetScreenPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetScreenPercentage(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetScreenPercentage");

	Params::UValGameUserSettings_SetScreenPercentage_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetReticleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetReticleType(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetReticleType");

	Params::UValGameUserSettings_SetReticleType_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetReticleShadowOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetReticleShadowOpacity(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetReticleShadowOpacity");

	Params::UValGameUserSettings_SetReticleShadowOpacity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetPushToTalkEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetPushToTalkEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetPushToTalkEnabled");

	Params::UValGameUserSettings_SetPushToTalkEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetNetStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetNetStats(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetNetStats");

	Params::UValGameUserSettings_SetNetStats_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetManualJetpackThrust
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetManualJetpackThrust(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetManualJetpackThrust");

	Params::UValGameUserSettings_SetManualJetpackThrust_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetLastSelectedQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      NewLastSelectedQueue                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetLastSelectedQueue(const class FString& NewLastSelectedQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetLastSelectedQueue");

	Params::UValGameUserSettings_SetLastSelectedQueue_Params Parms{};

	Parms.NewLastSelectedQueue = NewLastSelectedQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetInvertYAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetInvertYAxis(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetInvertYAxis");

	Params::UValGameUserSettings_SetInvertYAxis_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetIgnoreLOS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetIgnoreLOS(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetIgnoreLOS");

	Params::UValGameUserSettings_SetIgnoreLOS_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetHideNameplateInMatchLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetHideNameplateInMatchLobby(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetHideNameplateInMatchLobby");

	Params::UValGameUserSettings_SetHideNameplateInMatchLobby_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetHasCompletedTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               NewHasCompletedTutorial                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetHasCompletedTutorial(bool NewHasCompletedTutorial)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetHasCompletedTutorial");

	Params::UValGameUserSettings_SetHasCompletedTutorial_Params Parms{};

	Parms.NewHasCompletedTutorial = NewHasCompletedTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetGamma
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetGamma(class UObject* WorldContextObject, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetGamma");

	Params::UValGameUserSettings_SetGamma_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetGamepadSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetGamepadSensitivity(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetGamepadSensitivity");

	Params::UValGameUserSettings_SetGamepadSensitivity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetGamepadAimingSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetGamepadAimingSensitivity(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetGamepadAimingSensitivity");

	Params::UValGameUserSettings_SetGamepadAimingSensitivity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetFSRQualityMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EFSRQualityMode         NewMode                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetFSRQualityMode(enum class EFSRQualityMode NewMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetFSRQualityMode");

	Params::UValGameUserSettings_SetFSRQualityMode_Params Parms{};

	Parms.NewMode = NewMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetFrameRateLimitOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewFrameRateLimitOverride                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetFrameRateLimitOverride(int32 NewFrameRateLimitOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetFrameRateLimitOverride");

	Params::UValGameUserSettings_SetFrameRateLimitOverride_Params Parms{};

	Parms.NewFrameRateLimitOverride = NewFrameRateLimitOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetFPSStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetFPSStats(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetFPSStats");

	Params::UValGameUserSettings_SetFPSStats_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetFOV(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetFOV");

	Params::UValGameUserSettings_SetFOV_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetFillParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewFillParty                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetFillParty(bool bNewFillParty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetFillParty");

	Params::UValGameUserSettings_SetFillParty_Params Parms{};

	Parms.bNewFillParty = bNewFillParty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetDisableCameraBob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetDisableCameraBob(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetDisableCameraBob");

	Params::UValGameUserSettings_SetDisableCameraBob_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetDeployablePreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetDeployablePreview(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetDeployablePreview");

	Params::UValGameUserSettings_SetDeployablePreview_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetDamageNumberType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetDamageNumberType(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetDamageNumberType");

	Params::UValGameUserSettings_SetDamageNumberType_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetCurrentXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetCurrentXP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetCurrentXP");

	Params::UValGameUserSettings_SetCurrentXP_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetCrouchMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetCrouchMode(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetCrouchMode");

	Params::UValGameUserSettings_SetCrouchMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetCanSpectateEnemies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetCanSpectateEnemies(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetCanSpectateEnemies");

	Params::UValGameUserSettings_SetCanSpectateEnemies_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetBackgroundAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetBackgroundAudio(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetBackgroundAudio");

	Params::UValGameUserSettings_SetBackgroundAudio_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetAutoSprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetAutoSprint(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetAutoSprint");

	Params::UValGameUserSettings_SetAutoSprint_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetAutoDetectGraphics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetAutoDetectGraphics(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetAutoDetectGraphics");

	Params::UValGameUserSettings_SetAutoDetectGraphics_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetAntiAliasingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetAntiAliasingType(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetAntiAliasingType");

	Params::UValGameUserSettings_SetAntiAliasingType_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetAimingSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetAimingSensitivity(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetAimingSensitivity");

	Params::UValGameUserSettings_SetAimingSensitivity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.SetAimingMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::SetAimingMode(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "SetAimingMode");

	Params::UValGameUserSettings_SetAimingMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.RemoveUnviewedUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ItemIdToRemove                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::RemoveUnviewedUnlock(int32 ItemIdToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "RemoveUnviewedUnlock");

	Params::UValGameUserSettings_RemoveUnviewedUnlock_Params Parms{};

	Parms.ItemIdToRemove = ItemIdToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.RemovePlayerContract
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        ContractId                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::RemovePlayerContract(class FName& ContractId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "RemovePlayerContract");

	Params::UValGameUserSettings_RemovePlayerContract_Params Parms{};

	Parms.ContractId = ContractId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.OnGammaUpdated
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::OnGammaUpdated(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "OnGammaUpdated");

	Params::UValGameUserSettings_OnGammaUpdated_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.OnFOVUpdated
// (Native, Protected, BlueprintCallable)
// Parameters:

void UValGameUserSettings::OnFOVUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "OnFOVUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.IsItemUnviewd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::IsItemUnviewd(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "IsItemUnviewd");

	Params::UValGameUserSettings_IsItemUnviewd_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetVoiceChatVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameUserSettings::GetVoiceChatVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetVoiceChatVolume");

	Params::UValGameUserSettings_GetVoiceChatVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetVoiceChatInputDevice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValGameUserSettings::GetVoiceChatInputDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetVoiceChatInputDevice");

	Params::UValGameUserSettings_GetVoiceChatInputDevice_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetVoiceChatEnabledVal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetVoiceChatEnabledVal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetVoiceChatEnabledVal");

	Params::UValGameUserSettings_GetVoiceChatEnabledVal_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetUnviewedUnlocks
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSet<int32>                        ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TSet<int32> UValGameUserSettings::GetUnviewedUnlocks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetUnviewedUnlocks");

	Params::UValGameUserSettings_GetUnviewedUnlocks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetSquadsQueueSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetSquadsQueueSelected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetSquadsQueueSelected");

	Params::UValGameUserSettings_GetSquadsQueueSelected_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetShowQADebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetShowQADebug()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetShowQADebug");

	Params::UValGameUserSettings_GetShowQADebug_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetShowDamageNumbers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetShowDamageNumbers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetShowDamageNumbers");

	Params::UValGameUserSettings_GetShowDamageNumbers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetShowAccuracyInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetShowAccuracyInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetShowAccuracyInfo");

	Params::UValGameUserSettings_GetShowAccuracyInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetScreenPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetScreenPercentage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetScreenPercentage");

	Params::UValGameUserSettings_GetScreenPercentage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetReticleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetReticleType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetReticleType");

	Params::UValGameUserSettings_GetReticleType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetReticleShadowOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetReticleShadowOpacity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetReticleShadowOpacity");

	Params::UValGameUserSettings_GetReticleShadowOpacity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetPushToTalkEnabledVal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetPushToTalkEnabledVal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetPushToTalkEnabledVal");

	Params::UValGameUserSettings_GetPushToTalkEnabledVal_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetPlayerXPInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_PlayerXPInfo       ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct Valhalla_PlayerXPInfo UValGameUserSettings::GetPlayerXPInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetPlayerXPInfo");

	Params::UValGameUserSettings_GetPlayerXPInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetPlayerContracts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_PlayerContract>Contracts                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValGameUserSettings::GetPlayerContracts(TArray<struct Valhalla_PlayerContract>* Contracts)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetPlayerContracts");

	Params::UValGameUserSettings_GetPlayerContracts_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Contracts != nullptr)
		*Contracts = std::move(Parms.Contracts);

}


// Function Valhalla.ValGameUserSettings.GetNetStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetNetStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetNetStats");

	Params::UValGameUserSettings_GetNetStats_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetMaxResolution
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_IntPoint        MaxResolution                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetMaxResolution(const struct CoreUObject_IntPoint& MaxResolution)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetMaxResolution");

	Params::UValGameUserSettings_GetMaxResolution_Params Parms{};

	Parms.MaxResolution = MaxResolution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetManualJetpackThrust
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetManualJetpackThrust()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetManualJetpackThrust");

	Params::UValGameUserSettings_GetManualJetpackThrust_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetLastSelectedQueue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValGameUserSettings::GetLastSelectedQueue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetLastSelectedQueue");

	Params::UValGameUserSettings_GetLastSelectedQueue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetInvertYAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetInvertYAxis()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetInvertYAxis");

	Params::UValGameUserSettings_GetInvertYAxis_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetIntSetting
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SettingName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              IntVal                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetIntSetting(class FName SettingName, int32* IntVal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetIntSetting");

	Params::UValGameUserSettings_GetIntSetting_Params Parms{};

	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IntVal != nullptr)
		*IntVal = Parms.IntVal;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetIgnoreLOS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetIgnoreLOS()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetIgnoreLOS");

	Params::UValGameUserSettings_GetIgnoreLOS_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetHideNameplateInMatchLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetHideNameplateInMatchLobby()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetHideNameplateInMatchLobby");

	Params::UValGameUserSettings_GetHideNameplateInMatchLobby_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetHasCompletedTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetHasCompletedTutorial()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetHasCompletedTutorial");

	Params::UValGameUserSettings_GetHasCompletedTutorial_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetGammaMinMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_FloatRange      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_FloatRange UValGameUserSettings::GetGammaMinMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetGammaMinMax");

	Params::UValGameUserSettings_GetGammaMinMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetGamma
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameUserSettings::GetGamma()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetGamma");

	Params::UValGameUserSettings_GetGamma_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetGamepadSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetGamepadSensitivity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetGamepadSensitivity");

	Params::UValGameUserSettings_GetGamepadSensitivity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetGamepadAimingSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetGamepadAimingSensitivity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetGamepadAimingSensitivity");

	Params::UValGameUserSettings_GetGamepadAimingSensitivity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFSRQualityMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EFSRQualityMode         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EFSRQualityMode UValGameUserSettings::GetFSRQualityMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFSRQualityMode");

	Params::UValGameUserSettings_GetFSRQualityMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFSREnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetFSREnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFSREnabled");

	Params::UValGameUserSettings_GetFSREnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFrameRateLimitOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetFrameRateLimitOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFrameRateLimitOverride");

	Params::UValGameUserSettings_GetFrameRateLimitOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFPSStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetFPSStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFPSStats");

	Params::UValGameUserSettings_GetFPSStats_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFOVMinMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_FloatRange      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_FloatRange UValGameUserSettings::GetFOVMinMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFOVMinMax");

	Params::UValGameUserSettings_GetFOVMinMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameUserSettings::GetFOV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFOV");

	Params::UValGameUserSettings_GetFOV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFloatSetting
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SettingName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FloatVal                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetFloatSetting(class FName SettingName, float* FloatVal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFloatSetting");

	Params::UValGameUserSettings_GetFloatSetting_Params Parms{};

	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FloatVal != nullptr)
		*FloatVal = Parms.FloatVal;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetFillParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetFillParty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetFillParty");

	Params::UValGameUserSettings_GetFillParty_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetDisableCameraBob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetDisableCameraBob()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetDisableCameraBob");

	Params::UValGameUserSettings_GetDisableCameraBob_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetDeployablePreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetDeployablePreview()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetDeployablePreview");

	Params::UValGameUserSettings_GetDeployablePreview_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetDebugUseEnhancedInput
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetDebugUseEnhancedInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetDebugUseEnhancedInput");

	Params::UValGameUserSettings_GetDebugUseEnhancedInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetDamageNumberType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetDamageNumberType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetDamageNumberType");

	Params::UValGameUserSettings_GetDamageNumberType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetCrouchMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetCrouchMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetCrouchMode");

	Params::UValGameUserSettings_GetCrouchMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetCanSpectateEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetCanSpectateEnemies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetCanSpectateEnemies");

	Params::UValGameUserSettings_GetCanSpectateEnemies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetBoolSetting
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SettingName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               BoolVal                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetBoolSetting(class FName SettingName, bool* BoolVal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetBoolSetting");

	Params::UValGameUserSettings_GetBoolSetting_Params Parms{};

	Parms.SettingName = SettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BoolVal != nullptr)
		*BoolVal = Parms.BoolVal;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetBackgroundAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetBackgroundAudio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetBackgroundAudio");

	Params::UValGameUserSettings_GetBackgroundAudio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetAutoSprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetAutoSprint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetAutoSprint");

	Params::UValGameUserSettings_GetAutoSprint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetAutoDetectGraphics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValGameUserSettings::GetAutoDetectGraphics()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetAutoDetectGraphics");

	Params::UValGameUserSettings_GetAutoDetectGraphics_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetAntiAliasingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetAntiAliasingType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetAntiAliasingType");

	Params::UValGameUserSettings_GetAntiAliasingType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.GetAimingMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UValGameUserSettings::GetAimingMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "GetAimingMode");

	Params::UValGameUserSettings_GetAimingMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.CachePlayerXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameUserSettings::CachePlayerXP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "CachePlayerXP");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.BP_GetLastGPUBenchmarkResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameUserSettings::BP_GetLastGPUBenchmarkResult()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "BP_GetLastGPUBenchmarkResult");

	Params::UValGameUserSettings_BP_GetLastGPUBenchmarkResult_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.BP_GetLastCPUBenchmarkResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UValGameUserSettings::BP_GetLastCPUBenchmarkResult()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "BP_GetLastCPUBenchmarkResult");

	Params::UValGameUserSettings_BP_GetLastCPUBenchmarkResult_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValGameUserSettings.ApplySoundSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValGameUserSettings::ApplySoundSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "ApplySoundSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.AddUnviewedUnlocks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                      UnlockedItemIds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameUserSettings::AddUnviewedUnlocks(TArray<int32>& UnlockedItemIds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "AddUnviewedUnlocks");

	Params::UValGameUserSettings_AddUnviewedUnlocks_Params Parms{};

	Parms.UnlockedItemIds = UnlockedItemIds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.AddUnviewedUnlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              UnlockedItemId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::AddUnviewedUnlock(int32 UnlockedItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "AddUnviewedUnlock");

	Params::UValGameUserSettings_AddUnviewedUnlock_Params Parms{};

	Parms.UnlockedItemId = UnlockedItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.AddPlayerXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UValGameUserSettings::AddPlayerXP(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "AddPlayerXP");

	Params::UValGameUserSettings_AddPlayerXP_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValGameUserSettings.AddPlayerContract
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_PlayerContract     Contract                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UValGameUserSettings::AddPlayerContract(struct Valhalla_PlayerContract& Contract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValGameUserSettings", "AddPlayerContract");

	Params::UValGameUserSettings_AddPlayerContract_Params Parms{};

	Parms.Contract = Contract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameViewportClient
// (None)

class UClass* UValGameViewportClient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameViewportClient");

	return Clss;
}


// ValGameViewportClient Valhalla.Default__ValGameViewportClient
// (Public, ClassDefaultObject, ArchetypeObject)

class UValGameViewportClient* UValGameViewportClient::GetDefaultObj()
{
	static class UValGameViewportClient* Default = nullptr;

	if (!Default)
		Default = static_cast<UValGameViewportClient*>(UValGameViewportClient::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValGroundAffectInterface
// (None)

class UClass* IValGroundAffectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGroundAffectInterface");

	return Clss;
}


// ValGroundAffectInterface Valhalla.Default__ValGroundAffectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IValGroundAffectInterface* IValGroundAffectInterface::GetDefaultObj()
{
	static class IValGroundAffectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IValGroundAffectInterface*>(IValGroundAffectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTrapInterface
// (None)

class UClass* IValTrapInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTrapInterface");

	return Clss;
}


// ValTrapInterface Valhalla.Default__ValTrapInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IValTrapInterface* IValTrapInterface::GetDefaultObj()
{
	static class IValTrapInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IValTrapInterface*>(IValTrapInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValInteractableMission
// (Actor)

class UClass* AValInteractableMission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInteractableMission");

	return Clss;
}


// ValInteractableMission Valhalla.Default__ValInteractableMission
// (Public, ClassDefaultObject, ArchetypeObject)

class AValInteractableMission* AValInteractableMission::GetDefaultObj()
{
	static class AValInteractableMission* Default = nullptr;

	if (!Default)
		Default = static_cast<AValInteractableMission*>(AValInteractableMission::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInteractableMission.SpawnPhaseBots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MissionPhaseIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::SpawnPhaseBots(class AValCharacter* Initiator, int32 MissionPhaseIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "SpawnPhaseBots");

	Params::AValInteractableMission_SpawnPhaseBots_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.MissionPhaseIndex = MissionPhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.SetOwningConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValUtopiaConstructor*       InConstructor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::SetOwningConstructor(class AValUtopiaConstructor* InConstructor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "SetOwningConstructor");

	Params::AValInteractableMission_SetOwningConstructor_Params Parms{};

	Parms.InConstructor = InConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "SetCachedChanneler");

	Params::AValInteractableMission_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.RegisterBotSpawnLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Transform       InSpawnLocation                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::RegisterBotSpawnLocation(struct CoreUObject_Transform& InSpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "RegisterBotSpawnLocation");

	Params::AValInteractableMission_RegisterBotSpawnLocation_Params Parms{};

	Parms.InSpawnLocation = InSpawnLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.OnLootItemsLoaded
// (Native, Protected)
// Parameters:
// int32                              Phase                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::OnLootItemsLoaded(int32 Phase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "OnLootItemsLoaded");

	Params::AValInteractableMission_OnLootItemsLoaded_Params Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.OnLootAssetLoaded
// (Native, Protected)
// Parameters:
// int32                              Phase                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::OnLootAssetLoaded(int32 Phase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "OnLootAssetLoaded");

	Params::AValInteractableMission_OnLootAssetLoaded_Params Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInteractableMission.InteractionEventTriggered
// (Event, Public, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MissionPhaseIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionEventType   EventType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValInteractableMission::InteractionEventTriggered(class AValCharacter* Initiator, int32 MissionPhaseIndex, enum class EInteractionEventType EventType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "InteractionEventTriggered");

	Params::AValInteractableMission_InteractionEventTriggered_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.MissionPhaseIndex = MissionPhaseIndex;
	Parms.EventType = EventType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValInteractableMission.GetOwningConstructor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValUtopiaConstructor*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValUtopiaConstructor* AValInteractableMission::GetOwningConstructor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetOwningConstructor");

	Params::AValInteractableMission_GetOwningConstructor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.GetMissionPhaseForPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValPlayerController*        ValPlayerController                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValInteractableMission::GetMissionPhaseForPlayer(class AValPlayerController* ValPlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetMissionPhaseForPlayer");

	Params::AValInteractableMission_GetMissionPhaseForPlayer_Params Parms{};

	Parms.ValPlayerController = ValPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValInteractableMission::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetInteractComponent");

	Params::AValInteractableMission_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValInteractableMission::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetChannelTime");

	Params::AValInteractableMission_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValInteractableMission::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetCachedChanneler");

	Params::AValInteractableMission_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValInteractableMission::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "GetBlockInteractReason");

	Params::AValInteractableMission_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.DoesPlayerHaveRequiredMissionTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractableMission::DoesPlayerHaveRequiredMissionTags(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "DoesPlayerHaveRequiredMissionTags");

	Params::AValInteractableMission_DoesPlayerHaveRequiredMissionTags_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.DoesPlayerHaveRequiredItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MissionPhase                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractableMission::DoesPlayerHaveRequiredItems(class AValCharacter* Initiator, int32 MissionPhase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "DoesPlayerHaveRequiredItems");

	Params::AValInteractableMission_DoesPlayerHaveRequiredItems_Params Parms{};

	Parms.Initiator = Initiator;
	Parms.MissionPhase = MissionPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInteractableMission.DoesPlayerHaveEnoughMissionSlotsSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValInteractableMission::DoesPlayerHaveEnoughMissionSlotsSpace(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInteractableMission", "DoesPlayerHaveEnoughMissionSlotsSpace");

	Params::AValInteractableMission_DoesPlayerHaveEnoughMissionSlotsSpace_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValDeathCrate
// (Actor)

class UClass* AValDeathCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDeathCrate");

	return Clss;
}


// ValDeathCrate Valhalla.Default__ValDeathCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDeathCrate* AValDeathCrate::GetDefaultObj()
{
	static class AValDeathCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDeathCrate*>(AValDeathCrate::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDeathCrate.SetLaunchVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          Velocity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::SetLaunchVelocity(const struct CoreUObject_Vector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "SetLaunchVelocity");

	Params::AValDeathCrate_SetLaunchVelocity_Params Parms{};

	Parms.Velocity = Velocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnRep_OwnerName
// (Final, Native, Protected)
// Parameters:

void AValDeathCrate::OnRep_OwnerName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnRep_OwnerName");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnPlayerCrateCreated
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              PlayerTeam                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnPlayerCrateCreated(int32 PlayerTeam)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnPlayerCrateCreated");

	Params::AValDeathCrate_OnPlayerCrateCreated_Params Parms{};

	Parms.PlayerTeam = PlayerTeam;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDeathCrate.OnLootItemsLoaded
// (Native, Protected)
// Parameters:

void AValDeathCrate::OnLootItemsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnLootItemsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnLootAssetLoaded
// (Native, Protected)
// Parameters:
// int32                              BotLootIncrease                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnLootAssetLoaded(int32 BotLootIncrease)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnLootAssetLoaded");

	Params::AValDeathCrate_OnLootAssetLoaded_Params Parms{};

	Parms.BotLootIncrease = BotLootIncrease;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnHoverStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnHoverStart(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnHoverStart");

	Params::AValDeathCrate_OnHoverStart_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDeathCrate.OnHoverEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnHoverEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnHoverEnd");

	Params::AValDeathCrate_OnHoverEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDeathCrate.OnEndBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnEndBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnEndBestInteractable");

	Params::AValDeathCrate_OnEndBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnDespawnTimerEnd
// (Native, Protected)
// Parameters:

void AValDeathCrate::OnDespawnTimerEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnDespawnTimerEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnDespawnCheckComponentOverlapped
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValDeathCrate::OnDespawnCheckComponentOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnDespawnCheckComponentOverlapped");

	Params::AValDeathCrate_OnDespawnCheckComponentOverlapped_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnDespawnCheckComponentEndOverlapped
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnDespawnCheckComponentEndOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnDespawnCheckComponentEndOverlapped");

	Params::AValDeathCrate_OnDespawnCheckComponentEndOverlapped_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.OnBecomeBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDeathCrate::OnBecomeBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "OnBecomeBestInteractable");

	Params::AValDeathCrate_OnBecomeBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDeathCrate.GetDogTagRarity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValDeathCrate::GetDogTagRarity(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "GetDogTagRarity");

	Params::AValDeathCrate_GetDogTagRarity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDeathCrate.GetDespawnCheckCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USphereComponent*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USphereComponent* AValDeathCrate::GetDespawnCheckCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "GetDespawnCheckCollisionComp");

	Params::AValDeathCrate_GetDespawnCheckCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDeathCrate.DoLaunchSequence
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValDeathCrate::DoLaunchSequence()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDeathCrate", "DoLaunchSequence");



	UObject::ProcessEvent(Func, nullptr);

}


// Class Valhalla.ValDropCrate
// (Actor)

class UClass* AValDropCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDropCrate");

	return Clss;
}


// ValDropCrate Valhalla.Default__ValDropCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDropCrate* AValDropCrate::GetDefaultObj()
{
	static class AValDropCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDropCrate*>(AValDropCrate::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDropCrate.EndInteraction
// (Native, Public, BlueprintCallable)
// Parameters:

void AValDropCrate::EndInteraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDropCrate", "EndInteraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValLootCrate
// (Actor)

class UClass* AValLootCrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValLootCrate");

	return Clss;
}


// ValLootCrate Valhalla.Default__ValLootCrate
// (Public, ClassDefaultObject, ArchetypeObject)

class AValLootCrate* AValLootCrate::GetDefaultObj()
{
	static class AValLootCrate* Default = nullptr;

	if (!Default)
		Default = static_cast<AValLootCrate*>(AValLootCrate::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValLootCrate.UpdateBoobyTrapVFX
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootCrate::UpdateBoobyTrapVFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "UpdateBoobyTrapVFX");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootCrate.TryToOpen
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValLootCrate::TryToOpen(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "TryToOpen");

	Params::AValLootCrate_TryToOpen_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootCrate.StartChanneledInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::StartChanneledInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "StartChanneledInteract");

	Params::AValLootCrate_StartChanneledInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.SpawnLoot
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValLootCrate::SpawnLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "SpawnLoot");

	Params::AValLootCrate_SpawnLoot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootCrate.SpawnArtifact
// (Event, Public, BlueprintEvent)
// Parameters:

void AValLootCrate::SpawnArtifact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "SpawnArtifact");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootCrate.SetOwningConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValUtopiaConstructor*       InConstructor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::SetOwningConstructor(class AValUtopiaConstructor* InConstructor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "SetOwningConstructor");

	Params::AValLootCrate_SetOwningConstructor_Params Parms{};

	Parms.InConstructor = InConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.SetFullyOpened
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:

void AValLootCrate::SetFullyOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "SetFullyOpened");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.ResetCrate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValLootCrate::ResetCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "ResetCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.PredictInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::PredictInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "PredictInteract");

	Params::AValLootCrate_PredictInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.PredictedOpen
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValLootCrate::PredictedOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "PredictedOpen");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootCrate.OnRep_CrateActive
// (Native, Protected)
// Parameters:

void AValLootCrate::OnRep_CrateActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnRep_CrateActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnRep_BoobyTrapInstigator
// (Final, Native, Protected)
// Parameters:

void AValLootCrate::OnRep_BoobyTrapInstigator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnRep_BoobyTrapInstigator");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnLootItemsLoaded
// (Native, Protected)
// Parameters:

void AValLootCrate::OnLootItemsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnLootItemsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnLootAssetLoaded
// (Native, Protected)
// Parameters:

void AValLootCrate::OnLootAssetLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnLootAssetLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnInActive
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValLootCrate::OnInActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnInActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnHoverStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::OnHoverStart(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnHoverStart");

	Params::AValLootCrate_OnHoverStart_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootCrate.OnHoverEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::OnHoverEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnHoverEnd");

	Params::AValLootCrate_OnHoverEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootCrate.OnEndBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::OnEndBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnEndBestInteractable");

	Params::AValLootCrate_OnEndBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.OnBecomeBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::OnBecomeBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "OnBecomeBestInteractable");

	Params::AValLootCrate_OnBecomeBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.LingerTimerExpired
// (Final, Native, Protected)
// Parameters:

void AValLootCrate::LingerTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "LingerTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.HandleTriggeredAlarmUX
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValBotSpawner*              botSpawner                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::HandleTriggeredAlarmUX(class AValBotSpawner* botSpawner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "HandleTriggeredAlarmUX");

	Params::AValLootCrate_HandleTriggeredAlarmUX_Params Parms{};

	Parms.botSpawner = botSpawner;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootCrate.HandleFirstOpen
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::HandleFirstOpen(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "HandleFirstOpen");

	Params::AValLootCrate_HandleFirstOpen_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootCrate.HandleFirstInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::HandleFirstInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "HandleFirstInteract");

	Params::AValLootCrate_HandleFirstInteract_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValLootCrate.HandleBotsSpawned
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class AValBotSpawner*              botSpawner                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::HandleBotsSpawned(class AValBotSpawner* botSpawner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "HandleBotsSpawned");

	Params::AValLootCrate_HandleBotsSpawned_Params Parms{};

	Parms.botSpawner = botSpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValLootCrate.GetOwningConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValUtopiaConstructor*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValUtopiaConstructor* AValLootCrate::GetOwningConstructor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "GetOwningConstructor");

	Params::AValLootCrate_GetOwningConstructor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootCrate.GetIsHighSecCrate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValLootCrate::GetIsHighSecCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "GetIsHighSecCrate");

	Params::AValLootCrate_GetIsHighSecCrate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootCrate.GetBoobyTrapInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValLootCrate::GetBoobyTrapInstigator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "GetBoobyTrapInstigator");

	Params::AValLootCrate_GetBoobyTrapInstigator_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValLootCrate.Explode
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValLootCrate::Explode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "Explode");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValLootCrate.ClientHandleTriggeredAlarmUX
// (Net, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// class AValBotSpawner*              botSpawner                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValLootCrate::ClientHandleTriggeredAlarmUX(class AValBotSpawner* botSpawner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValLootCrate", "ClientHandleTriggeredAlarmUX");

	Params::AValLootCrate_ClientHandleTriggeredAlarmUX_Params Parms{};

	Parms.botSpawner = botSpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValCharacter
// (Actor, Pawn)

class UClass* AValCharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValCharacter");

	return Clss;
}


// ValCharacter Valhalla.Default__ValCharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class AValCharacter* AValCharacter::GetDefaultObj()
{
	static class AValCharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<AValCharacter*>(AValCharacter::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValCharacter.UseQuickSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    QuickSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::UseQuickSlot(struct GameplayTags_GameplayTag& QuickSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UseQuickSlot");

	Params::AValCharacter_UseQuickSlot_Params Parms{};

	Parms.QuickSlot = QuickSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.UpdateWeaponRarity
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*      MeshComponent                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateWeaponRarity(class USkeletalMeshComponent* MeshComponent, enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateWeaponRarity");

	Params::AValCharacter_UpdateWeaponRarity_Params Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.UpdateTeamMaterial
// (Final, Native, Public)
// Parameters:

void AValCharacter::UpdateTeamMaterial()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateTeamMaterial");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateTeamColor
// (Final, Native, Public)
// Parameters:

void AValCharacter::UpdateTeamColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateTeamColor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateTeamCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              OldTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewTeamId                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateTeamCollision(int32 OldTeamId, int32 NewTeamId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateTeamCollision");

	Params::AValCharacter_UpdateTeamCollision_Params Parms{};

	Parms.OldTeamId = OldTeamId;
	Parms.NewTeamId = NewTeamId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateSkiingSound
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EPhysicalSurface        SurfaceType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateSkiingSound(enum class EPhysicalSurface SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateSkiingSound");

	Params::AValCharacter_UpdateSkiingSound_Params Parms{};

	Parms.SurfaceType = SurfaceType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.UpdatePendingDevice
// (Native, Public, HasOutParams)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleSpecHandle                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdatePendingDevice(struct GameplayAbilities_GameplayAbilitySpecHandle& SpecHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdatePendingDevice");

	Params::AValCharacter_UpdatePendingDevice_Params Parms{};

	Parms.SpecHandle = SpecHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateMeshVisibility
// (Native, Protected, BlueprintCallable)
// Parameters:

void AValCharacter::UpdateMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateMeshVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateInteractions
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValCharacter::UpdateInteractions()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateInteractions");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateGunMICs
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValAbilityAudioVisual*      AV                                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateGunMICs(class UValAbilityAudioVisual* AV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateGunMICs");

	Params::AValCharacter_UpdateGunMICs_Params Parms{};

	Parms.AV = AV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateGunMaterialAmmoWithAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateGunMaterialAmmoWithAmount(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateGunMaterialAmmoWithAmount");

	Params::AValCharacter_UpdateGunMaterialAmmoWithAmount_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateGunMaterialAmmo
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValAmmoData        AmmoData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AValCharacter::UpdateGunMaterialAmmo(struct Valhalla_ValAmmoData& AmmoData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateGunMaterialAmmo");

	Params::AValCharacter_UpdateGunMaterialAmmo_Params Parms{};

	Parms.AmmoData = AmmoData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateFullyAimed
// (Final, Native, Public)
// Parameters:
// bool                               FullyAimed                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateFullyAimed(bool FullyAimed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateFullyAimed");

	Params::AValCharacter_UpdateFullyAimed_Params Parms{};

	Parms.FullyAimed = FullyAimed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateEnergy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              DeltaEnergy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateEnergy(float DeltaEnergy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateEnergy");

	Params::AValCharacter_UpdateEnergy_Params Parms{};

	Parms.DeltaEnergy = DeltaEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateDevice3PAudioVisual
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::UpdateDevice3PAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateDevice3PAudioVisual");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateDevice1PAudioVisual
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::UpdateDevice1PAudioVisual()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateDevice1PAudioVisual");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateCustomViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Rotator         DeltaRotation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AValCharacter::UpdateCustomViewRotation(const struct CoreUObject_Rotator& DeltaRotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateCustomViewRotation");

	Params::AValCharacter_UpdateCustomViewRotation_Params Parms{};

	Parms.DeltaRotation = DeltaRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateCachedAmmoDataForSlot
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateCachedAmmoDataForSlot(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateCachedAmmoDataForSlot");

	Params::AValCharacter_UpdateCachedAmmoDataForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateBotMesh
// (Final, Native, Public, HasDefaults)
// Parameters:
// class USkeletalMesh*               NewMesh                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UValAnimInstance>NewABP                                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          MeshScale                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateBotMesh(class USkeletalMesh* NewMesh, TSubclassOf<class UValAnimInstance> NewABP, const struct CoreUObject_Vector& MeshScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateBotMesh");

	Params::AValCharacter_UpdateBotMesh_Params Parms{};

	Parms.NewMesh = NewMesh;
	Parms.NewABP = NewABP;
	Parms.MeshScale = MeshScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UpdateBlockAlpha
// (Final, Native, Public)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UpdateBlockAlpha(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UpdateBlockAlpha");

	Params::AValCharacter_UpdateBlockAlpha_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Update3PMeshIn1P
// (Native, Protected, BlueprintCallable)
// Parameters:

void AValCharacter::Update3PMeshIn1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Update3PMeshIn1P");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UnregisterOverlayMat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          OverrideMat                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UnregisterOverlayMat(class UMaterialInterface* OverrideMat, enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UnregisterOverlayMat");

	Params::AValCharacter_UnregisterOverlayMat_Params Parms{};

	Parms.OverrideMat = OverrideMat;
	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.UnequipSlot
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bChangeLoadout                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::UnequipSlot(struct GameplayTags_GameplayTag& Slot, bool bChangeLoadout)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "UnequipSlot");

	Params::AValCharacter_UnequipSlot_Params Parms{};

	Parms.Slot = Slot;
	Parms.bChangeLoadout = bChangeLoadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TryToPingWithType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EValPingType            TryPingType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::TryToPingWithType(enum class EValPingType TryPingType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryToPingWithType");

	Params::AValCharacter_TryToPingWithType_Params Parms{};

	Parms.TryPingType = TryPingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TryToPing
// (Final, Native, Protected)
// Parameters:

void AValCharacter::TryToPing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryToPing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TryPickUpNextPendingPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::TryPickUpNextPendingPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryPickUpNextPendingPickup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TryGrabPhysicsObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      GrabObject                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::TryGrabPhysicsObject(class AActor* GrabObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryGrabPhysicsObject");

	Params::AValCharacter_TryGrabPhysicsObject_Params Parms{};

	Parms.GrabObject = GrabObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.TryCancelingAbilityByEquipSlotsTag
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    TagToCancel                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::TryCancelingAbilityByEquipSlotsTag(const struct GameplayTags_GameplayTag& TagToCancel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryCancelingAbilityByEquipSlotsTag");

	Params::AValCharacter_TryCancelingAbilityByEquipSlotsTag_Params Parms{};

	Parms.TagToCancel = TagToCancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TryActivateAbilityByEquipSlotsTag
// (Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    TagToActivate                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::TryActivateAbilityByEquipSlotsTag(const struct GameplayTags_GameplayTag& TagToActivate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TryActivateAbilityByEquipSlotsTag");

	Params::AValCharacter_TryActivateAbilityByEquipSlotsTag_Params Parms{};

	Parms.TagToActivate = TagToActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.TriggerShieldBreak
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::TriggerShieldBreak()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TriggerShieldBreak");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TriggerAbilitySystemInputReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EValAbilityInputID      AbilityInput                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::TriggerAbilitySystemInputReleased(enum class EValAbilityInputID AbilityInput)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TriggerAbilitySystemInputReleased");

	Params::AValCharacter_TriggerAbilitySystemInputReleased_Params Parms{};

	Parms.AbilityInput = AbilityInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TriggerAbilitySystemInputPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EValAbilityInputID      AbilityInput                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::TriggerAbilitySystemInputPressed(enum class EValAbilityInputID AbilityInput)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TriggerAbilitySystemInputPressed");

	Params::AValCharacter_TriggerAbilitySystemInputPressed_Params Parms{};

	Parms.AbilityInput = AbilityInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ToggleDebugBotPerception
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               bOn                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ToggleDebugBotPerception(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ToggleDebugBotPerception");

	Params::AValCharacter_ToggleDebugBotPerception_Params Parms{};

	Parms.bOn = bOn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.ToggleBlockingCollider
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bWantToBlock                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ToggleBlockingCollider(bool bWantToBlock)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ToggleBlockingCollider");

	Params::AValCharacter_ToggleBlockingCollider_Params Parms{};

	Parms.bWantToBlock = bWantToBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ToggleAllowShowVFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ShouldAllow                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ToggleAllowShowVFX(bool ShouldAllow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ToggleAllowShowVFX");

	Params::AValCharacter_ToggleAllowShowVFX_Params Parms{};

	Parms.ShouldAllow = ShouldAllow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ToggleAimingFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::ToggleAimingFOV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ToggleAimingFOV");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ThrowHeldItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::ThrowHeldItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ThrowHeldItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.TakeInteractableInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::TakeInteractableInventory(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "TakeInteractableInventory");

	Params::AValCharacter_TakeInteractableInventory_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SwapToEquipSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SwapToEquipSlot(const struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SwapToEquipSlot");

	Params::AValCharacter_SwapToEquipSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SwapToDevice
// (Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWarnOnInvalidSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bUpdateEffects                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bForceImmedateEquip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SwapToDevice(struct GameplayTags_GameplayTag& SlotTag, bool bWarnOnInvalidSlot, bool bUpdateEffects, bool bForceImmedateEquip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SwapToDevice");

	Params::AValCharacter_SwapToDevice_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.bWarnOnInvalidSlot = bWarnOnInvalidSlot;
	Parms.bUpdateEffects = bUpdateEffects;
	Parms.bForceImmedateEquip = bForceImmedateEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SwapDevice
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::SwapDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SwapDevice");

	Params::AValCharacter_SwapDevice_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.Suicide
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::Suicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Suicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StopMonkey
// (Final, Native, Public)
// Parameters:

void AValCharacter::StopMonkey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StopMonkey");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StopMeleeSwing
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::StopMeleeSwing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StopMeleeSwing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StartOutlineHitPulse
// (Native, Public, BlueprintCallable)
// Parameters:
// float                              TotalTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Intensity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::StartOutlineHitPulse(float TotalTime, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StartOutlineHitPulse");

	Params::AValCharacter_StartOutlineHitPulse_Params Parms{};

	Parms.TotalTime = TotalTime;
	Parms.Intensity = Intensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StartMonkey
// (Final, Native, Public)
// Parameters:

void AValCharacter::StartMonkey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StartMonkey");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StartMeleeSwing
// (Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_ValMeleeSwing      NewMeleeSwing                                                    (Parm, NativeAccessSpecifierPublic)

void AValCharacter::StartMeleeSwing(const struct Valhalla_ValMeleeSwing& NewMeleeSwing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StartMeleeSwing");

	Params::AValCharacter_StartMeleeSwing_Params Parms{};

	Parms.NewMeleeSwing = NewMeleeSwing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.StartCharmCybrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               PCharmSource                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::StartCharmCybrid(class AValCharacter* PCharmSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "StartCharmCybrid");

	Params::AValCharacter_StartCharmCybrid_Params Parms{};

	Parms.PCharmSource = PCharmSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SpawnRemainingAmmoVFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDeviceAudioVisual*       DeviceAV                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SpawnRemainingAmmoVFX(class UValDeviceAudioVisual* DeviceAV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnRemainingAmmoVFX");

	Params::AValCharacter_SpawnRemainingAmmoVFX_Params Parms{};

	Parms.DeviceAV = DeviceAV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SpawnPickupItem
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AValPickup_Item> PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_PendingItem        ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                      ReplacedActor                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Offset                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TrySpawnOnGround                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValPickup_Item*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPickup_Item* AValCharacter::SpawnPickupItem(TSubclassOf<class AValPickup_Item> PickupClass, struct Valhalla_PendingItem& ItemData, class AActor* ReplacedActor, const struct CoreUObject_Vector& Offset, bool TrySpawnOnGround)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnPickupItem");

	Params::AValCharacter_SpawnPickupItem_Params Parms{};

	Parms.PickupClass = PickupClass;
	Parms.ItemData = ItemData;
	Parms.ReplacedActor = ReplacedActor;
	Parms.Offset = Offset;
	Parms.TrySpawnOnGround = TrySpawnOnGround;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.SpawnPickupAbility
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AValAbilityPickup>PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bRandomAbility                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReplacedActor                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Offset                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TrySpawnOnGround                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValAbilityPickup*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValAbilityPickup* AValCharacter::SpawnPickupAbility(TSubclassOf<class AValAbilityPickup> PickupClass, bool bRandomAbility, class AActor* ReplacedActor, const struct CoreUObject_Vector& Offset, bool TrySpawnOnGround)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnPickupAbility");

	Params::AValCharacter_SpawnPickupAbility_Params Parms{};

	Parms.PickupClass = PickupClass;
	Parms.bRandomAbility = bRandomAbility;
	Parms.ReplacedActor = ReplacedActor;
	Parms.Offset = Offset;
	Parms.TrySpawnOnGround = TrySpawnOnGround;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.SpawnPickup
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReplacedActor                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Offset                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TrySpawnOnGround                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValCharacter::SpawnPickup(TSubclassOf<class AActor> PickupClass, class AActor* ReplacedActor, const struct CoreUObject_Vector& Offset, bool TrySpawnOnGround)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnPickup");

	Params::AValCharacter_SpawnPickup_Params Parms{};

	Parms.PickupClass = PickupClass;
	Parms.ReplacedActor = ReplacedActor;
	Parms.Offset = Offset;
	Parms.TrySpawnOnGround = TrySpawnOnGround;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.SpawnBotWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TriggerActor                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SpawnBotWave(class AActor* TriggerActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnBotWave");

	Params::AValCharacter_SpawnBotWave_Params Parms{};

	Parms.TriggerActor = TriggerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SpawnAlwaysOnVFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValDeviceAudioVisual*       DeviceAV                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SpawnAlwaysOnVFX(class UValDeviceAudioVisual* DeviceAV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SpawnAlwaysOnVFX");

	Params::AValCharacter_SpawnAlwaysOnVFX_Params Parms{};

	Parms.DeviceAV = DeviceAV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ShowDeviceAudioVisual
// (Native, Public, BlueprintCallable)
// Parameters:
// class UValDeviceAudioVisual*       DeviceAV                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::ShowDeviceAudioVisual(class UValDeviceAudioVisual* DeviceAV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ShowDeviceAudioVisual");

	Params::AValCharacter_ShowDeviceAudioVisual_Params Parms{};

	Parms.DeviceAV = DeviceAV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.ShouldUsePredictiveAimingForActiveAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::ShouldUsePredictiveAimingForActiveAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ShouldUsePredictiveAimingForActiveAbility");

	Params::AValCharacter_ShouldUsePredictiveAimingForActiveAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.ShouldFireSimultaneously
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::ShouldFireSimultaneously()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ShouldFireSimultaneously");

	Params::AValCharacter_ShouldFireSimultaneously_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.ShouldFireFromMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::ShouldFireFromMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ShouldFireFromMesh");

	Params::AValCharacter_ShouldFireFromMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.SetWallRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Rotator         Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AValCharacter::SetWallRotation(const struct CoreUObject_Rotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetWallRotation");

	Params::AValCharacter_SetWallRotation_Params Parms{};

	Parms.Rotation = Rotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetUseControllerRotationYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetUseControllerRotationYaw(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetUseControllerRotationYaw");

	Params::AValCharacter_SetUseControllerRotationYaw_Params Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetUseAutoPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetUseAutoPickup(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetUseAutoPickup");

	Params::AValCharacter_SetUseAutoPickup_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetTrackedTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               NewTarget                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetTrackedTarget(class AValCharacter* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetTrackedTarget");

	Params::AValCharacter_SetTrackedTarget_Params Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetThreatComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValThreatComponent*         NewThreatComponent                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetThreatComponent(class UValThreatComponent* NewThreatComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetThreatComponent");

	Params::AValCharacter_SetThreatComponent_Params Parms{};

	Parms.NewThreatComponent = NewThreatComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetSpawnedActorLimit
// (Native, Public, BlueprintCallable)
// Parameters:
// enum class EValOwnedSpawnType      ActorType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewLimit                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetSpawnedActorLimit(enum class EValOwnedSpawnType ActorType, int32 NewLimit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetSpawnedActorLimit");

	Params::AValCharacter_SetSpawnedActorLimit_Params Parms{};

	Parms.ActorType = ActorType;
	Parms.NewLimit = NewLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetSlotAmmoRarity
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 Rarity                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetSlotAmmoRarity(struct GameplayTags_GameplayTag& Slot, enum class ERarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetSlotAmmoRarity");

	Params::AValCharacter_SetSlotAmmoRarity_Params Parms{};

	Parms.Slot = Slot;
	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetShowNamedAreaBotTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bShow                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetShowNamedAreaBotTimer(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetShowNamedAreaBotTimer");

	Params::AValCharacter_SetShowNamedAreaBotTimer_Params Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetShowEnemyHealthBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               NewBool                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetShowEnemyHealthBar(bool NewBool)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetShowEnemyHealthBar");

	Params::AValCharacter_SetShowEnemyHealthBar_Params Parms{};

	Parms.NewBool = NewBool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetShields
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetShields(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetShields");

	Params::AValCharacter_SetShields_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetPendingDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bClearDeviceTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWasAbilityCancelled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetPendingDevice(bool bClearDeviceTag, bool bWasAbilityCancelled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetPendingDevice");

	Params::AValCharacter_SetPendingDevice_Params Parms{};

	Parms.bClearDeviceTag = bClearDeviceTag;
	Parms.bWasAbilityCancelled = bWasAbilityCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetOxygen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetOxygen(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetOxygen");

	Params::AValCharacter_SetOxygen_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetOverrideMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*               New1PMesh                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*               New3PMesh                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetOverrideMesh(class USkeletalMesh* New1PMesh, class USkeletalMesh* New3PMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetOverrideMesh");

	Params::AValCharacter_SetOverrideMesh_Params Parms{};

	Parms.New1PMesh = New1PMesh;
	Parms.New3PMesh = New3PMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetMovingSpreadMultiplier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetMovingSpreadMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetMovingSpreadMultiplier");

	Params::AValCharacter_SetMovingSpreadMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetIsMounted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetIsMounted(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetIsMounted");

	Params::AValCharacter_SetIsMounted_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetIsFlashlighted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Flashlighter                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsFlashlighted                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetIsFlashlighted(class AActor* Flashlighter, bool bIsFlashlighted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetIsFlashlighted");

	Params::AValCharacter_SetIsFlashlighted_Params Parms{};

	Parms.Flashlighter = Flashlighter;
	Parms.bIsFlashlighted = bIsFlashlighted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetInteractChannelingPercent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetInteractChannelingPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetInteractChannelingPercent");

	Params::AValCharacter_SetInteractChannelingPercent_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetInteractChannelingActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetInteractChannelingActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetInteractChannelingActive");

	Params::AValCharacter_SetInteractChannelingActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetHealth");

	Params::AValCharacter_SetHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetHealingPercent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetHealingPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetHealingPercent");

	Params::AValCharacter_SetHealingPercent_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetHealingActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Shields                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetHealingActive(bool Value, bool Shields)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetHealingActive");

	Params::AValCharacter_SetHealingActive_Params Parms{};

	Parms.Value = Value;
	Parms.Shields = Shields;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetFlashlightLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Level                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetFlashlightLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetFlashlightLevel");

	Params::AValCharacter_SetFlashlightLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetFallingSpreadMultiplier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetFallingSpreadMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetFallingSpreadMultiplier");

	Params::AValCharacter_SetFallingSpreadMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetEnergyRegenDisabled
// (Final, Native, Public)
// Parameters:
// bool                               bDisable                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetEnergyRegenDisabled(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetEnergyRegenDisabled");

	Params::AValCharacter_SetEnergyRegenDisabled_Params Parms{};

	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetEnergy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewEnergy                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetEnergy(float NewEnergy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetEnergy");

	Params::AValCharacter_SetEnergy_Params Parms{};

	Parms.NewEnergy = NewEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetCurrentZeroGArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ZeroGArea                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetCurrentZeroGArea(class AActor* ZeroGArea)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetCurrentZeroGArea");

	Params::AValCharacter_SetCurrentZeroGArea_Params Parms{};

	Parms.ZeroGArea = ZeroGArea;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetCurrentNamedArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        NewAreaName                                                      (Parm, NativeAccessSpecifierPublic)
// enum class ESecurityLevel          NewSecurityLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetCurrentNamedArea(class FText NewAreaName, enum class ESecurityLevel NewSecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetCurrentNamedArea");

	Params::AValCharacter_SetCurrentNamedArea_Params Parms{};

	Parms.NewAreaName = NewAreaName;
	Parms.NewSecurityLevel = NewSecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetCrouchingSpreadMultiplier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetCrouchingSpreadMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetCrouchingSpreadMultiplier");

	Params::AValCharacter_SetCrouchingSpreadMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetConsumableActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bActive                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ConsumeableText                                                  (Parm, NativeAccessSpecifierPublic)

void AValCharacter::SetConsumableActive(bool bActive, class FText ConsumeableText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetConsumableActive");

	Params::AValCharacter_SetConsumableActive_Params Parms{};

	Parms.bActive = bActive;
	Parms.ConsumeableText = ConsumeableText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetBotStartingPatrolIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              StartingPatrolIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetBotStartingPatrolIndex(int32 StartingPatrolIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetBotStartingPatrolIndex");

	Params::AValCharacter_SetBotStartingPatrolIndex_Params Parms{};

	Parms.StartingPatrolIndex = StartingPatrolIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetBotSpawnVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValBotSpawnVolume*          SpawnVolume                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetBotSpawnVolume(class AValBotSpawnVolume* SpawnVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetBotSpawnVolume");

	Params::AValCharacter_SetBotSpawnVolume_Params Parms{};

	Parms.SpawnVolume = SpawnVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetBotResetTimerStart
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct Valhalla_BotResetTimerData  Timer                                                            (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AValCharacter::SetBotResetTimerStart(struct Valhalla_BotResetTimerData& Timer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetBotResetTimerStart");

	Params::AValCharacter_SetBotResetTimerStart_Params Parms{};

	Parms.Timer = Timer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetBotPatrolRoute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct CoreUObject_Vector>  Points                                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::SetBotPatrolRoute(TArray<struct CoreUObject_Vector>& Points)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetBotPatrolRoute");

	Params::AValCharacter_SetBotPatrolRoute_Params Parms{};

	Parms.Points = Points;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetBotPatrolBackward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bBackward                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetBotPatrolBackward(bool bBackward)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetBotPatrolBackward");

	Params::AValCharacter_SetBotPatrolBackward_Params Parms{};

	Parms.bBackward = bBackward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetAITargetedActor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      NewTargetActor                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetAITargetedActor(class AActor* NewTargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetAITargetedActor");

	Params::AValCharacter_SetAITargetedActor_Params Parms{};

	Parms.NewTargetActor = NewTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetAimingSpreadMultiplier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetAimingSpreadMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetAimingSpreadMultiplier");

	Params::AValCharacter_SetAimingSpreadMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetActiveSwappedAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetActiveSwappedAbility(struct GameplayAbilities_GameplayAbilitySpecHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetActiveSwappedAbility");

	Params::AValCharacter_SetActiveSwappedAbility_Params Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetAbilityProgressPercent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetAbilityProgressPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetAbilityProgressPercent");

	Params::AValCharacter_SetAbilityProgressPercent_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.SetAbilityProgressActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               Active                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::SetAbilityProgressActive(bool Active, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "SetAbilityProgressActive");

	Params::AValCharacter_SetAbilityProgressActive_Params Parms{};

	Parms.Active = Active;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerUseConsumable
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerUseConsumable(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerUseConsumable");

	Params::AValCharacter_ServerUseConsumable_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerUnequipDevice
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bRevokeAbility                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWarnOnInvalidSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerUnequipDevice(struct GameplayTags_GameplayTag& SlotTag, bool bRevokeAbility, bool bWarnOnInvalidSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerUnequipDevice");

	Params::AValCharacter_ServerUnequipDevice_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.bRevokeAbility = bRevokeAbility;
	Parms.bWarnOnInvalidSlot = bWarnOnInvalidSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerToggleDowned
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                               bDowned                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerToggleDowned(bool bDowned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerToggleDowned");

	Params::AValCharacter_ServerToggleDowned_Params Parms{};

	Parms.bDowned = bDowned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerTakeInteractableInventory
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::ServerTakeInteractableInventory(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerTakeInteractableInventory");

	Params::AValCharacter_ServerTakeInteractableInventory_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerSwapDevice
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    RequestedEquipSlot                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerSwapDevice(const struct GameplayTags_GameplayTag& RequestedEquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerSwapDevice");

	Params::AValCharacter_ServerSwapDevice_Params Parms{};

	Parms.RequestedEquipSlot = RequestedEquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerSetSwappingInfo
// (Net, Native, Event, Protected, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    NewSlot                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HolsterTime                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DrawTime                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerSetSwappingInfo(struct GameplayTags_GameplayTag& NewSlot, float HolsterTime, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerSetSwappingInfo");

	Params::AValCharacter_ServerSetSwappingInfo_Params Parms{};

	Parms.NewSlot = NewSlot;
	Parms.HolsterTime = HolsterTime;
	Parms.DrawTime = DrawTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerSetPendingDevice
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    RequestedEquipSlot                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerSetPendingDevice(const struct GameplayTags_GameplayTag& RequestedEquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerSetPendingDevice");

	Params::AValCharacter_ServerSetPendingDevice_Params Parms{};

	Parms.RequestedEquipSlot = RequestedEquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerSetAlwaysSkiOnCrouch
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerSetAlwaysSkiOnCrouch(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerSetAlwaysSkiOnCrouch");

	Params::AValCharacter_ServerSetAlwaysSkiOnCrouch_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerRequestPurchaseFabricatorItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// enum class EFabricatorShopType     RequestedItem                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerRequestPurchaseFabricatorItem(enum class EFabricatorShopType RequestedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerRequestPurchaseFabricatorItem");

	Params::AValCharacter_ServerRequestPurchaseFabricatorItem_Params Parms{};

	Parms.RequestedItem = RequestedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerRemoveOnExtraction
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValCharacter::ServerRemoveOnExtraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerRemoveOnExtraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerRemoveCurrentArea
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    AreaTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerRemoveCurrentArea(const struct GameplayTags_GameplayTag& AreaTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerRemoveCurrentArea");

	Params::AValCharacter_ServerRemoveCurrentArea_Params Parms{};

	Parms.AreaTag = AreaTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerOnRemoveDirectFlashlightFromTargets
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TArray<class AActor*>              Targets                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::ServerOnRemoveDirectFlashlightFromTargets(TArray<class AActor*>& Targets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerOnRemoveDirectFlashlightFromTargets");

	Params::AValCharacter_ServerOnRemoveDirectFlashlightFromTargets_Params Parms{};

	Parms.Targets = Targets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerOnApplyDirectFlashlightToTargets
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TArray<class AActor*>              Targets                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::ServerOnApplyDirectFlashlightToTargets(TArray<class AActor*>& Targets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerOnApplyDirectFlashlightToTargets");

	Params::AValCharacter_ServerOnApplyDirectFlashlightToTargets_Params Parms{};

	Parms.Targets = Targets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerKillSpawn
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// enum class EValOwnedSpawnType      SpawnType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerKillSpawn(enum class EValOwnedSpawnType SpawnType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerKillSpawn");

	Params::AValCharacter_ServerKillSpawn_Params Parms{};

	Parms.SpawnType = SpawnType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerEquipDevice
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayAbility>Ability                                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bReplaceSlotIfNeeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSwapToAbility                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerEquipDevice(struct GameplayTags_GameplayTag& SlotTag, TSubclassOf<class UGameplayAbility> Ability, bool bReplaceSlotIfNeeded, bool bSwapToAbility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerEquipDevice");

	Params::AValCharacter_ServerEquipDevice_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.Ability = Ability;
	Parms.bReplaceSlotIfNeeded = bReplaceSlotIfNeeded;
	Parms.bSwapToAbility = bSwapToAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropScrap
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TSubclassOf<class AValPickup>      PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrencyToDrop                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropScrap(TSubclassOf<class AValPickup> PickupClass, int32 CurrencyToDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropScrap");

	Params::AValCharacter_ServerDropScrap_Params Parms{};

	Parms.PickupClass = PickupClass;
	Parms.CurrencyToDrop = CurrencyToDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropPendingItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct Valhalla_PendingItem        InventoryItem                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class AValPickup>      ItemToDrop                                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropPendingItem(struct Valhalla_PendingItem& InventoryItem, TSubclassOf<class AValPickup> ItemToDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropPendingItem");

	Params::AValCharacter_ServerDropPendingItem_Params Parms{};

	Parms.InventoryItem = InventoryItem;
	Parms.ItemToDrop = ItemToDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropPack
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                               bHealthPack                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AValPickup>      PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropPack(bool bHealthPack, TSubclassOf<class AValPickup> PickupClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropPack");

	Params::AValCharacter_ServerDropPack_Params Parms{};

	Parms.bHealthPack = bHealthPack;
	Parms.PickupClass = PickupClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropInventorySlot
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropInventorySlot(struct Valhalla_InventorySlot& RequestedSlot, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropInventorySlot");

	Params::AValCharacter_ServerDropInventorySlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropBoostItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class FName                        BoostItem                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AValPickup>      BoostToDrop                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropBoostItem(class FName BoostItem, TSubclassOf<class AValPickup> BoostToDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropBoostItem");

	Params::AValCharacter_ServerDropBoostItem_Params Parms{};

	Parms.BoostItem = BoostItem;
	Parms.BoostToDrop = BoostToDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerDropAmmoClip
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                               bPrimaryAmmo                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AValPickup>      PickupClass                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerDropAmmoClip(bool bPrimaryAmmo, TSubclassOf<class AValPickup> PickupClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerDropAmmoClip");

	Params::AValCharacter_ServerDropAmmoClip_Params Parms{};

	Parms.bPrimaryAmmo = bPrimaryAmmo;
	Parms.PickupClass = PickupClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerCloseInteractable
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AValCharacter::ServerCloseInteractable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerCloseInteractable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerCloseDropCrate
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValCharacter::ServerCloseDropCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerCloseDropCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerCloseDeathCrate
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValCharacter::ServerCloseDeathCrate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerCloseDeathCrate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerBoobyTrapLootCrate
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class AValLootCrate*               LootCrate                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerBoobyTrapLootCrate(class AValLootCrate* LootCrate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerBoobyTrapLootCrate");

	Params::AValCharacter_ServerBoobyTrapLootCrate_Params Parms{};

	Parms.LootCrate = LootCrate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ServerAddCurrentArea
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct GameplayTags_GameplayTag    AreaTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ServerAddCurrentArea(const struct GameplayTags_GameplayTag& AreaTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ServerAddCurrentArea");

	Params::AValCharacter_ServerAddCurrentArea_Params Parms{};

	Parms.AreaTag = AreaTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Server_RevealTeamDungeonPortal
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValCharacter::Server_RevealTeamDungeonPortal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Server_RevealTeamDungeonPortal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Server_RequestShieldRecharge
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                              ButtonIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::Server_RequestShieldRecharge(int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Server_RequestShieldRecharge");

	Params::AValCharacter_Server_RequestShieldRecharge_Params Parms{};

	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Server_RequestHideMapData
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                              ButtonIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::Server_RequestHideMapData(int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Server_RequestHideMapData");

	Params::AValCharacter_Server_RequestHideMapData_Params Parms{};

	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Server_RequestDownloadMapData
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                              ButtonIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::Server_RequestDownloadMapData(int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Server_RequestDownloadMapData");

	Params::AValCharacter_Server_RequestDownloadMapData_Params Parms{};

	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Server_RequestCloseHackablePanel
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void AValCharacter::Server_RequestCloseHackablePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Server_RequestCloseHackablePanel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Revive
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::Revive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Revive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RevealStatusChanged3P
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RevealStatusChanged3P(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RevealStatusChanged3P");

	Params::AValCharacter_RevealStatusChanged3P_Params Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.RevealStatusChanged1P
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               bValue                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RevealStatusChanged1P(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RevealStatusChanged1P");

	Params::AValCharacter_RevealStatusChanged1P_Params Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.ResetAllCooldowns
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::ResetAllCooldowns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ResetAllCooldowns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ResetAbilitiesForNewRound
// (Final, Native, Public)
// Parameters:

void AValCharacter::ResetAbilitiesForNewRound()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ResetAbilitiesForNewRound");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RequestSwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::RequestSwap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RequestSwap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RequestActivateEquipSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::RequestActivateEquipSlot(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RequestActivateEquipSlot");

	Params::AValCharacter_RequestActivateEquipSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.RequestActivateBeltItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              BeltIndex                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::RequestActivateBeltItem(int32& BeltIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RequestActivateBeltItem");

	Params::AValCharacter_RequestActivateBeltItem_Params Parms{};

	Parms.BeltIndex = BeltIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.RemoveSupportingBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Bot                                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RemoveSupportingBot(class AValCharacter* Bot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveSupportingBot");

	Params::AValCharacter_RemoveSupportingBot_Params Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RemoveSpawn
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      SpawnToRemove                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RemoveSpawn(class AActor* SpawnToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveSpawn");

	Params::AValCharacter_RemoveSpawn_Params Parms{};

	Parms.SpawnToRemove = SpawnToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RemoveItemUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostItem          ItemUpgrade                                                      (Parm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::RemoveItemUpgrade(const struct Valhalla_BoostItem& ItemUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveItemUpgrade");

	Params::AValCharacter_RemoveItemUpgrade_Params Parms{};

	Parms.ItemUpgrade = ItemUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.RemoveInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RemoveInteraction(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveInteraction");

	Params::AValCharacter_RemoveInteraction_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RemoveFocusedInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RemoveFocusedInteraction(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveFocusedInteraction");

	Params::AValCharacter_RemoveFocusedInteraction_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RemoveCurrentArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    AreaTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RemoveCurrentArea(const struct GameplayTags_GameplayTag& AreaTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RemoveCurrentArea");

	Params::AValCharacter_RemoveCurrentArea_Params Parms{};

	Parms.AreaTag = AreaTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RegisterOverlayMat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          OverrideMat                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RegisterOverlayMat(class UMaterialInterface* OverrideMat, enum class EOverlayMeshType OverlayMesh, int32 PriorityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RegisterOverlayMat");

	Params::AValCharacter_RegisterOverlayMat_Params Parms{};

	Parms.OverrideMat = OverrideMat;
	Parms.OverlayMesh = OverlayMesh;
	Parms.PriorityLevel = PriorityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RefreshFlashlight
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::RefreshFlashlight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RefreshFlashlight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RefillAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bUseStartingValues                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RefillAmmo(bool bUseStartingValues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RefillAmmo");

	Params::AValCharacter_RefillAmmo_Params Parms{};

	Parms.bUseStartingValues = bUseStartingValues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.RefillAbilityCharges
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::RefillAbilityCharges(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "RefillAbilityCharges");

	Params::AValCharacter_RefillAbilityCharges_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ProcessGunShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::ProcessGunShot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ProcessGunShot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PredictSwap
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::PredictSwap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PredictSwap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PredictEffectRemoval
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::PredictEffectRemoval()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PredictEffectRemoval");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PlayUIJiggle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUIJiggle*                   Jiggle                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::PlayUIJiggle(class UUIJiggle* Jiggle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PlayUIJiggle");

	Params::AValCharacter_PlayUIJiggle_Params Parms{};

	Parms.Jiggle = Jiggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PlayHolsterAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              AnimationTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::PlayHolsterAnimation(float AnimationTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PlayHolsterAnimation");

	Params::AValCharacter_PlayHolsterAnimation_Params Parms{};

	Parms.AnimationTime = AnimationTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PlayFootstepSound
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// enum class EPhysicalSurface        SurfaceType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::PlayFootstepSound(enum class EPhysicalSurface SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PlayFootstepSound");

	Params::AValCharacter_PlayFootstepSound_Params Parms{};

	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PlayDrawAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              AnimationTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::PlayDrawAnimation(float AnimationTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PlayDrawAnimation");

	Params::AValCharacter_PlayDrawAnimation_Params Parms{};

	Parms.AnimationTime = AnimationTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.PhaseShiftStateChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsActive                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::PhaseShiftStateChanged(bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "PhaseShiftStateChanged");

	Params::AValCharacter_PhaseShiftStateChanged_Params Parms{};

	Parms.bIsActive = bIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OverrideSpecificOverlayMats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          OverrideMat                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      ElementIndices                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OverrideSpecificOverlayMats(class UMaterialInterface* OverrideMat, const TArray<int32>& ElementIndices, enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OverrideSpecificOverlayMats");

	Params::AValCharacter_OverrideSpecificOverlayMats_Params Parms{};

	Parms.OverrideMat = OverrideMat;
	Parms.ElementIndices = ElementIndices;
	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OverrideAllOverlayMats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          OverrideMat                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OverrideAllOverlayMats(class UMaterialInterface* OverrideMat, enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OverrideAllOverlayMats");

	Params::AValCharacter_OverrideAllOverlayMats_Params Parms{};

	Parms.OverrideMat = OverrideMat;
	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OpenHackablePanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValHackablePanel*           PanelToView                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OpenHackablePanel(class AValHackablePanel* PanelToView)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OpenHackablePanel");

	Params::AValCharacter_OpenHackablePanel_Params Parms{};

	Parms.PanelToView = PanelToView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnWeaponMICAmmoLock
// (Final, Native, Public)
// Parameters:
// bool                               bUnlockWeaponMICAmmo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnWeaponMICAmmoLock(bool bUnlockWeaponMICAmmo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnWeaponMICAmmoLock");

	Params::AValCharacter_OnWeaponMICAmmoLock_Params Parms{};

	Parms.bUnlockWeaponMICAmmo = bUnlockWeaponMICAmmo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnVaulted
// (Native, Public)
// Parameters:

void AValCharacter::OnVaulted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnVaulted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnTeamRegistered
// (Final, Native, Protected)
// Parameters:
// int32                              TeamId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATeamState*                  TeamState                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnTeamRegistered(int32 TeamId, class ATeamState* TeamState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnTeamRegistered");

	Params::AValCharacter_OnTeamRegistered_Params Parms{};

	Parms.TeamId = TeamId;
	Parms.TeamState = TeamState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSupportingBotDied
// (Final, Native, Public)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnSupportingBotDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSupportingBotDied");

	Params::AValCharacter_OnSupportingBotDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSprintStopped_BP
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnSprintStopped_BP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSprintStopped_BP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnSprintStopped
// (Native, Public)
// Parameters:

void AValCharacter::OnSprintStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSprintStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSprintStarted_BP
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnSprintStarted_BP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSprintStarted_BP");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnSprintStarted
// (Native, Public)
// Parameters:

void AValCharacter::OnSprintStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSprintStarted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSkiStoppedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::OnSkiStoppedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSkiStoppedEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnSkiStopped
// (Native, Public)
// Parameters:

void AValCharacter::OnSkiStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSkiStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSkiStartedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::OnSkiStartedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSkiStartedEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnSkiStarted
// (Native, Public)
// Parameters:

void AValCharacter::OnSkiStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSkiStarted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSecondaryFireReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnSecondaryFireReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSecondaryFireReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnSecondaryFirePressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnSecondaryFirePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnSecondaryFirePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRoundStateChanged
// (Final, Native, Public)
// Parameters:
// enum class ERoundState             RoundState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnRoundStateChanged(enum class ERoundState RoundState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRoundStateChanged");

	Params::AValCharacter_OnRoundStateChanged_Params Parms{};

	Parms.RoundState = RoundState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_WallRotation
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_WallRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_WallRotation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_ViewedHackablePanel
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_ViewedHackablePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_ViewedHackablePanel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_TrackedTarget
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_TrackedTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_TrackedTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_TargetedActor
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_TargetedActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_TargetedActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_SwappedAbility
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_SwappedAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_SwappedAbility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_SwapInfo
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_SwapInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_SwapInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_Swap
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_Swap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_Swap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_ShieldPackCount
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                              OldShieldPackCount                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnRep_ShieldPackCount(int32& OldShieldPackCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_ShieldPackCount");

	Params::AValCharacter_OnRep_ShieldPackCount_Params Parms{};

	Parms.OldShieldPackCount = OldShieldPackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_OwnedSpawnedActors
// (Native, Public)
// Parameters:

void AValCharacter::OnRep_OwnedSpawnedActors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_OwnedSpawnedActors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_IsExtracted
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_IsExtracted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_IsExtracted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_IsChanneling
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_IsChanneling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_IsChanneling");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_HeldActor
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_HeldActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_HeldActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_HealthPackCount
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                              OldHealthPackCount                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnRep_HealthPackCount(int32& OldHealthPackCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_HealthPackCount");

	Params::AValCharacter_OnRep_HealthPackCount_Params Parms{};

	Parms.OldHealthPackCount = OldHealthPackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_EquipSlotArray
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_EquipSlotArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_EquipSlotArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_EquipmentEffects
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_EquipmentEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_EquipmentEffects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_DeviceUpgradeEffectsArray
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_DeviceUpgradeEffectsArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_DeviceUpgradeEffectsArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_CustomViewRotation
// (Native, Public)
// Parameters:

void AValCharacter::OnRep_CustomViewRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_CustomViewRotation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_CurrentAreas
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_CurrentAreas()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_CurrentAreas");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_CosmeticSlots
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_CosmeticSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_CosmeticSlots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_BotMeshScale
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_BotMeshScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_BotMeshScale");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_BotMesh
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_BotMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_BotMesh");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_BotData
// (Native, Public)
// Parameters:

void AValCharacter::OnRep_BotData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_BotData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_BotABP
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_BotABP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_BotABP");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_AmmoSlotRarity
// (Final, Native, Public)
// Parameters:

void AValCharacter::OnRep_AmmoSlotRarity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_AmmoSlotRarity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_AmmoData
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct Valhalla_ValAmmoData>OldAmmoData                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::OnRep_AmmoData(TArray<struct Valhalla_ValAmmoData>& OldAmmoData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_AmmoData");

	Params::AValCharacter_OnRep_AmmoData_Params Parms{};

	Parms.OldAmmoData = OldAmmoData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_ActivatableHandles
// (Native, Protected)
// Parameters:

void AValCharacter::OnRep_ActivatableHandles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_ActivatableHandles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRep_AbilityAVs
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRep_AbilityAVs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRep_AbilityAVs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnReloadPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnReloadPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnReloadPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnReload
// (Native, Protected)
// Parameters:
// struct GameplayTags_GameplayTag    InTag                                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnReload(const struct GameplayTags_GameplayTag& InTag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnReload");

	Params::AValCharacter_OnReload_Params Parms{};

	Parms.InTag = InTag;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnRecallPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnRecallPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnRecallPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPrimaryFireReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPrimaryFireReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPrimaryFireReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPrimaryFirePressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPrimaryFirePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPrimaryFirePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPlayerStateUpdatedEvent
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnPlayerStateUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPlayerStateUpdatedEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnPlayerLoadoutIdUpdated
// (Native, Protected)
// Parameters:
// class FString                      LoadoutId                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnPlayerLoadoutIdUpdated(const class FString& LoadoutId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPlayerLoadoutIdUpdated");

	Params::AValCharacter_OnPlayerLoadoutIdUpdated_Params Parms{};

	Parms.LoadoutId = LoadoutId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingWatch
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingWatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingWatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingMoving
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingMoving()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingMoving");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingLoot
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingLoot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingHeld
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingHeld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingHeld");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingEnemyNear
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingEnemyNear()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingEnemyNear");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingEnemy
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingEnemy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPingDefend
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnPingDefend()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPingDefend");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnPickup
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValPickup*                  Pickup                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnPickup(class AValPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnPickup");

	Params::AValCharacter_OnPickup_Params Parms{};

	Parms.Pickup = Pickup;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.OnMeshVisibilityUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnMeshVisibilityUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnMeshVisibilityUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnMatchStateChanged
// (Final, Native, Public)
// Parameters:

void AValCharacter::OnMatchStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnMatchStateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnLocalPCUpdatedViewTarget
// (Native, Protected)
// Parameters:
// class AActor*                      NewViewTarget                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnLocalPCUpdatedViewTarget(class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnLocalPCUpdatedViewTarget");

	Params::AValCharacter_OnLocalPCUpdatedViewTarget_Params Parms{};

	Parms.NewViewTarget = NewViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnLivesRemaining
// (Final, Native, Public)
// Parameters:
// int32                              LivesRemaining                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnLivesRemaining(int32 LivesRemaining)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnLivesRemaining");

	Params::AValCharacter_OnLivesRemaining_Params Parms{};

	Parms.LivesRemaining = LivesRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnJetpackStoppedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::OnJetpackStoppedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnJetpackStoppedEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnJetpackStopped
// (Native, Protected)
// Parameters:

void AValCharacter::OnJetpackStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnJetpackStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnJetpackStartedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               bStartedFromMidAir                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnJetpackStartedEvent(bool bStartedFromMidAir)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnJetpackStartedEvent");

	Params::AValCharacter_OnJetpackStartedEvent_Params Parms{};

	Parms.bStartedFromMidAir = bStartedFromMidAir;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.OnJetpackStarted
// (Native, Protected)
// Parameters:
// bool                               bStartedFromMidAir                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnJetpackStarted(bool bStartedFromMidAir)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnJetpackStarted");

	Params::AValCharacter_OnJetpackStarted_Params Parms{};

	Parms.bStartedFromMidAir = bStartedFromMidAir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnInventoryStationCooldown
// (Final, Native, Public)
// Parameters:

void AValCharacter::OnInventoryStationCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnInventoryStationCooldown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnInventoryManagerReady
// (Native, Protected)
// Parameters:
// class AValInventoryManager*        InventoryManager                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnInventoryManagerReady(class AValInventoryManager* InventoryManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnInventoryManagerReady");

	Params::AValCharacter_OnInventoryManagerReady_Params Parms{};

	Parms.InventoryManager = InventoryManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnHit
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct CoreUObject_Vector          HitDirection                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnHit(const struct CoreUObject_Vector& HitDirection, float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnHit");

	Params::AValCharacter_OnHit_Params Parms{};

	Parms.HitDirection = HitDirection;
	Parms.Magnitude = Magnitude;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValCharacter.OnHardLand
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AValCharacter::OnHardLand()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnHardLand");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnGrenadeRadialReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnGrenadeRadialReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnGrenadeRadialReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnGrenadeRadialPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnGrenadeRadialPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnGrenadeRadialPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnGrenadeRadialHeld
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnGrenadeRadialHeld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnGrenadeRadialHeld");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnGameUserSettingsSaved
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnGameUserSettingsSaved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnGameUserSettingsSaved");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnGameplayCueAimingStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnGameplayCueAimingStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnGameplayCueAimingStateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnFOVUpdated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewFOV                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnFOVUpdated(float NewFOV)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnFOVUpdated");

	Params::AValCharacter_OnFOVUpdated_Params Parms{};

	Parms.NewFOV = NewFOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnFlashlightPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnFlashlightPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnFlashlightPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnFalling
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bIsFalling                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnFalling(bool bIsFalling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnFalling");

	Params::AValCharacter_OnFalling_Params Parms{};

	Parms.bIsFalling = bIsFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnEquippedSlotsUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<struct Valhalla_InventorySlot>UpdatedSlots                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::OnEquippedSlotsUpdated(TArray<struct Valhalla_InventorySlot>& UpdatedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnEquippedSlotsUpdated");

	Params::AValCharacter_OnEquippedSlotsUpdated_Params Parms{};

	Parms.UpdatedSlots = UpdatedSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnDamaged
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable, NetValidate)
// Parameters:
// struct Valhalla_DamageData         DamageData                                                       (Parm, NativeAccessSpecifierPublic)

void AValCharacter::OnDamaged(const struct Valhalla_DamageData& DamageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnDamaged");

	Params::AValCharacter_OnDamaged_Params Parms{};

	Parms.DamageData = DamageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCrouchTogglePressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnCrouchTogglePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCrouchTogglePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCrouchReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnCrouchReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCrouchReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCrouchPressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnCrouchPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCrouchPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCosmeticSlotsUpdated
// (Native, Protected, HasOutParams)
// Parameters:
// TArray<struct Valhalla_InventorySlot>UpdatedSlots                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::OnCosmeticSlotsUpdated(TArray<struct Valhalla_InventorySlot>& UpdatedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCosmeticSlotsUpdated");

	Params::AValCharacter_OnCosmeticSlotsUpdated_Params Parms{};

	Parms.UpdatedSlots = UpdatedSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCosmeticAssetsLoaded
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnCosmeticAssetsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCosmeticAssetsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCorpseDestroyDelayEnd
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnCorpseDestroyDelayEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCorpseDestroyDelayEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnConsumableReleased
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnConsumableReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnConsumableReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnConsumablePressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnConsumablePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnConsumablePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnConsumableHeld
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnConsumableHeld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnConsumableHeld");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnCheckTeammateDied
// (Native, Protected)
// Parameters:

void AValCharacter::OnCheckTeammateDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnCheckTeammateDied");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnChannelingStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::OnChannelingStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnChannelingStateChanged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnBotConfigDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::OnBotConfigDataSet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnBotConfigDataSet");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.OnAmmoPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              StackSize                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ItemType                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 AmmoRarity                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnAmmoPickup(int32 StackSize, const struct GameplayTags_GameplayTag& ItemType, enum class ERarity AmmoRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnAmmoPickup");

	Params::AValCharacter_OnAmmoPickup_Params Parms{};

	Parms.StackSize = StackSize;
	Parms.ItemType = ItemType;
	Parms.AmmoRarity = AmmoRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnAlarmBotSpawned
// (Final, Native, Public)
// Parameters:
// class UBotInitData*                Data                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::OnAlarmBotSpawned(class UBotInitData* Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnAlarmBotSpawned");

	Params::AValCharacter_OnAlarmBotSpawned_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnAimingStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::OnAimingStateChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnAimingStateChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnAbilitySlot2Pressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnAbilitySlot2Pressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnAbilitySlot2Pressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.OnAbilitySlot1Pressed
// (Final, Native, Protected)
// Parameters:

void AValCharacter::OnAbilitySlot1Pressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "OnAbilitySlot1Pressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.NotifyFinishRespawned
// (Native, Public)
// Parameters:

void AValCharacter::NotifyFinishRespawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "NotifyFinishRespawned");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastSkiStopped
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AValCharacter::MulticastSkiStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastSkiStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastSkiStarted
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AValCharacter::MulticastSkiStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastSkiStarted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastRPCUpdateDownedState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               bDowned                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::MulticastRPCUpdateDownedState(bool bDowned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastRPCUpdateDownedState");

	Params::AValCharacter_MulticastRPCUpdateDownedState_Params Parms{};

	Parms.bDowned = bDowned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastOnJumped
// (Net, Native, Event, NetMulticast, Public)
// Parameters:

void AValCharacter::MulticastOnJumped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastOnJumped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastLanded
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct Engine_HitResult            Hit                                                              (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValCharacter::MulticastLanded(struct Engine_HitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastLanded");

	Params::AValCharacter_MulticastLanded_Params Parms{};

	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastJetpackStopped
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AValCharacter::MulticastJetpackStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastJetpackStopped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastJetpackStarted
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                               bStartedFromMidAir                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::MulticastJetpackStarted(bool bStartedFromMidAir)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastJetpackStarted");

	Params::AValCharacter_MulticastJetpackStarted_Params Parms{};

	Parms.bStartedFromMidAir = bStartedFromMidAir;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MulticastForceDisableFlashlight
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AValCharacter::MulticastForceDisableFlashlight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MulticastForceDisableFlashlight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Multicast_ReleaseHeldItem
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AValCharacter::Multicast_ReleaseHeldItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Multicast_ReleaseHeldItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.MonkeyTimerExpired
// (Final, Native, Public)
// Parameters:

void AValCharacter::MonkeyTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "MonkeyTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.KillSpawn
// (Native, Public, BlueprintCallable)
// Parameters:
// enum class EValOwnedSpawnType      SpawnType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::KillSpawn(enum class EValOwnedSpawnType SpawnType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "KillSpawn");

	Params::AValCharacter_KillSpawn_Params Parms{};

	Parms.SpawnType = SpawnType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.IsPlayerBot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsPlayerBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsPlayerBot");

	Params::AValCharacter_IsPlayerBot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsPlayerBanned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsPlayerBanned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsPlayerBanned");

	Params::AValCharacter_IsPlayerBanned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsPetBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsPetBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsPetBot");

	Params::AValCharacter_IsPetBot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsMagBoostActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsMagBoostActive(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsMagBoostActive");

	Params::AValCharacter_IsMagBoostActive_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsInvisible
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsInvisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsInvisible");

	Params::AValCharacter_IsInvisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsInterpingToThirdPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsInterpingToThirdPerson()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsInterpingToThirdPerson");

	Params::AValCharacter_IsInterpingToThirdPerson_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsInterpingToFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsInterpingToFirstPerson()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsInterpingToFirstPerson");

	Params::AValCharacter_IsInterpingToFirstPerson_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsInShip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsInShip()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsInShip");

	Params::AValCharacter_IsInShip_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsInForge
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsInForge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsInForge");

	Params::AValCharacter_IsInForge_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsHunterPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsHunterPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsHunterPlayer");

	Params::AValCharacter_IsHunterPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsHunterBot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsHunterBot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsHunterBot");

	Params::AValCharacter_IsHunterBot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsHunter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsHunter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsHunter");

	Params::AValCharacter_IsHunter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsHoldingObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsHoldingObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsHoldingObject");

	Params::AValCharacter_IsHoldingObject_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsFullyAimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsFullyAimed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsFullyAimed");

	Params::AValCharacter_IsFullyAimed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsFirstPerson()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsFirstPerson");

	Params::AValCharacter_IsFirstPerson_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsEquipSlotUsed
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsEquipSlotUsed(struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsEquipSlotUsed");

	Params::AValCharacter_IsEquipSlotUsed_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsCybrid
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsCybrid()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsCybrid");

	Params::AValCharacter_IsCybrid_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsCurrentlySpectated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsCurrentlySpectated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsCurrentlySpectated");

	Params::AValCharacter_IsCurrentlySpectated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsBotPatrollingBackward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsBotPatrollingBackward()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsBotPatrollingBackward");

	Params::AValCharacter_IsBotPatrollingBackward_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsBaseTurret
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsBaseTurret()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsBaseTurret");

	Params::AValCharacter_IsBaseTurret_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsAlive");

	Params::AValCharacter_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.IsAbilityHandleActivatable
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::IsAbilityHandleActivatable(struct GameplayAbilities_GameplayAbilitySpecHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "IsAbilityHandleActivatable");

	Params::AValCharacter_IsAbilityHandleActivatable_Params Parms{};

	Parms.Handle = Handle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.InitializeCharacterDuringRound
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::InitializeCharacterDuringRound()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "InitializeCharacterDuringRound");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.InitializeCharacter
// (Final, Native, Public)
// Parameters:

void AValCharacter::InitializeCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "InitializeCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.HasPendingBoostSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::HasPendingBoostSpace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HasPendingBoostSpace");

	Params::AValCharacter_HasPendingBoostSpace_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.HasOpenedInteractable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::HasOpenedInteractable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HasOpenedInteractable");

	Params::AValCharacter_HasOpenedInteractable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.HasMultipleMuzzleFireLocations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::HasMultipleMuzzleFireLocations()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HasMultipleMuzzleFireLocations");

	Params::AValCharacter_HasMultipleMuzzleFireLocations_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.HasMaxBotPatrolPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::HasMaxBotPatrolPoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HasMaxBotPatrolPoints");

	Params::AValCharacter_HasMaxBotPatrolPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.HasBotDealtDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::HasBotDealtDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HasBotDealtDamage");

	Params::AValCharacter_HasBotDealtDamage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.HandleSpawnedAlarmBotDied
// (Final, Native, Public)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               Pawn                                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::HandleSpawnedAlarmBotDied(float TimeToRespawn, class AValCharacter* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HandleSpawnedAlarmBotDied");

	Params::AValCharacter_HandleSpawnedAlarmBotDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.HandleSpawnedAlarmBotDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::HandleSpawnedAlarmBotDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HandleSpawnedAlarmBotDestroyed");

	Params::AValCharacter_HandleSpawnedAlarmBotDestroyed_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.HandleMeshChanged
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::HandleMeshChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "HandleMeshChanged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.GiveItemUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostItem          ItemUpgrade                                                      (Parm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GiveItemUpgrade(const struct Valhalla_BoostItem& ItemUpgrade, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GiveItemUpgrade");

	Params::AValCharacter_GiveItemUpgrade_Params Parms{};

	Parms.ItemUpgrade = ItemUpgrade;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GiveAbilityUpgrade
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayAbility>DeviceUpgrade                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ValAbilityUpgradeEffectData>Effects                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle AValCharacter::GiveAbilityUpgrade(TSubclassOf<class UGameplayAbility> DeviceUpgrade, const struct GameplayTags_GameplayTag& Slot, TArray<struct Valhalla_ValAbilityUpgradeEffectData>& Effects, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GiveAbilityUpgrade");

	Params::AValCharacter_GiveAbilityUpgrade_Params Parms{};

	Parms.DeviceUpgrade = DeviceUpgrade;
	Parms.Slot = Slot;
	Parms.Effects = Effects;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetWallRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetWallRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetWallRotation");

	Params::AValCharacter_GetWallRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVisibleMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVisibleMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVisibleMesh");

	Params::AValCharacter_GetVisibleMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVisibleGunMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVisibleGunMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVisibleGunMesh");

	Params::AValCharacter_GetVisibleGunMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetViewRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Rotator         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Rotator AValCharacter::GetViewRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetViewRotation");

	Params::AValCharacter_GetViewRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVFXTP_Gun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVFXTP_Gun()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVFXTP_Gun");

	Params::AValCharacter_GetVFXTP_Gun_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVFXMesh3P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVFXMesh3P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVFXMesh3P");

	Params::AValCharacter_GetVFXMesh3P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVFXMesh1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVFXMesh1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVFXMesh1P");

	Params::AValCharacter_GetVFXMesh1P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetVFXFP_Gun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetVFXFP_Gun()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetVFXFP_Gun");

	Params::AValCharacter_GetVFXFP_Gun_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetValPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerController* AValCharacter::GetValPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetValPlayerController");

	Params::AValCharacter_GetValPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetUseAutoPickup
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetUseAutoPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetUseAutoPickup");

	Params::AValCharacter_GetUseAutoPickup_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTrackedTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValCharacter::GetTrackedTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTrackedTarget");

	Params::AValCharacter_GetTrackedTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTotalHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetTotalHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTotalHealth");

	Params::AValCharacter_GetTotalHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTotalAbilityPropertyModValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    AbilityTag                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    PropertyTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetTotalAbilityPropertyModValue(const struct GameplayTags_GameplayTag& AbilityTag, const struct GameplayTags_GameplayTag& PropertyTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTotalAbilityPropertyModValue");

	Params::AValCharacter_GetTotalAbilityPropertyModValue_Params Parms{};

	Parms.AbilityTag = AbilityTag;
	Parms.PropertyTag = PropertyTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetThreatComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValThreatComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValThreatComponent* AValCharacter::GetThreatComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetThreatComponent");

	Params::AValCharacter_GetThreatComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetThirdPersonCameraAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetThirdPersonCameraAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetThirdPersonCameraAlpha");

	Params::AValCharacter_GetThirdPersonCameraAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTempShieldPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetTempShieldPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTempShieldPercent");

	Params::AValCharacter_GetTempShieldPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTemporaryShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetTemporaryShields()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTemporaryShields");

	Params::AValCharacter_GetTemporaryShields_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTemporaryHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetTemporaryHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTemporaryHealth");

	Params::AValCharacter_GetTemporaryHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetTempHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetTempHealthPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetTempHealthPercent");

	Params::AValCharacter_GetTempHealthPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetSwapTimeModifier
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                              OutPercentModifier                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutFlatModifier                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SwappedFromSlot                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    SwappedToSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::GetSwapTimeModifier(float& OutPercentModifier, float& OutFlatModifier, struct GameplayTags_GameplayTag& SwappedFromSlot, struct GameplayTags_GameplayTag& SwappedToSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSwapTimeModifier");

	Params::AValCharacter_GetSwapTimeModifier_Params Parms{};

	Parms.OutPercentModifier = OutPercentModifier;
	Parms.OutFlatModifier = OutFlatModifier;
	Parms.SwappedFromSlot = SwappedFromSlot;
	Parms.SwappedToSlot = SwappedToSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.GetSwapEquipSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::GetSwapEquipSlot(struct GameplayTags_GameplayTag* EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSwapEquipSlot");

	Params::AValCharacter_GetSwapEquipSlot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquipSlot != nullptr)
		*EquipSlot = std::move(Parms.EquipSlot);

}


// Function Valhalla.ValCharacter.GetSupportingBots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class AValCharacter>>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class AValCharacter>> AValCharacter::GetSupportingBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSupportingBots");

	Params::AValCharacter_GetSupportingBots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetSpawnedActorLimit
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EValOwnedSpawnType      ActorType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetSpawnedActorLimit(enum class EValOwnedSpawnType ActorType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSpawnedActorLimit");

	Params::AValCharacter_GetSpawnedActorLimit_Params Parms{};

	Parms.ActorType = ActorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetSlotForEquippedAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleHandle                                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWarnOnInvalidSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetSlotForEquippedAbility(struct GameplayAbilities_GameplayAbilitySpecHandle& Handle, bool bWarnOnInvalidSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSlotForEquippedAbility");

	Params::AValCharacter_GetSlotForEquippedAbility_Params Parms{};

	Parms.Handle = Handle;
	Parms.bWarnOnInvalidSlot = bWarnOnInvalidSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetSlotAmmoRarity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ERarity                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ERarity AValCharacter::GetSlotAmmoRarity(const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetSlotAmmoRarity");

	Params::AValCharacter_GetSlotAmmoRarity_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetShowEnemyHealthBar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetShowEnemyHealthBar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetShowEnemyHealthBar");

	Params::AValCharacter_GetShowEnemyHealthBar_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetShieldsMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetShieldsMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetShieldsMax");

	Params::AValCharacter_GetShieldsMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetShields
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetShields()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetShields");

	Params::AValCharacter_GetShields_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetShieldPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetShieldPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetShieldPercent");

	Params::AValCharacter_GetShieldPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetShapeTraceTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValGATA_ShapeTrace*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValGATA_ShapeTrace* AValCharacter::GetShapeTraceTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetShapeTraceTargetActor");

	Params::AValCharacter_GetShapeTraceTargetActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetQuickSlotType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    QuickSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ItemType                                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetQuickSlotType(struct GameplayTags_GameplayTag& QuickSlot, struct GameplayTags_GameplayTag* ItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetQuickSlotType");

	Params::AValCharacter_GetQuickSlotType_Params Parms{};

	Parms.QuickSlot = QuickSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ItemType != nullptr)
		*ItemType = std::move(Parms.ItemType);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetQuickSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct GameplayTags_GameplayTag>QuickSlots                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValCharacter::GetQuickSlots(TArray<struct GameplayTags_GameplayTag>* QuickSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetQuickSlots");

	Params::AValCharacter_GetQuickSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuickSlots != nullptr)
		*QuickSlots = std::move(Parms.QuickSlots);

}


// Function Valhalla.ValCharacter.GetPrimaryEquipSlotTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetPrimaryEquipSlotTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPrimaryEquipSlotTag");

	Params::AValCharacter_GetPrimaryEquipSlotTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPrimaryEquippedAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle AValCharacter::GetPrimaryEquippedAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPrimaryEquippedAbility");

	Params::AValCharacter_GetPrimaryEquippedAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPreviousActiveMuzzleSocketName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        OutSocketName                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::GetPreviousActiveMuzzleSocketName(class FName* OutSocketName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPreviousActiveMuzzleSocketName");

	Params::AValCharacter_GetPreviousActiveMuzzleSocketName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSocketName != nullptr)
		*OutSocketName = Parms.OutSocketName;

}


// Function Valhalla.ValCharacter.GetPredictedSwappedToAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle AValCharacter::GetPredictedSwappedToAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPredictedSwappedToAbility");

	Params::AValCharacter_GetPredictedSwappedToAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPredictedInteractableAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValDevice*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDevice* AValCharacter::GetPredictedInteractableAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPredictedInteractableAbility");

	Params::AValCharacter_GetPredictedInteractableAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPositionHistoryComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValPositionHistoryComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPositionHistoryComponent* AValCharacter::GetPositionHistoryComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPositionHistoryComp");

	Params::AValCharacter_GetPositionHistoryComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPingComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValPingComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValPingComponent* AValCharacter::GetPingComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPingComponent");

	Params::AValCharacter_GetPingComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPending3PAbilityAV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* AValCharacter::GetPending3PAbilityAV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPending3PAbilityAV");

	Params::AValCharacter_GetPending3PAbilityAV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetPending1PAbilityAV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* AValCharacter::GetPending1PAbilityAV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetPending1PAbilityAV");

	Params::AValCharacter_GetPending1PAbilityAV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetOxygen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetOxygen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetOxygen");

	Params::AValCharacter_GetOxygen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetOverlayMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EOverlayMeshType        MeshType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetOverlayMesh(enum class EOverlayMeshType MeshType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetOverlayMesh");

	Params::AValCharacter_GetOverlayMesh_Params Parms{};

	Parms.MeshType = MeshType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetOverlayComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValCharacterOverlayComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValCharacterOverlayComponent* AValCharacter::GetOverlayComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetOverlayComponent");

	Params::AValCharacter_GetOverlayComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetOutlineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValOutlineComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValOutlineComponent* AValCharacter::GetOutlineComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetOutlineComponent");

	Params::AValCharacter_GetOutlineComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetNextHolsterTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetNextHolsterTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetNextHolsterTime");

	Params::AValCharacter_GetNextHolsterTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetNextDrawTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetNextDrawTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetNextDrawTime");

	Params::AValCharacter_GetNextDrawTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMuzzleSocketCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetMuzzleSocketCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMuzzleSocketCount");

	Params::AValCharacter_GetMuzzleSocketCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMuzzleLocationAtIndex
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              MuzzleIndex                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          OutLocation                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetMuzzleLocationAtIndex(int32 MuzzleIndex, struct CoreUObject_Vector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMuzzleLocationAtIndex");

	Params::AValCharacter_GetMuzzleLocationAtIndex_Params Parms{};

	Parms.MuzzleIndex = MuzzleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMuzzleFireLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetMuzzleFireLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMuzzleFireLocation");

	Params::AValCharacter_GetMuzzleFireLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMuzzle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* AValCharacter::GetMuzzle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMuzzle");

	Params::AValCharacter_GetMuzzle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMovingSpreadMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetMovingSpreadMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMovingSpreadMultiplier");

	Params::AValCharacter_GetMovingSpreadMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMostRecentDamager
// (Final, Native, Public, Const)
// Parameters:
// class AValPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValPlayerState* AValCharacter::GetMostRecentDamager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMostRecentDamager");

	Params::AValCharacter_GetMostRecentDamager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMesh3P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetMesh3P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMesh3P");

	Params::AValCharacter_GetMesh3P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMesh1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetMesh1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMesh1P");

	Params::AValCharacter_GetMesh1P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetMaxPatrolPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetMaxPatrolPoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetMaxPatrolPoints");

	Params::AValCharacter_GetMaxPatrolPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetLoadoutTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetLoadoutTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetLoadoutTag");

	Params::AValCharacter_GetLoadoutTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetLineTraceTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValGATA_LineTrace*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValGATA_LineTrace* AValCharacter::GetLineTraceTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetLineTraceTargetActor");

	Params::AValCharacter_GetLineTraceTargetActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetLastHitLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetLastHitLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetLastHitLocation");

	Params::AValCharacter_GetLastHitLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetLastHitDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetLastHitDirection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetLastHitDirection");

	Params::AValCharacter_GetLastHitDirection_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetJetpackMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponentBudgeted*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponentBudgeted* AValCharacter::GetJetpackMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetJetpackMesh");

	Params::AValCharacter_GetJetpackMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetItemsForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_BoostItem          Item                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetItemsForSlot(struct Valhalla_BoostItem* Item, struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetItemsForSlot");

	Params::AValCharacter_GetItemsForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetItemAbilityUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>OutDeviceUpgrades                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetItemAbilityUpgrades(struct GameplayTags_GameplayTag& Slot, TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>* OutDeviceUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetItemAbilityUpgrades");

	Params::AValCharacter_GetItemAbilityUpgrades_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDeviceUpgrades != nullptr)
		*OutDeviceUpgrades = std::move(Parms.OutDeviceUpgrades);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetIsMounted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetIsMounted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetIsMounted");

	Params::AValCharacter_GetIsMounted_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetInventoryAmmo
// (Final, Native, Public)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetInventoryAmmo(const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetInventoryAmmo");

	Params::AValCharacter_GetInventoryAmmo_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetHitReactDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ImpactPoint                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetHitReactDirection(struct CoreUObject_Vector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetHitReactDirection");

	Params::AValCharacter_GetHitReactDirection_Params Parms{};

	Parms.ImpactPoint = ImpactPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetHealthPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetHealthPercent");

	Params::AValCharacter_GetHealthPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetHealthMax()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetHealthMax");

	Params::AValCharacter_GetHealthMax_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetHealth");

	Params::AValCharacter_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetHasFullScreenScope
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetHasFullScreenScope()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetHasFullScreenScope");

	Params::AValCharacter_GetHasFullScreenScope_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetGunVFXMaterials
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInstanceDynamic*> AValCharacter::GetGunVFXMaterials()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetGunVFXMaterials");

	Params::AValCharacter_GetGunVFXMaterials_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetGunMesh3P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetGunMesh3P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetGunMesh3P");

	Params::AValCharacter_GetGunMesh3P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetGunMesh1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AValCharacter::GetGunMesh1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetGunMesh1P");

	Params::AValCharacter_GetGunMesh1P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetFirstPersonCameraRootOffset
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetFirstPersonCameraRootOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetFirstPersonCameraRootOffset");

	Params::AValCharacter_GetFirstPersonCameraRootOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetFirstPersonCameraAnimation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct CoreUObject_Rotator         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Rotator AValCharacter::GetFirstPersonCameraAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetFirstPersonCameraAnimation");

	Params::AValCharacter_GetFirstPersonCameraAnimation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetFallingSpreadMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetFallingSpreadMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetFallingSpreadMultiplier");

	Params::AValCharacter_GetFallingSpreadMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquipSlotInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<struct GameplayTags_GameplayTag, enum class EValAbilityInputID>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct GameplayTags_GameplayTag, enum class EValAbilityInputID> AValCharacter::GetEquipSlotInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquipSlotInput");

	Params::AValCharacter_GetEquipSlotInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedJetpackAt
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValJetpackMeshData*         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValJetpackMeshData* AValCharacter::GetEquippedJetpackAt(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedJetpackAt");

	Params::AValCharacter_GetEquippedJetpackAt_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedAbilityTimeBetweenShots
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetEquippedAbilityTimeBetweenShots(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedAbilityTimeBetweenShots");

	Params::AValCharacter_GetEquippedAbilityTimeBetweenShots_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedAbilityProjectileClass
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AValProjectile>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AValProjectile> AValCharacter::GetEquippedAbilityProjectileClass(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedAbilityProjectileClass");

	Params::AValCharacter_GetEquippedAbilityProjectileClass_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedAbilityFireMode
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetEquippedAbilityFireMode(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedAbilityFireMode");

	Params::AValCharacter_GetEquippedAbilityFireMode_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedAbilityClass
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayAbility>AbilityClass                                                     (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetEquippedAbilityClass(const struct GameplayTags_GameplayTag& SlotTag, TSubclassOf<class UGameplayAbility>* AbilityClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedAbilityClass");

	Params::AValCharacter_GetEquippedAbilityClass_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AbilityClass != nullptr)
		*AbilityClass = Parms.AbilityClass;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquippedAbility
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWarnOnInvalidSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle AValCharacter::GetEquippedAbility(struct GameplayTags_GameplayTag& SlotTag, bool bWarnOnInvalidSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquippedAbility");

	Params::AValCharacter_GetEquippedAbility_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.bWarnOnInvalidSlot = bWarnOnInvalidSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquipmentEffectsForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_EquipmentEffect>EquipmentEffects                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetEquipmentEffectsForSlot(struct GameplayTags_GameplayTag& Slot, TArray<struct Valhalla_EquipmentEffect>* EquipmentEffects)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquipmentEffectsForSlot");

	Params::AValCharacter_GetEquipmentEffectsForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EquipmentEffects != nullptr)
		*EquipmentEffects = std::move(Parms.EquipmentEffects);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEquipmentEffectHandlesForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>EffectHandles                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetEquipmentEffectHandlesForSlot(struct GameplayTags_GameplayTag& Slot, TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>* EffectHandles)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEquipmentEffectHandlesForSlot");

	Params::AValCharacter_GetEquipmentEffectHandlesForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EffectHandles != nullptr)
		*EffectHandles = std::move(Parms.EffectHandles);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetEnergy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetEnergy");

	Params::AValCharacter_GetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetDowned
// (Final, Native, Public, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetDowned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetDowned");

	Params::AValCharacter_GetDowned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetDistanceFromPivotToMuzzle1P
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetDistanceFromPivotToMuzzle1P()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetDistanceFromPivotToMuzzle1P");

	Params::AValCharacter_GetDistanceFromPivotToMuzzle1P_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetDeviceAudioVisualForSlot
// (BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bWarnOnInvalidSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValDeviceAudioVisual*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDeviceAudioVisual* AValCharacter::GetDeviceAudioVisualForSlot(struct GameplayTags_GameplayTag& SlotTag, bool bWarnOnInvalidSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetDeviceAudioVisualForSlot");

	Params::AValCharacter_GetDeviceAudioVisualForSlot_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.bWarnOnInvalidSlot = bWarnOnInvalidSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetDamageDealers
// (Final, Native, Public, Const)
// Parameters:
// TMap<class AValPlayerState*, float>ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class AValPlayerState*, float> AValCharacter::GetDamageDealers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetDamageDealers");

	Params::AValCharacter_GetDamageDealers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCustomViewRotationAsVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetCustomViewRotationAsVector()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCustomViewRotationAsVector");

	Params::AValCharacter_GetCustomViewRotationAsVector_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCustomViewRotationAsRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Rotator         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Rotator AValCharacter::GetCustomViewRotationAsRotator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCustomViewRotationAsRotator");

	Params::AValCharacter_GetCustomViewRotationAsRotator_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCurrentHolsterTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetCurrentHolsterTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCurrentHolsterTime");

	Params::AValCharacter_GetCurrentHolsterTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCurrentFlinchRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Rotator         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Rotator AValCharacter::GetCurrentFlinchRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCurrentFlinchRotation");

	Params::AValCharacter_GetCurrentFlinchRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCurrentDrawTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetCurrentDrawTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCurrentDrawTime");

	Params::AValCharacter_GetCurrentDrawTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCurrentAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_ValAmmoData        ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ValAmmoData AValCharacter::GetCurrentAmmo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCurrentAmmo");

	Params::AValCharacter_GetCurrentAmmo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCrouchingSpreadMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetCrouchingSpreadMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCrouchingSpreadMultiplier");

	Params::AValCharacter_GetCrouchingSpreadMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetCosmeticSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_CosmeticSlot>CosmeticSlots                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValCharacter::GetCosmeticSlots(TArray<struct Valhalla_CosmeticSlot>* CosmeticSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetCosmeticSlots");

	Params::AValCharacter_GetCosmeticSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CosmeticSlots != nullptr)
		*CosmeticSlots = std::move(Parms.CosmeticSlots);

}


// Function Valhalla.ValCharacter.GetBotType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetBotType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotType");

	Params::AValCharacter_GetBotType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AValCharacter::GetBotTeamNum()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotTeamNum");

	Params::AValCharacter_GetBotTeamNum_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotStartingPatrolIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValCharacter::GetBotStartingPatrolIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotStartingPatrolIndex");

	Params::AValCharacter_GetBotStartingPatrolIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotSpawnVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValBotSpawnVolume*          ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValBotSpawnVolume* AValCharacter::GetBotSpawnVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotSpawnVolume");

	Params::AValCharacter_GetBotSpawnVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotPatrolPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct CoreUObject_Vector>  ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct CoreUObject_Vector> AValCharacter::GetBotPatrolPoints()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotPatrolPoints");

	Params::AValCharacter_GetBotPatrolPoints_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotPatrolPointAtIndex
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                              PatrolIndex                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          PatrolPoint                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetBotPatrolPointAtIndex(int32 PatrolIndex, struct CoreUObject_Vector* PatrolPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotPatrolPointAtIndex");

	Params::AValCharacter_GetBotPatrolPointAtIndex_Params Parms{};

	Parms.PatrolIndex = PatrolIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PatrolPoint != nullptr)
		*PatrolPoint = std::move(Parms.PatrolPoint);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotLoadout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValLoadoutAsset*            ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValLoadoutAsset* AValCharacter::GetBotLoadout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotLoadout");

	Params::AValCharacter_GetBotLoadout_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotConfigData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValBotData*                 ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValBotData* AValCharacter::GetBotConfigData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotConfigData");

	Params::AValCharacter_GetBotConfigData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBotAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UValCharacterAnimInstance*   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValCharacterAnimInstance* AValCharacter::GetBotAnimInstance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBotAnimInstance");

	Params::AValCharacter_GetBotAnimInstance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBlockAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetBlockAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBlockAlpha");

	Params::AValCharacter_GetBlockAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetBestInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValCharacter::GetBestInteraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetBestInteraction");

	Params::AValCharacter_GetBestInteraction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAttributes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAttributeSet*            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAttributeSet* AValCharacter::GetAttributes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAttributes");

	Params::AValCharacter_GetAttributes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAOEComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USphereComponent*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USphereComponent* AValCharacter::GetAOEComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAOEComponent");

	Params::AValCharacter_GetAOEComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAmmoForSlotConst
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValAmmoData        ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ValAmmoData AValCharacter::GetAmmoForSlotConst(struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAmmoForSlotConst");

	Params::AValCharacter_GetAmmoForSlotConst_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAmmoForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValAmmoData        ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct Valhalla_ValAmmoData AValCharacter::GetAmmoForSlot(struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAmmoForSlot");

	Params::AValCharacter_GetAmmoForSlot_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAllMuzzleSocketNames
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                OutSocketNames                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValCharacter::GetAllMuzzleSocketNames(TArray<class FName>* OutSocketNames)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAllMuzzleSocketNames");

	Params::AValCharacter_GetAllMuzzleSocketNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSocketNames != nullptr)
		*OutSocketNames = std::move(Parms.OutSocketNames);

}


// Function Valhalla.ValCharacter.GetAITargetPoint
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetAITargetPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAITargetPoint");

	Params::AValCharacter_GetAITargetPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAITargetedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AValCharacter::GetAITargetedActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAITargetedActor");

	Params::AValCharacter_GetAITargetedActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAimingSpreadMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetAimingSpreadMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAimingSpreadMultiplier");

	Params::AValCharacter_GetAimingSpreadMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAimingFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetAimingFOV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAimingFOV");

	Params::AValCharacter_GetAimingFOV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAimingAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetAimingAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAimingAlpha");

	Params::AValCharacter_GetAimingAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAimFromBlackboard
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          AimValue                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetAimFromBlackboard(struct CoreUObject_Vector* AimValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAimFromBlackboard");

	Params::AValCharacter_GetAimFromBlackboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AimValue != nullptr)
		*AimValue = std::move(Parms.AimValue);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAimForTargetData
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          AimValue                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetAimForTargetData(struct CoreUObject_Vector* AimValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAimForTargetData");

	Params::AValCharacter_GetAimForTargetData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AimValue != nullptr)
		*AimValue = std::move(Parms.AimValue);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveSwappedAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayAbility*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* AValCharacter::GetActiveSwappedAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveSwappedAbility");

	Params::AValCharacter_GetActiveSwappedAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveMuzzleLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct CoreUObject_Vector          ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct CoreUObject_Vector AValCharacter::GetActiveMuzzleLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveMuzzleLocation");

	Params::AValCharacter_GetActiveMuzzleLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquipSlotTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetActiveEquipSlotTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquipSlotTag");

	Params::AValCharacter_GetActiveEquipSlotTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquipSlotAV
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UValDeviceAudioVisual*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValDeviceAudioVisual* AValCharacter::GetActiveEquipSlotAV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquipSlotAV");

	Params::AValCharacter_GetActiveEquipSlotAV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquippedAbilityTimeBetweenShots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValCharacter::GetActiveEquippedAbilityTimeBetweenShots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquippedAbilityTimeBetweenShots");

	Params::AValCharacter_GetActiveEquippedAbilityTimeBetweenShots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquippedAbilityProjectileClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AValProjectile>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AValProjectile> AValCharacter::GetActiveEquippedAbilityProjectileClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquippedAbilityProjectileClass");

	Params::AValCharacter_GetActiveEquippedAbilityProjectileClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquippedAbilityFireMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayTags_GameplayTag    ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayTags_GameplayTag AValCharacter::GetActiveEquippedAbilityFireMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquippedAbilityFireMode");

	Params::AValCharacter_GetActiveEquippedAbilityFireMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActiveEquippedAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct GameplayAbilities_GameplayAbilitySpecHandle AValCharacter::GetActiveEquippedAbility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActiveEquippedAbility");

	Params::AValCharacter_GetActiveEquippedAbility_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActive3PAbilityAV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* AValCharacter::GetActive3PAbilityAV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActive3PAbilityAV");

	Params::AValCharacter_GetActive3PAbilityAV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetActive1PAbilityAV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* AValCharacter::GetActive1PAbilityAV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetActive1PAbilityAV");

	Params::AValCharacter_GetActive1PAbilityAV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAbilityUpgradesForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>OutDeviceUpgrades                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetAbilityUpgradesForSlot(struct GameplayTags_GameplayTag& Slot, TArray<struct GameplayAbilities_GameplayAbilitySpecHandle>* OutDeviceUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAbilityUpgradesForSlot");

	Params::AValCharacter_GetAbilityUpgradesForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDeviceUpgrades != nullptr)
		*OutDeviceUpgrades = std::move(Parms.OutDeviceUpgrades);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAbilityUpgradeEffectsForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct Valhalla_ValAbilityUpgradeEffectData>OutDeviceUpgradeEffects                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::GetAbilityUpgradeEffectsForSlot(struct GameplayTags_GameplayTag& Slot, TArray<struct Valhalla_ValAbilityUpgradeEffectData>* OutDeviceUpgradeEffects)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAbilityUpgradeEffectsForSlot");

	Params::AValCharacter_GetAbilityUpgradeEffectsForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDeviceUpgradeEffects != nullptr)
		*OutDeviceUpgradeEffects = std::move(Parms.OutDeviceUpgradeEffects);

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.GetAbilityAVForSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UValAbilityAudioVisual*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UValAbilityAudioVisual* AValCharacter::GetAbilityAVForSlot(struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "GetAbilityAVForSlot");

	Params::AValCharacter_GetAbilityAVForSlot_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.ForceSetClientEnergy
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                              NewEnergy                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ForceSetClientEnergy(float NewEnergy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ForceSetClientEnergy");

	Params::AValCharacter_ForceSetClientEnergy_Params Parms{};

	Parms.NewEnergy = NewEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.FlushOverlayMat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::FlushOverlayMat(enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "FlushOverlayMat");

	Params::AValCharacter_FlushOverlayMat_Params Parms{};

	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.FinalizeInteract
// (Final, Native, Public)
// Parameters:
// class AActor*                      RequestedInteraction                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::FinalizeInteract(class AActor* RequestedInteraction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "FinalizeInteract");

	Params::AValCharacter_FinalizeInteract_Params Parms{};

	Parms.RequestedInteraction = RequestedInteraction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.EventRespawned
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::EventRespawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EventRespawned");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.EventDied
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::EventDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EventDied");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.EquipDevice
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayAbility>Ability                                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bReplaceSlotIfNeeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSwapToAbility                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bForceImmedateEquip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::EquipDevice(struct GameplayTags_GameplayTag& SlotTag, TSubclassOf<class UGameplayAbility> Ability, bool bReplaceSlotIfNeeded, bool bSwapToAbility, bool bForceImmedateEquip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EquipDevice");

	Params::AValCharacter_EquipDevice_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.Ability = Ability;
	Parms.bReplaceSlotIfNeeded = bReplaceSlotIfNeeded;
	Parms.bSwapToAbility = bSwapToAbility;
	Parms.bForceImmedateEquip = bForceImmedateEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.EndLatch
// (Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::EndLatch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EndLatch");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.EndCharmCybrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::EndCharmCybrid()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EndCharmCybrid");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.EnableManualJetpackThrustMode
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bEnabled                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::EnableManualJetpackThrustMode(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "EnableManualJetpackThrustMode");

	Params::AValCharacter_EnableManualJetpackThrustMode_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DropSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::DropSlot(struct GameplayTags_GameplayTag& SlotTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DropSlot");

	Params::AValCharacter_DropSlot_Params Parms{};

	Parms.SlotTag = SlotTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.DropInventorySlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_InventorySlot      RequestedSlot                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::DropInventorySlot(struct Valhalla_InventorySlot& RequestedSlot, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DropInventorySlot");

	Params::AValCharacter_DropInventorySlot_Params Parms{};

	Parms.RequestedSlot = RequestedSlot;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DropHeldItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::DropHeldItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DropHeldItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DropDeathLoot
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::DropDeathLoot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DropDeathLoot");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.DropBoostItemSlot
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct GameplayTags_GameplayTag    SlotTag                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ItemActor                                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::DropBoostItemSlot(struct GameplayTags_GameplayTag& SlotTag, class AActor* ItemActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DropBoostItemSlot");

	Params::AValCharacter_DropBoostItemSlot_Params Parms{};

	Parms.SlotTag = SlotTag;
	Parms.ItemActor = ItemActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.DownStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bDowned                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::DownStateChanged(bool bDowned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DownStateChanged");

	Params::AValCharacter_DownStateChanged_Params Parms{};

	Parms.bDowned = bDowned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DisableRemainingAmmoVFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::DisableRemainingAmmoVFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DisableRemainingAmmoVFX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DisableEnableWwise
// (Final, Native, Protected)
// Parameters:

void AValCharacter::DisableEnableWwise()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DisableEnableWwise");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DisableAlwaysOnVFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::DisableAlwaysOnVFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DisableAlwaysOnVFX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DeployablePlaced
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::DeployablePlaced()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DeployablePlaced");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.DeployableCanceled
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::DeployableCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "DeployableCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CycleActiveMuzzleForEquippedWeapon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::CycleActiveMuzzleForEquippedWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CycleActiveMuzzleForEquippedWeapon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CopyEquippedSlots
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_InventorySlot>EquippedSlots                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::CopyEquippedSlots(TArray<struct Valhalla_InventorySlot>& EquippedSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CopyEquippedSlots");

	Params::AValCharacter_CopyEquippedSlots_Params Parms{};

	Parms.EquippedSlots = EquippedSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ConfigureAmmoForSlot
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ConfigureAmmoForSlot(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ConfigureAmmoForSlot");

	Params::AValCharacter_ConfigureAmmoForSlot_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CloseInteractable
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::CloseInteractable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CloseInteractable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CloseHackablePanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::CloseHackablePanel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CloseHackablePanel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientUpdateEnergy
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                              DeltaEnergy                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientUpdateEnergy(float DeltaEnergy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientUpdateEnergy");

	Params::AValCharacter_ClientUpdateEnergy_Params Parms{};

	Parms.DeltaEnergy = DeltaEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOpenDropCrate
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AValDropCrate*               Crate                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientOpenDropCrate(class AValDropCrate* Crate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOpenDropCrate");

	Params::AValCharacter_ClientOpenDropCrate_Params Parms{};

	Parms.Crate = Crate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOpenDeathCrate
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AValDeathCrate*              Crate                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientOpenDeathCrate(class AValDeathCrate* Crate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOpenDeathCrate");

	Params::AValCharacter_ClientOpenDeathCrate_Params Parms{};

	Parms.Crate = Crate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOnPurchaseFabricatorItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EFabricatorShopType     PurchasedItem                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientOnPurchaseFabricatorItem(enum class EFabricatorShopType PurchasedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOnPurchaseFabricatorItem");

	Params::AValCharacter_ClientOnPurchaseFabricatorItem_Params Parms{};

	Parms.PurchasedItem = PurchasedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOnPickup
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class AValPickup*                  Pickup                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientOnPickup(class AValPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOnPickup");

	Params::AValCharacter_ClientOnPickup_Params Parms{};

	Parms.Pickup = Pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOnInitializedDuringRound_Implementation
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValCharacter::ClientOnInitializedDuringRound_Implementation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOnInitializedDuringRound_Implementation");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.ClientOnInitializedDuringRound
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValCharacter::ClientOnInitializedDuringRound()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOnInitializedDuringRound");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientOnHealingDone
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct Valhalla_DamageData         Data                                                             (Parm, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientOnHealingDone(const struct Valhalla_DamageData& Data, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientOnHealingDone");

	Params::AValCharacter_ClientOnHealingDone_Params Parms{};

	Parms.Data = Data;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientInteractSucceeded
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientInteractSucceeded(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientInteractSucceeded");

	Params::AValCharacter_ClientInteractSucceeded_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientInteractFailed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientInteractFailed(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientInteractFailed");

	Params::AValCharacter_ClientInteractFailed_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientDamageDebug
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct Valhalla_DamageCalculationStructData                                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AValCharacter::ClientDamageDebug(struct Valhalla_DamageCalculationStruct& Data)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientDamageDebug");

	Params::AValCharacter_ClientDamageDebug_Params Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientAnnounceMasteryTriggered
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Mastery                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientAnnounceMasteryTriggered(struct GameplayTags_GameplayTag& Mastery, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientAnnounceMasteryTriggered");

	Params::AValCharacter_ClientAnnounceMasteryTriggered_Params Parms{};

	Parms.Mastery = Mastery;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClientAnnounceMasteryEnded
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Mastery                                                          (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClientAnnounceMasteryEnded(struct GameplayTags_GameplayTag& Mastery)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClientAnnounceMasteryEnded");

	Params::AValCharacter_ClientAnnounceMasteryEnded_Params Parms{};

	Parms.Mastery = Mastery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Client_RechargeShields
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValCharacter::Client_RechargeShields()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Client_RechargeShields");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Client_HideMapData
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValCharacter::Client_HideMapData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Client_HideMapData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.Client_DownloadMapData
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AValCharacter::Client_DownloadMapData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "Client_DownloadMapData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClearMagBoosts_Client
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClearMagBoosts_Client(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClearMagBoosts_Client");

	Params::AValCharacter_ClearMagBoosts_Client_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClearMagBoosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClearMagBoosts(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClearMagBoosts");

	Params::AValCharacter_ClearMagBoosts_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClearItemSlotAbilityUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClearItemSlotAbilityUpgrades(struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClearItemSlotAbilityUpgrades");

	Params::AValCharacter_ClearItemSlotAbilityUpgrades_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClearBotDamageFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::ClearBotDamageFlag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClearBotDamageFlag");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ClearAllSpawn
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ClearOnlyArray                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ClearAllSpawn(bool ClearOnlyArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ClearAllSpawn");

	Params::AValCharacter_ClearAllSpawn_Params Parms{};

	Parms.ClearOnlyArray = ClearOnlyArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CleanupSpecifcOverlayMat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          OverrideMat                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::CleanupSpecifcOverlayMat(class UMaterialInterface* OverrideMat, enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CleanupSpecifcOverlayMat");

	Params::AValCharacter_CleanupSpecifcOverlayMat_Params Parms{};

	Parms.OverrideMat = OverrideMat;
	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CleanupOverlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EOverlayMeshType        OverlayMesh                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::CleanupOverlay(enum class EOverlayMeshType OverlayMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CleanupOverlay");

	Params::AValCharacter_CleanupOverlay_Params Parms{};

	Parms.OverlayMesh = OverlayMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CheckPlayerEmissivesEnabled
// (Native, Protected)
// Parameters:

void AValCharacter::CheckPlayerEmissivesEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CheckPlayerEmissivesEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.CanTakeInteractableInventory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct Valhalla_InventoryItem      InventoryItem                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::CanTakeInteractableInventory(struct Valhalla_InventoryItem& InventoryItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CanTakeInteractableInventory");

	Params::AValCharacter_CanTakeInteractableInventory_Params Parms{};

	Parms.InventoryItem = InventoryItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.CanMount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::CanMount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CanMount");

	Params::AValCharacter_CanMount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.CanBeHealed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::CanBeHealed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CanBeHealed");

	Params::AValCharacter_CanBeHealed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.CanBeDamaged
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::CanBeDamaged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "CanBeDamaged");

	Params::AValCharacter_CanBeDamaged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.BroadcastVaultingState
// (Final, Native, Public)
// Parameters:
// bool                               bActive                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::BroadcastVaultingState(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BroadcastVaultingState");

	Params::AValCharacter_BroadcastVaultingState_Params Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.BroadcastOnMeleeSwing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bStart                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::BroadcastOnMeleeSwing(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BroadcastOnMeleeSwing");

	Params::AValCharacter_BroadcastOnMeleeSwing_Params Parms{};

	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.BPIsNetRelevantFor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      RealViewer                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ViewTarget                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          SrcLocation                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::BPIsNetRelevantFor(class AActor* RealViewer, class AActor* ViewTarget, struct CoreUObject_Vector& SrcLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BPIsNetRelevantFor");

	Params::AValCharacter_BPIsNetRelevantFor_Params Parms{};

	Parms.RealViewer = RealViewer;
	Parms.ViewTarget = ViewTarget;
	Parms.SrcLocation = SrcLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.BP_ReleaseHeldItem
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::BP_ReleaseHeldItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BP_ReleaseHeldItem");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.BP_OnRep_HeldActor
// (Event, Public, BlueprintEvent)
// Parameters:

void AValCharacter::BP_OnRep_HeldActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BP_OnRep_HeldActor");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValCharacter.BestInteractionTextUpdated
// (Final, Native, Public)
// Parameters:
// class FText                        NewText                                                          (Parm, NativeAccessSpecifierPublic)

void AValCharacter::BestInteractionTextUpdated(class FText NewText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "BestInteractionTextUpdated");

	Params::AValCharacter_BestInteractionTextUpdated_Params Parms{};

	Parms.NewText = NewText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AutoWalk
// (Final, Native, Public)
// Parameters:

void AValCharacter::AutoWalk()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AutoWalk");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AttemptInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValCharacter::AttemptInteract()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AttemptInteract");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AreFootstepsSilenced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::AreFootstepsSilenced()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AreFootstepsSilenced");

	Params::AValCharacter_AreFootstepsSilenced_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.ApplySkydiveRecoveryEffect
// (Native, Public)
// Parameters:

void AValCharacter::ApplySkydiveRecoveryEffect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ApplySkydiveRecoveryEffect");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ApplySkydiveEffect
// (Native, Public)
// Parameters:

void AValCharacter::ApplySkydiveEffect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ApplySkydiveEffect");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ApplyRevealToTrapSetoff
// (Final, Native, Protected)
// Parameters:
// class AActor*                      Trap                                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Victim                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ApplyRevealToTrapSetoff(class AActor* Trap, class AActor* Victim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ApplyRevealToTrapSetoff");

	Params::AValCharacter_ApplyRevealToTrapSetoff_Params Parms{};

	Parms.Trap = Trap;
	Parms.Victim = Victim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ApplyLatch
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Latcher                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ApplyLatch(class AValCharacter* Latcher)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ApplyLatch");

	Params::AValCharacter_ApplyLatch_Params Parms{};

	Parms.Latcher = Latcher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ApplyBanEffects
// (Final, Native, Protected)
// Parameters:

void AValCharacter::ApplyBanEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ApplyBanEffects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AlwaysDamageable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::AlwaysDamageable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AlwaysDamageable");

	Params::AValCharacter_AlwaysDamageable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.AddSupportingBot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Bot                                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddSupportingBot(class AValCharacter* Bot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddSupportingBot");

	Params::AValCharacter_AddSupportingBot_Params Parms{};

	Parms.Bot = Bot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddSpawn
// (Native, Public, BlueprintCallable)
// Parameters:
// enum class EValOwnedSpawnType      SpawnType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      NewSpawn                                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddSpawn(enum class EValOwnedSpawnType SpawnType, class AActor* NewSpawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddSpawn");

	Params::AValCharacter_AddSpawn_Params Parms{};

	Parms.SpawnType = SpawnType;
	Parms.NewSpawn = NewSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddShieldPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::AddShieldPickup(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddShieldPickup");

	Params::AValCharacter_AddShieldPickup_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.AddRevealCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddRevealCount(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddRevealCount");

	Params::AValCharacter_AddRevealCount_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddReserveClips
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ClipCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddReserveClips(int32 ClipCount, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddReserveClips");

	Params::AValCharacter_AddReserveClips_Params Parms{};

	Parms.ClipCount = ClipCount;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddReserveAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddReserveAmmo(float Amount, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddReserveAmmo");

	Params::AValCharacter_AddReserveAmmo_Params Parms{};

	Parms.Amount = Amount;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddPendingPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValPickup*                  Pickup                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddPendingPickup(class AValPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddPendingPickup");

	Params::AValCharacter_AddPendingPickup_Params Parms{};

	Parms.Pickup = Pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddPendingBoost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::AddPendingBoost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddPendingBoost");

	Params::AValCharacter_AddPendingBoost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.AddItemAbilityUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayAbilities_GameplayAbilitySpecHandleSpecHandle                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddItemAbilityUpgrade(const struct GameplayAbilities_GameplayAbilitySpecHandle& SpecHandle, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddItemAbilityUpgrade");

	Params::AValCharacter_AddItemAbilityUpgrade_Params Parms{};

	Parms.SpecHandle = SpecHandle;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddInteraction(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddInteraction");

	Params::AValCharacter_AddInteraction_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddHealthPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::AddHealthPickup(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddHealthPickup");

	Params::AValCharacter_AddHealthPickup_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValCharacter.AddFocusedInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Interactable                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddFocusedInteraction(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddFocusedInteraction");

	Params::AValCharacter_AddFocusedInteraction_Params Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddCurrentArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    AreaTag                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddCurrentArea(const struct GameplayTags_GameplayTag& AreaTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddCurrentArea");

	Params::AValCharacter_AddCurrentArea_Params Parms{};

	Parms.AreaTag = AreaTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddClipAndReserveAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              ClipAmount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReserveAmount                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddClipAndReserveAmmo(float ClipAmount, float ReserveAmount, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddClipAndReserveAmmo");

	Params::AValCharacter_AddClipAndReserveAmmo_Params Parms{};

	Parms.ClipAmount = ClipAmount;
	Parms.ReserveAmount = ReserveAmount;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddClipAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddClipAmmo(float Amount, const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddClipAmmo");

	Params::AValCharacter_AddClipAmmo_Params Parms{};

	Parms.Amount = Amount;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddBotPatrolPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Vector          NewPatrolPoint                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddBotPatrolPoint(struct CoreUObject_Vector& NewPatrolPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddBotPatrolPoint");

	Params::AValCharacter_AddBotPatrolPoint_Params Parms{};

	Parms.NewPatrolPoint = NewPatrolPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.AddAmmoPickupForSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    Slot                                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::AddAmmoPickupForSlot(const struct GameplayTags_GameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "AddAmmoPickupForSlot");

	Params::AValCharacter_AddAmmoPickupForSlot_Params Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ActiveDeviceSwapped
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bForceImmedateEquip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValCharacter::ActiveDeviceSwapped(bool bForceImmedateEquip)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ActiveDeviceSwapped");

	Params::AValCharacter_ActiveDeviceSwapped_Params Parms{};

	Parms.bForceImmedateEquip = bForceImmedateEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValCharacter.ActivateMagBoost
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    EquipSlot                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValCharacter::ActivateMagBoost(struct GameplayTags_GameplayTag& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValCharacter", "ActivateMagBoost");

	Params::AValCharacter_ActivateMagBoost_Params Parms{};

	Parms.EquipSlot = EquipSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValPlayerInput
// (None)

class UClass* UValPlayerInput::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPlayerInput");

	return Clss;
}


// ValPlayerInput Valhalla.Default__ValPlayerInput
// (Public, Transactional, ClassDefaultObject, ArchetypeObject)

class UValPlayerInput* UValPlayerInput::GetDefaultObj()
{
	static class UValPlayerInput* Default = nullptr;

	if (!Default)
		Default = static_cast<UValPlayerInput*>(UValPlayerInput::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTeamCreationComponent
// (None)

class UClass* UValTeamCreationComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTeamCreationComponent");

	return Clss;
}


// ValTeamCreationComponent Valhalla.Default__ValTeamCreationComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTeamCreationComponent* UValTeamCreationComponent::GetDefaultObj()
{
	static class UValTeamCreationComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTeamCreationComponent*>(UValTeamCreationComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValTeamCreationComponent_Cybrid
// (None)

class UClass* UValTeamCreationComponent_Cybrid::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTeamCreationComponent_Cybrid");

	return Clss;
}


// ValTeamCreationComponent_Cybrid Valhalla.Default__ValTeamCreationComponent_Cybrid
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTeamCreationComponent_Cybrid* UValTeamCreationComponent_Cybrid::GetDefaultObj()
{
	static class UValTeamCreationComponent_Cybrid* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTeamCreationComponent_Cybrid*>(UValTeamCreationComponent_Cybrid::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValTeamCreationComponent_Cybrid.GetCybridTeamDefinition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValTeamCreationComponent_Cybrid::GetCybridTeamDefinition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamCreationComponent_Cybrid", "GetCybridTeamDefinition");

	Params::UValTeamCreationComponent_Cybrid_GetCybridTeamDefinition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValTeamCreationComponent_SpaceDungeon
// (None)

class UClass* UValTeamCreationComponent_SpaceDungeon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValTeamCreationComponent_SpaceDungeon");

	return Clss;
}


// ValTeamCreationComponent_SpaceDungeon Valhalla.Default__ValTeamCreationComponent_SpaceDungeon
// (Public, ClassDefaultObject, ArchetypeObject)

class UValTeamCreationComponent_SpaceDungeon* UValTeamCreationComponent_SpaceDungeon::GetDefaultObj()
{
	static class UValTeamCreationComponent_SpaceDungeon* Default = nullptr;

	if (!Default)
		Default = static_cast<UValTeamCreationComponent_SpaceDungeon*>(UValTeamCreationComponent_SpaceDungeon::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValTeamCreationComponent_SpaceDungeon.GetWaitingLobbyTeamDefinition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValTeamCreationComponent_SpaceDungeon::GetWaitingLobbyTeamDefinition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamCreationComponent_SpaceDungeon", "GetWaitingLobbyTeamDefinition");

	Params::UValTeamCreationComponent_SpaceDungeon_GetWaitingLobbyTeamDefinition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValTeamCreationComponent_SpaceDungeon.GetDungeonHazardsTeamDefinition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UValTeamCreationComponent_SpaceDungeon::GetDungeonHazardsTeamDefinition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValTeamCreationComponent_SpaceDungeon", "GetDungeonHazardsTeamDefinition");

	Params::UValTeamCreationComponent_SpaceDungeon_GetDungeonHazardsTeamDefinition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValInputBlocker
// (None)

class UClass* UValInputBlocker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInputBlocker");

	return Clss;
}


// ValInputBlocker Valhalla.Default__ValInputBlocker
// (Public, ClassDefaultObject, ArchetypeObject)

class UValInputBlocker* UValInputBlocker::GetDefaultObj()
{
	static class UValInputBlocker* Default = nullptr;

	if (!Default)
		Default = static_cast<UValInputBlocker*>(UValInputBlocker::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValUIWidget_MatchInfo
// (None)

class UClass* UValUIWidget_MatchInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUIWidget_MatchInfo");

	return Clss;
}


// ValUIWidget_MatchInfo Valhalla.Default__ValUIWidget_MatchInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UValUIWidget_MatchInfo* UValUIWidget_MatchInfo::GetDefaultObj()
{
	static class UValUIWidget_MatchInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UValUIWidget_MatchInfo*>(UValUIWidget_MatchInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUIWidget_MatchInfo.GetRallyHereUuid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValUIWidget_MatchInfo::GetRallyHereUuid()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIWidget_MatchInfo", "GetRallyHereUuid");

	Params::UValUIWidget_MatchInfo_GetRallyHereUuid_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUIWidget_MatchInfo.GetMatchId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UValUIWidget_MatchInfo::GetMatchId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUIWidget_MatchInfo", "GetMatchId");

	Params::UValUIWidget_MatchInfo_GetMatchId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValInputManager
// (None)

class UClass* UValInputManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValInputManager");

	return Clss;
}


// ValInputManager Valhalla.Default__ValInputManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UValInputManager* UValInputManager::GetDefaultObj()
{
	static class UValInputManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UValInputManager*>(UValInputManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValInputManager.IsBlockingNonUIInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UValInputManager::IsBlockingNonUIInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInputManager", "IsBlockingNonUIInput");

	Params::UValInputManager_IsBlockingNonUIInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValInputManager.GetRHInputKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Name                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInputType              InputType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct InputCore_Key>       OutKeys                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UValInputManager::GetRHInputKeys(class FName Name, enum class EInputType InputType, TArray<struct InputCore_Key>* OutKeys)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInputManager", "GetRHInputKeys");

	Params::UValInputManager_GetRHInputKeys_Params Parms{};

	Parms.Name = Name;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutKeys != nullptr)
		*OutKeys = std::move(Parms.OutKeys);

}


// Function Valhalla.ValInputManager.EnableNonUIInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValInputManager::EnableNonUIInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInputManager", "EnableNonUIInput");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValInputManager.DisableNonUIInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UValInputManager::DisableNonUIInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValInputManager", "DisableNonUIInput");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValClosestFogPointActor
// (Actor)

class UClass* AValClosestFogPointActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValClosestFogPointActor");

	return Clss;
}


// ValClosestFogPointActor Valhalla.Default__ValClosestFogPointActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValClosestFogPointActor* AValClosestFogPointActor::GetDefaultObj()
{
	static class AValClosestFogPointActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValClosestFogPointActor*>(AValClosestFogPointActor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValClosestFogPointActor.OnFogUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValClosestFogPointActor::OnFogUpdated(float Distance, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClosestFogPointActor", "OnFogUpdated");

	Params::AValClosestFogPointActor_OnFogUpdated_Params Parms{};

	Parms.Distance = Distance;
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValClosestFogPointActor.OnFogStarted
// (Event, Public, BlueprintEvent)
// Parameters:

void AValClosestFogPointActor::OnFogStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClosestFogPointActor", "OnFogStarted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValClosestFogPointActor.OnCellDestroyed
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*               SoundToPlay                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct CoreUObject_Vector          Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValClosestFogPointActor::OnCellDestroyed(class UAkAudioEvent* SoundToPlay, struct CoreUObject_Vector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClosestFogPointActor", "OnCellDestroyed");

	Params::AValClosestFogPointActor_OnCellDestroyed_Params Parms{};

	Parms.SoundToPlay = SoundToPlay;
	Parms.Location = Location;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValClosestFogPointActor.FogUpdatedCallback
// (Final, Native, Public)
// Parameters:

void AValClosestFogPointActor::FogUpdatedCallback()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValClosestFogPointActor", "FogUpdatedCallback");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValDungeonPortal
// (Actor)

class UClass* AValDungeonPortal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValDungeonPortal");

	return Clss;
}


// ValDungeonPortal Valhalla.Default__ValDungeonPortal
// (Public, ClassDefaultObject, ArchetypeObject)

class AValDungeonPortal* AValDungeonPortal::GetDefaultObj()
{
	static class AValDungeonPortal* Default = nullptr;

	if (!Default)
		Default = static_cast<AValDungeonPortal*>(AValDungeonPortal::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValDungeonPortal.UpdateState
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EDungeonPortalState     Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::UpdateState(enum class EDungeonPortalState Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "UpdateState");

	Params::AValDungeonPortal_UpdateState_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDungeonPortal.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EDungeonPortalState     NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::SetState(enum class EDungeonPortalState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "SetState");

	Params::AValDungeonPortal_SetState_Params Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.SetCachedChanneler
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::SetCachedChanneler(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "SetCachedChanneler");

	Params::AValDungeonPortal_SetCachedChanneler_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.PortalUsedByPlayer
// (Final, Native, Public)
// Parameters:

void AValDungeonPortal::PortalUsedByPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "PortalUsedByPlayer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnRep_State
// (Final, Native, Protected)
// Parameters:

void AValDungeonPortal::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnRep_InteractableTeams
// (Final, Native, Protected)
// Parameters:

void AValDungeonPortal::OnRep_InteractableTeams()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnRep_InteractableTeams");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnRep_CachedChanneler
// (Final, Native, Protected)
// Parameters:

void AValDungeonPortal::OnRep_CachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnRep_CachedChanneler");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnPortalBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Engine_HitResult            SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AValDungeonPortal::OnPortalBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct Engine_HitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnPortalBeginOverlap");

	Params::AValDungeonPortal_OnPortalBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnPlayerStoppedUsing
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDungeonPortal::OnPlayerStoppedUsing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnPlayerStoppedUsing");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDungeonPortal.OnPlayerStartedUsing
// (Event, Public, BlueprintEvent)
// Parameters:

void AValDungeonPortal::OnPlayerStartedUsing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnPlayerStartedUsing");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValDungeonPortal.OnHoverStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::OnHoverStart(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnHoverStart");

	Params::AValDungeonPortal_OnHoverStart_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDungeonPortal.OnHoverEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::OnHoverEnd(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnHoverEnd");

	Params::AValDungeonPortal_OnHoverEnd_Params Parms{};

	Parms.Initiator = Initiator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValDungeonPortal.OnEndBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::OnEndBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnEndBestInteractable");

	Params::AValDungeonPortal_OnEndBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.OnBecomeBestInteractable
// (Native, Public)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::OnBecomeBestInteractable(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "OnBecomeBestInteractable");

	Params::AValDungeonPortal_OnBecomeBestInteractable_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::Interact(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "Interact");

	Params::AValDungeonPortal_Interact_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValDungeonPortal.GetPlayersToRevealTo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                      Players                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValDungeonPortal::GetPlayersToRevealTo(TArray<int32>* Players)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetPlayersToRevealTo");

	Params::AValDungeonPortal_GetPlayersToRevealTo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Players != nullptr)
		*Players = std::move(Parms.Players);

}


// Function Valhalla.ValDungeonPortal.GetInteractType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EInteractType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractType AValDungeonPortal::GetInteractType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetInteractType");

	Params::AValDungeonPortal_GetInteractType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetInteractText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AValDungeonPortal::GetInteractText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetInteractText");

	Params::AValDungeonPortal_GetInteractText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetInteractComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AValDungeonPortal::GetInteractComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetInteractComponent");

	Params::AValDungeonPortal_GetInteractComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetInteractableTeams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                      TeamsThatCanInteract                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValDungeonPortal::GetInteractableTeams(TArray<int32>* TeamsThatCanInteract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetInteractableTeams");

	Params::AValDungeonPortal_GetInteractableTeams_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TeamsThatCanInteract != nullptr)
		*TeamsThatCanInteract = std::move(Parms.TeamsThatCanInteract);

}


// Function Valhalla.ValDungeonPortal.GetCollisionComp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShapeComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UShapeComponent* AValDungeonPortal::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetCollisionComp");

	Params::AValDungeonPortal_GetCollisionComp_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetChannelTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AValDungeonPortal::GetChannelTime(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetChannelTime");

	Params::AValDungeonPortal_GetChannelTime_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetCachedChanneler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValCharacter* AValDungeonPortal::GetCachedChanneler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetCachedChanneler");

	Params::AValDungeonPortal_GetCachedChanneler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.GetBlockInteractReason
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EInteractionFailureType ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EInteractionFailureType AValDungeonPortal::GetBlockInteractReason(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "GetBlockInteractReason");

	Params::AValDungeonPortal_GetBlockInteractReason_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.CanInteract
// (Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               Initiator                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValDungeonPortal::CanInteract(class AValCharacter* Initiator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "CanInteract");

	Params::AValDungeonPortal_CanInteract_Params Parms{};

	Parms.Initiator = Initiator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValDungeonPortal.AttemptPortalCharacter
// (Native, Protected, BlueprintCallable)
// Parameters:
// class AValCharacter*               Character                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValDungeonPortal::AttemptPortalCharacter(class AValCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValDungeonPortal", "AttemptPortalCharacter");

	Params::AValDungeonPortal_AttemptPortalCharacter_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValEnvDamageData
// (None)

class UClass* UValEnvDamageData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEnvDamageData");

	return Clss;
}


// ValEnvDamageData Valhalla.Default__ValEnvDamageData
// (Public, ClassDefaultObject, ArchetypeObject)

class UValEnvDamageData* UValEnvDamageData::GetDefaultObj()
{
	static class UValEnvDamageData* Default = nullptr;

	if (!Default)
		Default = static_cast<UValEnvDamageData*>(UValEnvDamageData::StaticClass()->DefaultObject);

	return Default;
}


// Class Valhalla.ValEnvironmentDamageManager
// (Actor)

class UClass* AValEnvironmentDamageManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValEnvironmentDamageManager");

	return Clss;
}


// ValEnvironmentDamageManager Valhalla.Default__ValEnvironmentDamageManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AValEnvironmentDamageManager* AValEnvironmentDamageManager::GetDefaultObj()
{
	static class AValEnvironmentDamageManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AValEnvironmentDamageManager*>(AValEnvironmentDamageManager::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValEnvironmentDamageManager.OnProjectileHitComponent
// (Final, Native, Protected)
// Parameters:
// class APawn*                       ProjectileInstigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActorComponent*             Comp                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEnvironmentDamageManager::OnProjectileHitComponent(class APawn* ProjectileInstigator, class UActorComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEnvironmentDamageManager", "OnProjectileHitComponent");

	Params::AValEnvironmentDamageManager_OnProjectileHitComponent_Params Parms{};

	Parms.ProjectileInstigator = ProjectileInstigator;
	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValEnvironmentDamageManager.OnLightPanelShutdown
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          PanelLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEnvironmentDamageManager::OnLightPanelShutdown(const struct CoreUObject_Vector& PanelLocation, float EffectRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEnvironmentDamageManager", "OnLightPanelShutdown");

	Params::AValEnvironmentDamageManager_OnLightPanelShutdown_Params Parms{};

	Parms.PanelLocation = PanelLocation;
	Parms.EffectRadius = EffectRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValEnvironmentDamageManager.OnLightPanelOvercharge
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct CoreUObject_Vector          PanelLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEnvironmentDamageManager::OnLightPanelOvercharge(const struct CoreUObject_Vector& PanelLocation, float EffectRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEnvironmentDamageManager", "OnLightPanelOvercharge");

	Params::AValEnvironmentDamageManager_OnLightPanelOvercharge_Params Parms{};

	Parms.PanelLocation = PanelLocation;
	Parms.EffectRadius = EffectRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValEnvironmentDamageManager.DamageComponent
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UActorComponent*             Comp                                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bDestroyedEnvironmentObject                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValEnvironmentDamageManager::DamageComponent(class UActorComponent* Comp, uint8 Amount, bool* bDestroyedEnvironmentObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValEnvironmentDamageManager", "DamageComponent");

	Params::AValEnvironmentDamageManager_DamageComponent_Params Parms{};

	Parms.Comp = Comp;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (bDestroyedEnvironmentObject != nullptr)
		*bDestroyedEnvironmentObject = Parms.bDestroyedEnvironmentObject;

}


// Class Valhalla.ValForceField
// (Actor)

class UClass* AValForceField::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValForceField");

	return Clss;
}


// ValForceField Valhalla.Default__ValForceField
// (Public, ClassDefaultObject, ArchetypeObject)

class AValForceField* AValForceField::GetDefaultObj()
{
	static class AValForceField* Default = nullptr;

	if (!Default)
		Default = static_cast<AValForceField*>(AValForceField::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValForceField.SetForceFieldActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValForceField::SetForceFieldActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "SetForceFieldActive");

	Params::AValForceField_SetForceFieldActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValForceField.OnRep_Active
// (Final, Native, Protected)
// Parameters:

void AValForceField::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "OnRep_Active");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValForceField.GetSecurityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESecurityLevel          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESecurityLevel AValForceField::GetSecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "GetSecurityLevel");

	Params::AValForceField_GetSecurityLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValForceField.GetPassThroughRotation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct CoreUObject_Rotator         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct CoreUObject_Rotator AValForceField::GetPassThroughRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "GetPassThroughRotation");

	Params::AValForceField_GetPassThroughRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValForceField.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AValForceField::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "GetMesh");

	Params::AValForceField_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValForceField.GetForceFieldActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValForceField::GetForceFieldActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "GetForceFieldActive");

	Params::AValForceField_GetForceFieldActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValForceField.GetCollisionComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBoxComponent* AValForceField::GetCollisionComp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "GetCollisionComp");

	Params::AValForceField_GetCollisionComp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValForceField.DoesPlayerHaveSecurityLevelAccess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValCharacter*               Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValForceField::DoesPlayerHaveSecurityLevelAccess(class AValCharacter* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValForceField", "DoesPlayerHaveSecurityLevelAccess");

	Params::AValForceField_DoesPlayerHaveSecurityLevelAccess_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValObjectiveTerminal
// (Actor)

class UClass* AValObjectiveTerminal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValObjectiveTerminal");

	return Clss;
}


// ValObjectiveTerminal Valhalla.Default__ValObjectiveTerminal
// (Public, ClassDefaultObject, ArchetypeObject)

class AValObjectiveTerminal* AValObjectiveTerminal::GetDefaultObj()
{
	static class AValObjectiveTerminal* Default = nullptr;

	if (!Default)
		Default = static_cast<AValObjectiveTerminal*>(AValObjectiveTerminal::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValObjectiveTerminal.SetSecurityLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ESecurityLevel          SecurityLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectiveTerminal::SetSecurityLevel(enum class ESecurityLevel SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "SetSecurityLevel");

	Params::AValObjectiveTerminal_SetSecurityLevel_Params Parms{};

	Parms.SecurityLevel = SecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectiveTerminal.SetLocalSwarmBeacon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValSwarmBeacon*             SwarmBeacon                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValObjectiveTerminal::SetLocalSwarmBeacon(class AValSwarmBeacon* SwarmBeacon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "SetLocalSwarmBeacon");

	Params::AValObjectiveTerminal_SetLocalSwarmBeacon_Params Parms{};

	Parms.SwarmBeacon = SwarmBeacon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectiveTerminal.OnSecurityLevelUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjectiveTerminal::OnSecurityLevelUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "OnSecurityLevelUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjectiveTerminal.OnRep_SecurityLevel
// (Final, Native, Protected)
// Parameters:

void AValObjectiveTerminal::OnRep_SecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "OnRep_SecurityLevel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectiveTerminal.OnRep_InteractablePlayers
// (Final, Native, Protected)
// Parameters:

void AValObjectiveTerminal::OnRep_InteractablePlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "OnRep_InteractablePlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValObjectiveTerminal.OnInteractablePlayersUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValObjectiveTerminal::OnInteractablePlayersUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "OnInteractablePlayersUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValObjectiveTerminal.GetSecurityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class ESecurityLevel          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESecurityLevel AValObjectiveTerminal::GetSecurityLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "GetSecurityLevel");

	Params::AValObjectiveTerminal_GetSecurityLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjectiveTerminal.GetLocalSwarmBeacon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValSwarmBeacon*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValSwarmBeacon* AValObjectiveTerminal::GetLocalSwarmBeacon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "GetLocalSwarmBeacon");

	Params::AValObjectiveTerminal_GetLocalSwarmBeacon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValObjectiveTerminal.GetInteractablePlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                      OutPlayers                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValObjectiveTerminal::GetInteractablePlayers(TArray<int32>* OutPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValObjectiveTerminal", "GetInteractablePlayers");

	Params::AValObjectiveTerminal_GetInteractablePlayers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutPlayers != nullptr)
		*OutPlayers = std::move(Parms.OutPlayers);

}


// Class Valhalla.ValPing
// (Actor)

class UClass* AValPing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValPing");

	return Clss;
}


// ValPing Valhalla.Default__ValPing
// (Public, ClassDefaultObject, ArchetypeObject)

class AValPing* AValPing::GetDefaultObj()
{
	static class AValPing* Default = nullptr;

	if (!Default)
		Default = static_cast<AValPing*>(AValPing::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValPing.SetPingRarity
// (Final, Native, Public)
// Parameters:
// enum class ERarity                 ItemRarity                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPing::SetPingRarity(enum class ERarity ItemRarity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "SetPingRarity");

	Params::AValPing_SetPingRarity_Params Parms{};

	Parms.ItemRarity = ItemRarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.OnRep_Dibber
// (Final, Native, Protected)
// Parameters:

void AValPing::OnRep_Dibber()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnRep_Dibber");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.OnRep_ConfirmedPlayers
// (Final, Native, Protected)
// Parameters:

void AValPing::OnRep_ConfirmedPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnRep_ConfirmedPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.OnPlaced
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               bPlacedByLocal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPing::OnPlaced(bool bPlacedByLocal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnPlaced");

	Params::AValPing_OnPlaced_Params Parms{};

	Parms.bPlacedByLocal = bPlacedByLocal;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValPing.OnPingConfirmed
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValPing::OnPingConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnPingConfirmed");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValPing.OnOwnerDiedTimerEnded
// (Final, Native, Protected)
// Parameters:

void AValPing::OnOwnerDiedTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnOwnerDiedTimerEnded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.OnOwnerDied
// (Final, Native, Protected)
// Parameters:
// bool                               bDead                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPing::OnOwnerDied(bool bDead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnOwnerDied");

	Params::AValPing_OnOwnerDied_Params Parms{};

	Parms.bDead = bDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.OnDibsCalled
// (Event, Protected, BlueprintEvent)
// Parameters:

void AValPing::OnDibsCalled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "OnDibsCalled");



	UObject::ProcessEvent(Func, nullptr);

}


// Function Valhalla.ValPing.LootCrateDestroyCallback
// (Final, Native, Protected)
// Parameters:
// class AValLootCrate*               Crate                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValPing::LootCrateDestroyCallback(class AValLootCrate* Crate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "LootCrateDestroyCallback");

	Params::AValPing_LootCrateDestroyCallback_Params Parms{};

	Parms.Crate = Crate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValPing.IsPingWithinAngle
// (Final, Native, Public)
// Parameters:
// float                              CheckAngle                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::IsPingWithinAngle(float CheckAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "IsPingWithinAngle");

	Params::AValPing_IsPingWithinAngle_Params Parms{};

	Parms.CheckAngle = CheckAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.IsDibsable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::IsDibsable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "IsDibsable");

	Params::AValPing_IsDibsable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.IsConfirmable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::IsConfirmable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "IsConfirmable");

	Params::AValPing_IsConfirmable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.IsCancelable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::IsCancelable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "IsCancelable");

	Params::AValPing_IsCancelable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.GetIsBigMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::GetIsBigMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "GetIsBigMode");

	Params::AValPing_GetIsBigMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.CanPlayerDibs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::CanPlayerDibs(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "CanPlayerDibs");

	Params::AValPing_CanPlayerDibs_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.CanPlayerConfirm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::CanPlayerConfirm(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "CanPlayerConfirm");

	Params::AValPing_CanPlayerConfirm_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValPing.CanPlayerCancel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Player                                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValPing::CanPlayerCancel(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValPing", "CanPlayerCancel");

	Params::AValPing_CanPlayerCancel_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class Valhalla.ValSwarmBeacon
// (Actor)

class UClass* AValSwarmBeacon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValSwarmBeacon");

	return Clss;
}


// ValSwarmBeacon Valhalla.Default__ValSwarmBeacon
// (Public, ClassDefaultObject, ArchetypeObject)

class AValSwarmBeacon* AValSwarmBeacon::GetDefaultObj()
{
	static class AValSwarmBeacon* Default = nullptr;

	if (!Default)
		Default = static_cast<AValSwarmBeacon*>(AValSwarmBeacon::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValSwarmBeacon.UpdateForceFieldState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               Active                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::UpdateForceFieldState(bool Active)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "UpdateForceFieldState");

	Params::AValSwarmBeacon_UpdateForceFieldState_Params Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValSwarmBeacon.TriggerSwarm
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void AValSwarmBeacon::TriggerSwarm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "TriggerSwarm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.SetUsed
// (Final, Native, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::SetUsed(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "SetUsed");

	Params::AValSwarmBeacon_SetUsed_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.SetOwningConstructor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValUtopiaConstructor*       InConstructor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::SetOwningConstructor(class AValUtopiaConstructor* InConstructor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "SetOwningConstructor");

	Params::AValSwarmBeacon_SetOwningConstructor_Params Parms{};

	Parms.InConstructor = InConstructor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.SetCurrentWave
// (Final, Native, Public)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::SetCurrentWave(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "SetCurrentWave");

	Params::AValSwarmBeacon_SetCurrentWave_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.RemoveParticipant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               InParticipant                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::RemoveParticipant(class AValCharacter* InParticipant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "RemoveParticipant");

	Params::AValSwarmBeacon_RemoveParticipant_Params Parms{};

	Parms.InParticipant = InParticipant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.RegisterSpawnLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct CoreUObject_Transform       InSpawnLocation                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::RegisterSpawnLocation(struct CoreUObject_Transform& InSpawnLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "RegisterSpawnLocation");

	Params::AValSwarmBeacon_RegisterSpawnLocation_Params Parms{};

	Parms.InSpawnLocation = InSpawnLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnWavePreSpawnTimerExpired
// (Final, Native, Protected)
// Parameters:

void AValSwarmBeacon::OnWavePreSpawnTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnWavePreSpawnTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnWavePostSpawnTimerExpired
// (Final, Native, Protected)
// Parameters:

void AValSwarmBeacon::OnWavePostSpawnTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnWavePostSpawnTimerExpired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnResetTimerEnd
// (Final, Native, Public)
// Parameters:

void AValSwarmBeacon::OnResetTimerEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnResetTimerEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnRep_Used
// (Final, Native, Protected)
// Parameters:

void AValSwarmBeacon::OnRep_Used()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnRep_Used");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnRep_CurrentWave
// (Final, Native, Protected)
// Parameters:

void AValSwarmBeacon::OnRep_CurrentWave()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnRep_CurrentWave");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnParticipantDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               PCharacter                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::OnParticipantDied(float TimeToRespawn, class AValCharacter* PCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnParticipantDied");

	Params::AValSwarmBeacon_OnParticipantDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.PCharacter = PCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnBotSpawned
// (Final, Native, Protected)
// Parameters:
// class UBotInitData*                BotData                                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::OnBotSpawned(class UBotInitData* BotData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnBotSpawned");

	Params::AValSwarmBeacon_OnBotSpawned_Params Parms{};

	Parms.BotData = BotData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.OnBotDied
// (Final, Native, Protected)
// Parameters:
// float                              TimeToRespawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AValCharacter*               PCharacter                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::OnBotDied(float TimeToRespawn, class AValCharacter* PCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "OnBotDied");

	Params::AValSwarmBeacon_OnBotDied_Params Parms{};

	Parms.TimeToRespawn = TimeToRespawn;
	Parms.PCharacter = PCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.GetWaveCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValSwarmBeacon::GetWaveCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "GetWaveCount");

	Params::AValSwarmBeacon_GetWaveCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSwarmBeacon.GetOwningConstructor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AValUtopiaConstructor*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AValUtopiaConstructor* AValSwarmBeacon::GetOwningConstructor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "GetOwningConstructor");

	Params::AValSwarmBeacon_GetOwningConstructor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSwarmBeacon.GetCurrentWave
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValSwarmBeacon::GetCurrentWave()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "GetCurrentWave");

	Params::AValSwarmBeacon_GetCurrentWave_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValSwarmBeacon.EndEarly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bReset                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::EndEarly(bool bReset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "EndEarly");

	Params::AValSwarmBeacon_EndEarly_Params Parms{};

	Parms.bReset = bReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValSwarmBeacon.AddParticipant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AValCharacter*               InParticipant                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValSwarmBeacon::AddParticipant(class AValCharacter* InParticipant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValSwarmBeacon", "AddParticipant");

	Params::AValSwarmBeacon_AddParticipant_Params Parms{};

	Parms.InParticipant = InParticipant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValUtopiaConstructor
// (Actor)

class UClass* AValUtopiaConstructor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValUtopiaConstructor");

	return Clss;
}


// ValUtopiaConstructor Valhalla.Default__ValUtopiaConstructor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValUtopiaConstructor* AValUtopiaConstructor::GetDefaultObj()
{
	static class AValUtopiaConstructor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValUtopiaConstructor*>(AValUtopiaConstructor::StaticClass()->DefaultObject);

	return Default;
}


// Function Valhalla.ValUtopiaConstructor.SpawnAkPortals
// (Final, Native, Protected)
// Parameters:

void AValUtopiaConstructor::SpawnAkPortals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "SpawnAkPortals");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.SetSecurityLevel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UValSecurityLevel*           NewSecurityLevel                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::SetSecurityLevel(class UValSecurityLevel* NewSecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "SetSecurityLevel");

	Params::AValUtopiaConstructor_SetSecurityLevel_Params Parms{};

	Parms.NewSecurityLevel = NewSecurityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.SetOccluded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                              NewOcclusionLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewOcclusionRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::SetOccluded(uint8 NewOcclusionLevel, int32 NewOcclusionRate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "SetOccluded");

	Params::AValUtopiaConstructor_SetOccluded_Params Parms{};

	Parms.NewOcclusionLevel = NewOcclusionLevel;
	Parms.NewOcclusionRate = NewOcclusionRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.SetNativeSeed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                              NewSeed                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::SetNativeSeed(int32 NewSeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "SetNativeSeed");

	Params::AValUtopiaConstructor_SetNativeSeed_Params Parms{};

	Parms.NewSeed = NewSeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.SetIsOddRoom
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               bNewIsOddRoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::SetIsOddRoom(bool bNewIsOddRoom)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "SetIsOddRoom");

	Params::AValUtopiaConstructor_SetIsOddRoom_Params Parms{};

	Parms.bNewIsOddRoom = bNewIsOddRoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.OnDungeonGenerated
// (Final, Native, Public)
// Parameters:

void AValUtopiaConstructor::OnDungeonGenerated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "OnDungeonGenerated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.OcclusionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                              NewOcclusionLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::OcclusionChanged(uint8 NewOcclusionLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "OcclusionChanged");

	Params::AValUtopiaConstructor_OcclusionChanged_Params Parms{};

	Parms.NewOcclusionLevel = NewOcclusionLevel;

	UObject::ProcessEvent(Func, &Parms);

}


// Function Valhalla.ValUtopiaConstructor.GetStartingMeshComponent
// (Event, Public, BlueprintEvent)
// Parameters:
// class USceneComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* AValUtopiaConstructor::GetStartingMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetStartingMeshComponent");

	Params::AValUtopiaConstructor_GetStartingMeshComponent_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetSpawners
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AValBotSpawner*>      InSpawners                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::GetSpawners(TArray<class AValBotSpawner*>* InSpawners)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetSpawners");

	Params::AValUtopiaConstructor_GetSpawners_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InSpawners != nullptr)
		*InSpawners = std::move(Parms.InSpawners);

}


// Function Valhalla.ValUtopiaConstructor.GetDoors
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>              Doors                                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::GetDoors(TArray<class AActor*>* Doors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetDoors");

	Params::AValUtopiaConstructor_GetDoors_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	if (Doors != nullptr)
		*Doors = std::move(Parms.Doors);

}


// Function Valhalla.ValUtopiaConstructor.GetCellProxyComponent
// (Event, Public, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* AValUtopiaConstructor::GetCellProxyComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetCellProxyComponent");

	Params::AValUtopiaConstructor_GetCellProxyComponent_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetBuildingType
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EBuildingType           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EBuildingType AValUtopiaConstructor::GetBuildingType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetBuildingType");

	Params::AValUtopiaConstructor_GetBuildingType_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetBotWaveConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaConstructor::GetBotWaveConfig(struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetBotWaveConfig");

	Params::AValUtopiaConstructor_GetBotWaveConfig_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetBotTransformMap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>Transforms                                                       (Parm, OutParm, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::GetBotTransformMap(TMap<struct GameplayTags_GameplayTag, struct Valhalla_BotTransformData>* Transforms)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetBotTransformMap");

	Params::AValUtopiaConstructor_GetBotTransformMap_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	if (Transforms != nullptr)
		*Transforms = Parms.Transforms;

}


// Function Valhalla.ValUtopiaConstructor.GetBotRespawnTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValUtopiaConstructor::GetBotRespawnTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetBotRespawnTimer");

	Params::AValUtopiaConstructor_GetBotRespawnTimer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetAlarmWaveConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaConstructor::GetAlarmWaveConfig(struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetAlarmWaveConfig");

	Params::AValUtopiaConstructor_GetAlarmWaveConfig_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GetAlarmBotSetConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct GameplayTags_GameplayTag    BotType                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct Valhalla_ValBotWaveSet      OutConfig                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaConstructor::GetAlarmBotSetConfig(struct GameplayTags_GameplayTag& BotType, struct Valhalla_ValBotWaveSet* OutConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GetAlarmBotSetConfig");

	Params::AValUtopiaConstructor_GetAlarmBotSetConfig_Params Parms{};

	Parms.BotType = BotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutConfig != nullptr)
		*OutConfig = std::move(Parms.OutConfig);

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GenerationCompleted
// (Final, Native, Protected)
// Parameters:

void AValUtopiaConstructor::GenerationCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GenerationCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.GenerateWallBitmask
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               Top                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Bottom                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Left                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Right                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AValUtopiaConstructor::GenerateWallBitmask(bool Top, bool Bottom, bool Left, bool Right)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GenerateWallBitmask");

	Params::AValUtopiaConstructor_GenerateWallBitmask_Params Parms{};

	Parms.Top = Top;
	Parms.Bottom = Bottom;
	Parms.Left = Left;
	Parms.Right = Right;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.GenerateAudioRooms
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct Valhalla_ValUtopiaConstructorCellData>Cells                                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                              CellSize                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              GlobalHeightOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      Heights                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ColumnCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RowCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              GenerationSeed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bShowCollisionBox                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::GenerateAudioRooms(TArray<struct Valhalla_ValUtopiaConstructorCellData>& Cells, float CellSize, float GlobalHeightOffset, TArray<float>& Heights, int32 ColumnCount, int32 RowCount, int32 GenerationSeed, bool bShowCollisionBox)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "GenerateAudioRooms");

	Params::AValUtopiaConstructor_GenerateAudioRooms_Params Parms{};

	Parms.Cells = Cells;
	Parms.CellSize = CellSize;
	Parms.GlobalHeightOffset = GlobalHeightOffset;
	Parms.Heights = Heights;
	Parms.ColumnCount = ColumnCount;
	Parms.RowCount = RowCount;
	Parms.GenerationSeed = GenerationSeed;
	Parms.bShowCollisionBox = bShowCollisionBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.DoOcclusionWork
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NumPerFrame                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              StartOcclusionLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AValUtopiaConstructor::DoOcclusionWork(int32 NumPerFrame, uint8 StartOcclusionLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "DoOcclusionWork");

	Params::AValUtopiaConstructor_DoOcclusionWork_Params Parms{};

	Parms.NumPerFrame = NumPerFrame;
	Parms.StartOcclusionLevel = StartOcclusionLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function Valhalla.ValUtopiaConstructor.CacheOccludableChildren
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AValUtopiaConstructor::CacheOccludableChildren()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "CacheOccludableChildren");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function Valhalla.ValUtopiaConstructor.AddAkObjectRecord
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AValUtopiaConstructor::AddAkObjectRecord(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("ValUtopiaConstructor", "AddAkObjectRecord");

	Params::AValUtopiaConstructor_AddAkObjectRecord_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class Valhalla.ValGameMode_Vendor
// (Actor)

class UClass* AValGameMode_Vendor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ValGameMode_Vendor");

	return Clss;
}


// ValGameMode_Vendor Valhalla.Default__ValGameMode_Vendor
// (Public, ClassDefaultObject, ArchetypeObject)

class AValGameMode_Vendor* AValGameMode_Vendor::GetDefaultObj()
{
	static class AValGameMode_Vendor* Default = nullptr;

	if (!Default)
		Default = static_cast<AValGameMode_Vendor*>(AValGameMode_Vendor::StaticClass()->DefaultObject);

	return Default;
}

}


