#pragma once




namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x128 (0x580 - 0x458)
// BlueprintGeneratedClass BP_AIController_Player.BP_AIController_Player_C
class ABP_AIController_Player_C : public AValAIController
{
public:
	struct Engine_PointerToUberGraphFrame        UberGraphFrame;                                    // 0x458(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIPerceptionComponent*                AIPerception;                                      // 0x460(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                       Range;                                             // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AValObjective_Portal*>          ActivePortals;                                     // 0x470(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AValUtopiaObjectivePoint*>      AllObjectivePoints;                                // 0x480(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                         CanShoot;                                          // 0x490(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsPaused;                                          // 0x491(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2B9E[0x6];                                     // Fixing Size After Last Property  
	class UValThreatComponent*                   Threat_System;                                     // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UValAbilitySystemComponent*            ASC;                                               // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AValCharacter*                         ValChar;                                           // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                  BotClass;                                          // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  DestructionKey;                                    // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  DirectiveKey;                                      // 0x4C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  EnemyCenterPointKey;                               // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  FinalFogPhaseKey;                                  // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  FogCenterKey;                                      // 0x4D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  LeaderKey;                                         // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  LootCrateKey;                                      // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  POIActorKey;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  ReturnToBaseKey;                                   // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  TetherRadiusKey;                                   // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TetherRadius;                                      // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2BB7[0x4];                                     // Fixing Size After Last Property  
	double                                       WanderRadius;                                      // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        WarningShots;                                      // 0x518(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  WanderRadiusKey;                                   // 0x51C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  WarningShotsKey;                                   // 0x524(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_2BBB[0x4];                                     // Fixing Size After Last Property  
	TArray<class ABP_Loot_Crate_C*>              BuildingLoot;                                      // 0x530(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AValUtopiaObjectivePoint*              EnabledObjectivePoint;                             // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AUtopia_Constructor_V3_C*>      POIs;                                              // 0x548(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AValGameState_Frontier*                ValFrontierState;                                  // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AUtopia_Constructor_V3_C*>      VisitedPOIs;                                       // 0x560(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UValAISightComponent*                  SightComponent;                                    // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                  ShootingTag;                                       // 0x578(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABP_AIController_Player_C* GetDefaultObj();

	void OnTargetUpdated(class UObject* PreviousTarget, class UObject* NewTarget);
	void SetHearingSenseEnabled(bool Enable);
	void OnMatchStateChanged(class AGameModeBase* CallFunc_GetGameMode_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasMatchStarted_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AValGameState* K2Node_DynamicCast_AsVal_Game_State, bool K2Node_DynamicCast_bSuccess);
	void ConditionalEnableSenses(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AValGameState* K2Node_DynamicCast_AsVal_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasMatchStarted_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue);
	void OnEquipSlotUpdated(const struct GameplayTags_GameplayTag& EquipSlot, class FName EquipSlotKey, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_SelectInt_ReturnValue_1, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void RemoveBuildingLoot(class ABP_Loot_Crate_C* LootCrate, bool CallFunc_Array_RemoveItem_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void RemoveActivePOI();
	void RoyaleModeBindings(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate);
	void GetAcceptableRadius(double* SqrRadius, struct Engine_Vector_NetQuantize* Center, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AValGameState_Frontier* K2Node_DynamicCast_AsVal_Game_State_Frontier, bool K2Node_DynamicCast_bSuccess, class AValGameMode_Royale* K2Node_DynamicCast_AsVal_Game_Mode_Royale, bool K2Node_DynamicCast_bSuccess_1, const struct Valhalla_FogPhase& CallFunc_GetCurrentFogPhase_ReturnValue, double CallFunc_Square_ReturnValue, double CallFunc_Square_A_ImplicitCast);
	void On_AIShield_Percentage_Change(float Value, class FName ShieldKeyName, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, float CallFunc_GetShieldPercent_ReturnValue, bool CallFunc_IsValid_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast);
	void On_Match_State_Changed();
	void SeenLootItem(class AValPickup_Item* Item, class FName LootCommon, class FName LootUnCommon, class FName LootRare, class FName LootEpic, class FName LootLegendary, class AValPickup_Item* LootItem, enum class ERarity CallFunc_GetLootRarity_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_CanPickupLootItem_Result, bool CallFunc_CanPickupLootItem_Result_1, bool CallFunc_CanPickupLootItem_Result_2, bool CallFunc_CanPickupLootItem_Result_3, bool CallFunc_CanPickupLootItem_Result_4);
	bool CanPickupShieldPacks(bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_FTrunc_A_ImplicitCast);
	void CanPickupLootItem(enum class ERarity Rarity, bool* Result, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AValPlayerState* K2Node_DynamicCast_AsVal_Player_State, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_GetMaxPendingLegendaryLoot_ReturnValue, TArray<struct Valhalla_PendingItem>& CallFunc_GetPendingInventory_Inventory, int32 CallFunc_GetMaxPendingLoot_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, TArray<struct Valhalla_PendingItem>& CallFunc_GetPendingLegendaryInventory_Inventory, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1);
	bool HasVisitedPOI(class AUtopia_Constructor_V3_C* POI, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, class UObject* CallFunc_GetValueAsObject_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void GetPossiblePOIs(TArray<class AUtopia_Constructor_V3_C*>* POIs, TArray<class AUtopia_Constructor_V3_C*>& CallFunc_FilterPOIsByBuildingType_Filtered, TArray<class AUtopia_Constructor_V3_C*>& CallFunc_GetAllActorsOfClass_OutActors, TArray<class AUtopia_Constructor_V3_C*>& CallFunc_FilterPOIsByFog_Filtered, TArray<class AUtopia_Constructor_V3_C*>& CallFunc_FilterPOIsByFog_Filtered_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void FilterPOIsByFog(TArray<class AUtopia_Constructor_V3_C*>& POIs, TArray<class AUtopia_Constructor_V3_C*>* Filtered, const struct Engine_Vector_NetQuantize& FogCenter, double SqrFogRadius, const TArray<class AUtopia_Constructor_V3_C*>& FilteredPOIs, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AUtopia_Constructor_V3_C* CallFunc_Array_Get_Item, const struct CoreUObject_Vector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double CallFunc_Square_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, double CallFunc_GetAcceptableRadius_SqrRadius, const struct Engine_Vector_NetQuantize& CallFunc_GetAcceptableRadius_Center, double CallFunc_Vector_Distance2DSquared_ReturnValue, double CallFunc_Add_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue);
	void FilterPOIsByBuildingType(TArray<class AUtopia_Constructor_V3_C*>& POIs, TArray<class AUtopia_Constructor_V3_C*>* Filtered, const TArray<class AUtopia_Constructor_V3_C*>& FilteredPOIs, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AUtopia_Constructor_V3_C* CallFunc_Array_Get_Item, TScriptInterface<class IValBuildingPOI> CallFunc_GetBuildingType_self_CastInput, enum class EBuildingType CallFunc_GetBuildingType_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void AddVisitedPOI(class AUtopia_Constructor_V3_C* New, class AUtopia_Constructor_V3_C* Previous, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, int32 CallFunc_Array_AddUnique_ReturnValue);
	bool CanPickupHealthPacks(bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttribute_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, double CallFunc_FTrunc_A_ImplicitCast);
	bool CanPickupBoost(bool CallFunc_HasPendingBoostSpace_ReturnValue);
	bool CanInteractWithChest(class UObject* LootCrate, class AValLootCrate* K2Node_DynamicCast_AsVal_Loot_Crate, bool K2Node_DynamicCast_bSuccess, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AValCharacter* K2Node_DynamicCast_AsVal_Character, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Not_PreBool_ReturnValue, TScriptInterface<class IValInteractable> CallFunc_CanInteract_self_CastInput, bool CallFunc_CanInteract_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void RemoveTetherEffects(bool CallFunc_IsValid_ReturnValue, class ABP_CharPlayer_Test_C* K2Node_DynamicCast_AsBP_Char_Player_Test, bool K2Node_DynamicCast_bSuccess, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UValAbilitySystemComponent* K2Node_DynamicCast_AsVal_Ability_System_Component, bool K2Node_DynamicCast_bSuccess_1);
	void UpdatePredictedLocation(const struct CoreUObject_Vector& PredictedLocation, class FName PredictedLocationKeyName, bool CallFunc_IsValid_ReturnValue);
	void UpdateAICanSetTargetActor(class APawn* CallFunc_K2_GetPawn_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, TScriptInterface<class IBI_AI_C> K2Node_DynamicCast_AsBI_AI, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesImplementInterface_ReturnValue, class UValThreatComponent* CallFunc_GetThreatSystem_ThreatSystem);
	void UpdateAICanShoot(class FName NoShoot, bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateAIIsPaused(bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateFogDistance(class FName DamageFogActor, class FName DistanceToWall, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class AValUtopiaObjectivePoint* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TArray<class AValUtopiaObjectivePoint*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, double CallFunc_Subtract_DoubleDouble_B_ImplicitCast, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast);
	void UpdateAIHealth(class FName HealthKeyName, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetHealthPercent_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast);
	void UpdateAIAmmo(class FName SpecialtyAmmoKeyName, class FName AmmoKeyName, class FName CallFunc_MakeLiteralName_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue, double CallFunc_FMax_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, class AValCharacter* K2Node_DynamicCast_AsVal_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, const struct Valhalla_ValAmmoData& CallFunc_GetCurrentAmmo_ReturnValue, double CallFunc_Divide_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_1, class FName K2Node_Select_Default, bool CallFunc_IsGameplayTagValid_ReturnValue, class FName K2Node_Select_Default_1, double CallFunc_FMax_A_ImplicitCast, double CallFunc_Divide_DoubleDouble_A_ImplicitCast, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast);
	void OnBotClassSet(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void HasDirective(enum class EBotDirective Directive, bool* Current, uint8 CallFunc_MakeLiteralByte_ReturnValue, uint8 CallFunc_GetValueAsEnum_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void FrontierModeBindings(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate);
	void On_Portal_State(enum class EGameObjectiveState Value, class FName PatrolPoint, class FName PortalDistance, class FName PortalPoint);
	void SetBlackboardValues(class FName DefendPointKey, class FName RangeKeyName, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue_1, const struct CoreUObject_Vector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast, float CallFunc_SetValueAsFloat_FloatValue_ImplicitCast_1);
	void ReceivePossess(class APawn* PossessedPawn);
	void OnUsingBlackBoard(class UBlackboardComponent* BlackboardComp, class UBlackboardData* BlackboardAsset);
	void ReceiveTick(float DeltaSeconds);
	void UpdateBlackboardKeyValueAsBool(class FName Key, bool Value);
	void SetTetherRadius(float Radius);
	void UpdateBlackboardKeyValueAsVector(class FName Key, const struct CoreUObject_Vector& Value);
	void OnTargetActorUpdated(class UObject* PreviousTarget, class UObject* NewTarget);
	void ReceiveBeginPlay();
	void OnTargetPerceptionUpdated(class AActor* Actor, const struct AIModule_AIStimulus& Stimulus);
	void UpdateBlackboardKeyValueAsObject(class FName Key, class UObject* Value);
	void OnBotLeaderSet(class AValCharacter* Leader);
	void OnLootCrateOpened(class AValLootCrate* LootCrate);
	void OnPOILooted();
	void OnFogActive();
	void OnFogWaitPhaseStart();
	void OnFogPhaseStart();
	void BndEvt__BP_PlayerAIController_Val_AIPerception_K2Node_ComponentBoundEvent_6_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct AIModule_AIStimulus& Stimulus);
	void ToggleTargetingAllAI();
	void ToggleShootingAllAI();
	void TogglePauseAllAI();
	void OnAIHealthPercentageChanged(float Value);
	void OnAIReservedAmmoChanged(float OldValue, float NewValue);
	void OnSightGainedOnActor(class AActor* Actor);
	void OnSightLostOnActor(class AActor* Actor);
	void OnAIDamaged(const struct Valhalla_DamageData& DamageData);
	void ExecuteUbergraph_BP_AIController_Player(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, class UObject* K2Node_CustomEvent_PreviousTarget, class UObject* K2Node_CustomEvent_NewTarget, class FName K2Node_Event_Key_1, const struct CoreUObject_Vector& K2Node_Event_Value_1, bool CallFunc_IsValid_ReturnValue_1, class AActor* K2Node_CustomEvent_Actor_2, const struct AIModule_AIStimulus& K2Node_CustomEvent_Stimulus, class FName K2Node_Event_Key, class UObject* K2Node_Event_Value, TSubclassOf<class UAISense> CallFunc_GetSenseClassForStimulus_ReturnValue, const class FString& CallFunc_GetClassDisplayName_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, bool K2Node_SwitchString_CmpSuccess, class AValCharacter* K2Node_Event_Leader, class FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class FName CallFunc_MakeLiteralName_ReturnValue_1, class AValLootCrate* K2Node_CustomEvent_LootCrate, float K2Node_Event_Radius, class UObject* CallFunc_GetValueAsObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class FName K2Node_Event_Key_2, bool K2Node_Event_Value_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class AGameStateBase* CallFunc_GetGameState_ReturnValue, float K2Node_Event_DeltaSeconds, class AValGameState* K2Node_DynamicCast_AsVal_Game_State, bool K2Node_DynamicCast_bSuccess, class UBlackboardComponent* K2Node_Event_BlackboardComp, class UBlackboardData* K2Node_Event_BlackboardAsset, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_6, class AValGameState_Frontier* K2Node_DynamicCast_AsVal_Game_State_Frontier, bool K2Node_DynamicCast_bSuccess_1, class AActor* K2Node_ComponentBoundEvent_Actor, const struct AIModule_AIStimulus& K2Node_ComponentBoundEvent_Stimulus, float K2Node_CustomEvent_Value, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, float K2Node_CustomEvent_OldValue, float K2Node_CustomEvent_NewValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, class UValAISightComponent* CallFunc_GetComponentByClass_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, class AActor* K2Node_CustomEvent_Actor_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, class AActor* K2Node_CustomEvent_Actor, class APawn* K2Node_Event_PossessedPawn, class AValCharacter* K2Node_DynamicCast_AsVal_Character, bool K2Node_DynamicCast_bSuccess_2, const struct Valhalla_DamageData& K2Node_CustomEvent_DamageData, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, bool CallFunc_IsValid_ReturnValue_7, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UValAbilitySystemComponent* K2Node_DynamicCast_AsVal_Ability_System_Component, bool K2Node_DynamicCast_bSuccess_3, bool Temp_bool_Variable, class AActor* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue_8, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_8, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_IsCybridCalmTowardsTarget_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_9);
};

}


